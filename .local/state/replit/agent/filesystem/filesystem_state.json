<<<<<<< HEAD
{"file_contents":{"client/src/contexts/LanguageContext.tsx":{"content":"import { createContext, useContext, useState, useEffect, ReactNode } from 'react';\n\ntype Language = 'en' | 'ar';\n\ninterface LanguageContextType {\n  language: Language;\n  setLanguage: (lang: Language) => void;\n  t: (key: string) => string;\n}\n\nconst LanguageContext = createContext<LanguageContextType | undefined>(undefined);\n\nconst translations = {\n  en: {\n    // Navigation\n    'nav.home': 'Home',\n    'nav.about': 'About',\n    'nav.services': 'Services',\n    'nav.blog': 'Blog',\n    'nav.contact': 'Contact Us',\n    'nav.book': 'Book an Appointment',\n    \n    // Hero\n    'hero.headline': 'Dr. Paws Veterinary Clinic',\n    'hero.tagline': 'Compassionate Care for Your Beloved Pets',\n    'hero.subheadline': 'Providing the Highest Quality Veterinary Care',\n    'hero.description': \"Dr. Paws Veterinary Clinic offers cutting-edge technology in veterinary care. Through our expert team and advanced diagnostic and treatment equipment, we ensure comprehensive care from routine checkups to precise surgeries.\",\n    'hero.cta': 'Book Your Appointment Today',\n    'hero.readMore': 'Read More',\n    \n    // About\n    'about.headline': 'Committed to Your Pet\\'s Well-being, Every Step of the Way',\n    'about.description': \"At Dr. Paws Veterinary Clinic, we understand the special bond you share with your pets. Our experienced and compassionate team is dedicated to providing comprehensive, high-quality veterinary care to keep your furry companions healthy and happy throughout their lives. We strive to create a comfortable and welcoming environment for both you and your pet.\",\n    'about.readMore': 'Read More',\n    \n    // Services\n    'services.headline': 'What we offer?',\n    'services.description': \"Dr. Paws Veterinary Clinic provides a comprehensive range of services to keep your pets healthy at every stage of life. From routine checkups to advanced diagnostics and surgery, we're here for all your pet's healthcare needs.\",\n    'services.readMore': 'Read more',\n    'services.wellness.title': 'Wellness Exams',\n    'services.wellness.description': 'Comprehensive health checkups to keep your pet in optimal condition.',\n    'services.emergency.title': 'Emergency Care',\n    'services.emergency.description': '24/7 emergency services for urgent medical situations.',\n    'services.vaccinations.title': 'Vaccinations',\n    'services.vaccinations.description': 'Complete vaccination programs to protect your pets from diseases.',\n    'services.surgery.title': 'Surgery',\n    'services.surgery.description': 'Advanced surgical procedures with state-of-the-art equipment.',\n    'services.diagnostics.title': 'Diagnostics',\n    'services.diagnostics.description': 'Advanced diagnostic imaging and laboratory services.',\n    'services.dental.title': 'Dental Care',\n    'services.dental.description': 'Professional dental cleaning and oral health services.',\n    \n    // Service Packages\n    'packages.headline': 'Service Packages',\n    'packages.description': \"Choose the perfect care package for your pet's needs. All packages include comprehensive veterinary care tailored to keep your beloved companion healthy and happy.\",\n    'packages.basic.name': 'Basic Care',\n    'packages.basic.price': '299',\n    'packages.basic.period': 'SAR/year',\n    'packages.basic.feature1': 'Annual Wellness Exam',\n    'packages.basic.feature2': 'Basic Vaccinations',\n    'packages.basic.feature3': 'Parasite Prevention',\n    'packages.basic.feature4': 'Dental Consultation',\n    'packages.basic.feature5': 'Nutrition Guidance',\n    'packages.complete.name': 'Complete Care',\n    'packages.complete.price': '599',\n    'packages.complete.period': 'SAR/year',\n    'packages.complete.feature1': 'Bi-Annual Wellness Exams',\n    'packages.complete.feature2': 'Complete Vaccination Package',\n    'packages.complete.feature3': 'Advanced Parasite Prevention',\n    'packages.complete.feature4': 'Dental Cleaning Included',\n    'packages.complete.feature5': 'Blood Work & Diagnostics',\n    'packages.complete.feature6': 'Emergency Care Discount',\n    'packages.premium.name': 'Premium Care',\n    'packages.premium.price': '999',\n    'packages.premium.period': 'SAR/year',\n    'packages.premium.feature1': 'Quarterly Wellness Exams',\n    'packages.premium.feature2': 'Premium Vaccination Package',\n    'packages.premium.feature3': 'Year-Round Parasite Prevention',\n    'packages.premium.feature4': 'Professional Dental Care',\n    'packages.premium.feature5': 'Comprehensive Lab Work',\n    'packages.premium.feature6': 'Priority Emergency Care',\n    'packages.premium.feature7': '24/7 Vet Consultation',\n    'packages.popular': 'Most Popular',\n    'packages.bookNow': 'Book Now',\n    \n    // Media\n    'media.headline': 'Our Media',\n    'media.description': 'Take a closer look at our state-of-the-art facilities and see how we provide exceptional care for your beloved pets in a warm and welcoming environment.',\n    \n    // Why Choose Us\n    'why.headline': 'Why Choose Dr. Paws Veterinary Clinic?',\n    'why.reason1.title': 'Comprehensive & Affectionate Care',\n    'why.reason1.description': 'We treat every pet as if it were our own, with kindness, respect, and understanding.',\n    'why.reason2.title': 'Experienced Team',\n    'why.reason2.description': 'Our veterinarians and support staff have years of experience and are passionate about animal health.',\n    'why.reason3.title': 'State-of-the-Art Facility',\n    'why.reason3.description': 'We utilize advanced technology and equipment to provide the best possible care.',\n    'why.reason4.title': 'Tailored Plan',\n    'why.reason4.description': 'We tailor our treatment plans to meet the unique needs of each pet.',\n    'why.readMore': 'Read More',\n    \n    // Reviews\n    'reviews.headline': 'What Our Customers Say',\n    'reviews.1.name': 'Ahmed Al-Rashid',\n    'reviews.1.text': 'Excellent service! The staff was very caring and professional with my cat. Highly recommend Dr. Paws!',\n    'reviews.2.name': 'Sarah Johnson',\n    'reviews.2.text': 'My dog received the best care here. The doctors are knowledgeable and the clinic is very clean.',\n    'reviews.3.name': 'Mohammed Hassan',\n    'reviews.3.text': 'Great experience overall. The veterinarian explained everything clearly and my pet feels much better.',\n    'reviews.4.name': 'Emily Rodriguez',\n    'reviews.4.text': 'The emergency service was outstanding. They took care of my rabbit immediately and professionally.',\n    'reviews.5.name': 'Khalid Abdullah',\n    'reviews.5.text': 'Best veterinary clinic in Riyadh! The staff is friendly and they truly care about animals.',\n    'reviews.6.name': 'Jennifer Lee',\n    'reviews.6.text': 'Very impressed with the facilities and the level of care. My parrot received excellent treatment.',\n    'reviews.7.name': 'Omar Saeed',\n    'reviews.7.text': 'Professional team and modern equipment. They made my pet feel comfortable during the visit.',\n    'reviews.8.name': 'Lisa Martinez',\n    'reviews.8.text': 'Wonderful experience! The grooming service was perfect and my dog looks amazing. Thank you!',\n    \n    // Contact\n    'contact.headline': 'Contact Us',\n    'contact.subheadline': 'Contact Dr. Paws Veterinary Clinic & Schedule Your Pet\\'s Appointment Today!',\n    'contact.name': 'Name',\n    'contact.phone': 'Phone Number',\n    'contact.email': 'Email',\n    'contact.message': 'Message',\n    'contact.submit': 'Submit',\n    'contact.success': 'Thank you! We will contact you soon.',\n    \n    // Book Now Page\n    'bookNow.title': 'Book Now',\n    'bookNow.welcome': 'We\\'re happy that you want to book and be part of our family.',\n    'bookNow.chooseBranch': 'Choose from our branches for booking',\n    'bookNow.bookingMethods': 'Choose Your Preferred Booking Method',\n    'bookNow.whatsappBooking': 'Book via WhatsApp',\n    'bookNow.phoneBooking': 'Book by Phone',\n    'bookNow.programBooking': 'Book through our program',\n    'bookNow.riyadh': 'Riyadh',\n    'bookNow.riyadhBranches': 'Riyadh Branches',\n    'bookNow.matherBranch': 'Al-Mather Branch',\n    'bookNow.sahafahBranch': 'Al-Sahafa Branch',\n    'bookNow.sahafahWhatsApp': '0552030564',\n    'bookNow.matherWhatsApp': '0531353667',\n    'bookNow.sahafahPhone': '0552030564',\n    'bookNow.matherPhone': '0531353667',\n    'bookNow.jeddah': 'Jeddah',\n    'bookNow.jeddahBranches': 'Jeddah Branches',\n    'bookNow.comingSoon': 'Coming Soon',\n    \n    // About Page\n    'aboutPage.header': 'Dr. Paws Veterinary Care Center',\n    'aboutPage.subheader': 'Expertise You Can Trust',\n    'aboutPage.whoWeAre.title': 'About Dr. Paws – Who We Are',\n    'aboutPage.whoWeAre.subtitle': 'Dr. Paws Veterinary Clinic: Your Partner in Pet Care',\n    'aboutPage.whoWeAre.para1': 'We believe that every pet deserves a happy and healthy life. More than just a veterinary clinic, we are your partners in caring for your furry friend. Our dedicated team is committed to providing comprehensive, high-quality care, from routine check-ups to complex surgeries.',\n    'aboutPage.whoWeAre.para2': 'With years of experience in veterinary care, Dr. Paws offers a wide range of services to meet all your pet\\'s needs. Using the latest technology and equipment, we diagnose and treat various health conditions, ensuring your pet\\'s health and well-being throughout their life. We are proud to be a trusted clinic for veterinary care in Riyadh.',\n    'aboutPage.whoWeAre.para3': 'We strive to create a welcoming and comfortable environment for both you and your furry companions, making every visit a positive experience. We are proud to be a trusted veterinary care center in the Riyadh community.',\n    'aboutPage.vision.title': 'Our Vision',\n    'aboutPage.vision.content': 'Dr. Paws clinics strive to be the premier destination for pet care, providing the highest quality healthcare for our furry friends.',\n    'aboutPage.mission.title': 'Our Mission',\n    'aboutPage.mission.content': 'Our mission is to deliver compassionate, advanced veterinary care. We are committed to providing the highest quality medical services to pets, from routine check-ups to specialized treatments, all carried out by our experienced team in a caring environment.',\n    'aboutPage.whyChoose.title': 'Why Choose Dr. Paws Veterinary Clinic?',\n    'aboutPage.whyChoose.reason1.title': 'Compassionate Care',\n    'aboutPage.whyChoose.reason1.description': 'We treat every pet as if they were our own, with kindness, respect, and understanding.',\n    'aboutPage.whyChoose.reason2.title': 'Experienced Team',\n    'aboutPage.whyChoose.reason2.description': 'Our veterinarians and support staff have years of experience and are passionate about animal health.',\n    'aboutPage.whyChoose.reason3.title': 'State-of-the-Art Facility',\n    'aboutPage.whyChoose.reason3.description': 'We utilize advanced technology and equipment to provide the best possible care.',\n    'aboutPage.whyChoose.reason4.title': 'Personalized Approach',\n    'aboutPage.whyChoose.reason4.description': 'We tailor our treatment plans to meet the unique needs of each pet.',\n    'aboutPage.doctors.title': 'Our Doctors',\n    'aboutPage.doctors.description': 'Our team of experienced and compassionate veterinarians is the heart of Dr. Paws Veterinary Care Center. They are dedicated to providing the highest standard of care and are passionate about improving the lives of animals. With diverse areas of expertise, our doctors work collaboratively to ensure your pet receives the best possible treatment.',\n    'aboutPage.doctors.noInfo': 'Doctor profiles coming soon',\n    'aboutPage.partners.title': 'Our Partners',\n    'aboutPage.partners.noInfo': 'Partner information coming soon',\n    'aboutPage.careers.title': 'Careers / Join Our Team',\n    'aboutPage.careers.description': 'Looking for a rewarding career in animal health? Dr. Paws Veterinary Care Center offers exciting opportunities for professional growth and development in a dynamic and fast-paced environment.',\n    'aboutPage.careers.personalInfo': 'Personal Information',\n    'aboutPage.careers.fullName': 'Full Name',\n    'aboutPage.careers.email': 'Email Address',\n    'aboutPage.careers.phone': 'Phone Number',\n    'aboutPage.careers.professionalInfo': 'Professional Information',\n    'aboutPage.careers.resume': 'Resume/CV Upload',\n    'aboutPage.careers.coverLetter': 'Cover Letter (Optional)',\n    'aboutPage.careers.position': 'Desired Position (if known)',\n    'aboutPage.careers.startDate': 'Available Start Date',\n    'aboutPage.careers.experience': 'Relevant Experience',\n    'aboutPage.careers.experiencePlaceholder': 'e.g., veterinary technician, veterinary assistant, receptionist',\n    'aboutPage.careers.certifications': 'Veterinary Certifications (if applicable)',\n    'aboutPage.careers.education': 'Education Level and Institution',\n    'aboutPage.careers.interests': 'Areas of Interest',\n    'aboutPage.careers.interestsPlaceholder': 'e.g., surgery, internal medicine, emergency care',\n    'aboutPage.careers.submit': 'Submit Application',\n    \n    // Services Page\n    'servicesPage.header': 'Our Services',\n    'servicesPage.subheader': 'Experience exceptional veterinary services at Dr. Paws. We offer a full range of care for your pets, from routine checkups to advanced treatments.',\n    'servicesPage.bookAppointment': 'Book an appointment',\n    \n    'servicesPage.examinations.title': 'Periodic Medical Examinations',\n    'servicesPage.examinations.description': 'At Dr. Paws, we believe preventative care is essential for a long and healthy life for all pets. Our periodic pet examinations, also known as wellness exams or checkups, are a crucial part of our comprehensive veterinary services. They allow our veterinarians to assess your pet\\'s overall health, detect potential problems early, and provide personalized recommendations.',\n    'servicesPage.examinations.canine': 'Canine Examinations: Vital signs, cardiopulmonary auscultation, ophthalmologic, otoscopic, oral, dermatological, abdominal, and musculoskeletal evaluations.',\n    'servicesPage.examinations.feline': 'Feline Examinations: Gentle checkups covering vital signs, eyes, ears, oral health, abdomen, coat, and skin.',\n    'servicesPage.examinations.avian': 'Avian Examinations: Specialized care including physical examination, feather and beak assessment, weight, gland checks, and abdominal palpation.',\n    \n    'servicesPage.grooming.title': 'Shower & Grooming Services',\n    'servicesPage.grooming.description': 'Maintain your pet\\'s hygiene and comfort with our grooming and cleaning services.',\n    'servicesPage.grooming.feature1': 'Nail clipping',\n    'servicesPage.grooming.feature2': 'Ear cleaning',\n    'servicesPage.grooming.feature3': 'Bath and drying with safe shampoos',\n    'servicesPage.grooming.feature4': 'Hair combing and grooming (breed-specific)',\n    \n    'servicesPage.diagnostics.title': 'Diagnostic Tests',\n    'servicesPage.diagnostics.description': 'We provide accurate, rapid diagnostic testing with advanced technology:',\n    'servicesPage.diagnostics.lab': 'Laboratory Testing: Blood chemistry, CBC, urine analysis, parasite and fungal testing',\n    'servicesPage.diagnostics.imaging': 'Imaging: X-rays, dental X-rays, ultrasound',\n    'servicesPage.diagnostics.advanced': 'Advanced Diagnostics: Microscopy and endoscopy',\n    \n    'servicesPage.surgery.title': 'Medical Surgeries',\n    'servicesPage.surgery.description': 'Our surgical team performs a wide range of operations using modern, safe techniques:',\n    'servicesPage.surgery.feature1': 'Sterilization (spay/neuter)',\n    'servicesPage.surgery.feature2': 'Orthopedic surgery',\n    'servicesPage.surgery.feature3': 'Digestive system operations',\n    'servicesPage.surgery.feature4': 'Rhinoplasty (for brachycephalic breeds)',\n    'servicesPage.surgery.feature5': 'Urinary tract surgery',\n    \n    'servicesPage.dental.title': 'Dental Services',\n    'servicesPage.dental.description': 'Comprehensive dental care to protect your pet\\'s teeth and gums:',\n    'servicesPage.dental.feature1': 'Professional teeth cleaning',\n    'servicesPage.dental.feature2': 'Dental check-ups',\n    'servicesPage.dental.feature3': 'Scaling and root planing',\n    'servicesPage.dental.feature4': 'Tooth extractions and oral surgery',\n    \n    'servicesPage.vaccination.title': 'Periodic Vaccinations',\n    'servicesPage.vaccination.description': 'Protect your pets with essential vaccinations and deworming schedules:',\n    'servicesPage.vaccination.feature1': 'Cat vaccines (Trivalent & Quadrivalent)',\n    'servicesPage.vaccination.feature2': 'Dog vaccines (Pentavalent & Rabies)',\n    'servicesPage.vaccination.feature3': 'Deworming medications',\n    \n    'servicesPage.travel.title': 'Pet Travel Procedures',\n    'servicesPage.travel.description': 'Comprehensive travel assistance for domestic and international trips:',\n    'servicesPage.travel.feature1': 'Health certificates',\n    'servicesPage.travel.feature2': 'Rabies testing and documentation',\n    'servicesPage.travel.feature3': 'Assistance with travel forms and destination requirements',\n    \n    'servicesPage.boarding.title': 'Boarding Services',\n    'servicesPage.boarding.description': 'Comfortable and safe accommodation options for your pets:',\n    'servicesPage.boarding.therapeutic': 'Therapeutic Pet Hotel: Post-surgery care, chronic condition management, and close monitoring',\n    'servicesPage.boarding.fungi': 'Fungi Treatment Hotel: Isolated treatment rooms with specialized disinfection and medication',\n    \n    'servicesPage.intensiveCare.title': 'Intensive Care',\n    'servicesPage.intensiveCare.description': 'Dedicated ICU care for critical pets:',\n    'servicesPage.intensiveCare.feature1': 'Organ failure management (kidney, liver, heart)',\n    'servicesPage.intensiveCare.feature2': 'Metabolic and endocrine disorders',\n    'servicesPage.intensiveCare.feature3': 'Severe injuries and trauma',\n    'servicesPage.intensiveCare.feature4': 'Post-operative care',\n    \n    'servicesPage.emergency.title': 'Emergency Services',\n    'servicesPage.emergency.description': '24/7 emergency care for urgent cases such as:',\n    'servicesPage.emergency.feature1': 'Trauma',\n    'servicesPage.emergency.feature2': 'Breathing difficulties',\n    'servicesPage.emergency.feature3': 'Bleeding or poisoning',\n    'servicesPage.emergency.feature4': 'Seizures and bloat',\n    'servicesPage.emergency.numbers': 'Emergency Numbers:',\n    'servicesPage.emergency.sahafa': 'Al-Sahafa Branch: 05520 30564',\n    'servicesPage.emergency.mather': 'Al-Mather Branch: 05313 53667',\n    \n    'servicesPage.homeCare.title': 'Home Care Services',\n    'servicesPage.homeCare.description': 'Convenient veterinary care at home:',\n    'servicesPage.homeCare.feature1': 'Wellness exams',\n    'servicesPage.homeCare.feature2': 'Vaccinations',\n    'servicesPage.homeCare.feature3': 'Sample collection (blood, urine, fecal)',\n    \n    // Footer\n    'footer.description': 'From wellness exams to advanced treatments, Dr. Paws provides comprehensive veterinary care for your pet\\'s every need.',\n    'footer.contactInfo': 'Contact Information',\n    'footer.call': 'Call',\n    'footer.generalPhone': '920 003 045',\n    'footer.emergency': 'Emergency: 24/7',\n    'footer.mobile': 'Mobile',\n    'footer.sahafahBranch': 'Al-Sahafa Branch',\n    'footer.sahafahAddress': 'Dr.Paws Veterinary Clinic, Al Thoumamah Rd, As Sahafah, Riyadh 13315',\n    'footer.sahafahPhone': '05 5203 0564',\n    'footer.sahafahMapUrl': 'https://www.google.com/maps/search/?api=1&query=Dr.Paws+Veterinary+Clinic,Al+Thoumamah+Rd,As+Sahafah,Riyadh+13315',\n    'footer.matherBranch': 'Al-Mather Branch',\n    'footer.matherAddress': 'Dr.Paws Veterinary Clinic, Prince Sultan Bin Abdulaziz Rd, Al Mathar Ash Shamali, Riyadh 12314',\n    'footer.matherPhone': '05 3135 3667',\n    'footer.matherMapUrl': 'https://maps.app.goo.gl/PzCrrqSLmnCE487c9',\n    'footer.hours': 'Working Hours',\n    'footer.satThu': 'Saturday - Thursday : From 09:00 AM to 11:00 PM',\n    'footer.fri': 'Friday : From 03:00 PM to 11:00 PM',\n    'footer.email': 'info@drpaws-sa.com',\n    'footer.follow': 'Stay in touch',\n    \n    // Promotional Modal\n    'promo.title': 'Jeddah Branch Opening!',\n    'promo.description': 'Coming soon! Register now and get 20% discount for 6 months after opening',\n    'promo.firstName': 'First Name',\n    'promo.lastName': 'Last Name',\n    'promo.email': 'Email Address',\n    'promo.phoneNumber': 'Phone Number',\n    'promo.required': '*',\n    'promo.firstNamePlaceholder': 'Enter your first name',\n    'promo.lastNamePlaceholder': 'Enter your last name',\n    'promo.emailPlaceholder': 'example@email.com',\n    'promo.phoneNumberPlaceholder': '05xxxxxxxx',\n    'promo.submit': 'Register Now and Get Discount',\n    'promo.submitting': 'Registering...',\n    'promo.successTitle': 'Registration Successful!',\n    'promo.successMessage': 'We will contact you soon about the special opening offer',\n    'promo.errorTitle': 'Error',\n    'promo.errorGeneric': 'Registration failed, please try again',\n    'promo.errorDuplicate': 'Phone number already registered',\n    'promo.phoneAlreadyRegistered': 'This number has already been registered before.',\n    'promo.phoneNumberMustBe10Digits': 'The phone number must be 10 digits.',\n    'promo.emailAlreadyRegistered': 'This email has already been registered before.',\n    'promo.invalidEmail': 'Please enter a valid email address.',\n    'promo.close': 'Close',\n    'promo.successSubscription': 'You have successfully subscribed to the offer!',\n    'promo.subscriptionCode': 'Your subscription code is',\n    'promo.okButton': 'OK',\n    'promo.doNotShowAgain': 'Do not show again',\n  },\n  ar: {\n    // Navigation\n    'nav.home': 'الرئيسية',\n    'nav.about': 'من نحن',\n    'nav.services': 'الخدمات',\n    'nav.blog': 'المدونة',\n    'nav.contact': 'تواصل معنا',\n    'nav.book': 'احجز موعد',\n    \n    // Hero\n    'hero.headline': 'عيادات د. باوز البيطرية',\n    'hero.tagline': 'رعاية من القلب لحيواناتكم الأليفة',\n    'hero.subheadline': 'عيادة بيطرية متخصصة تمنحهم أفضل رعاية ممكنة',\n    'hero.description': 'عيادة د. باوز تُقدّم أحدث ما توصلت إليه التكنولوجيا في مجال الرعاية البيطرية. من خلال فريقنا الخبير وباستخدام أحدث الأجهزة والتقنيات التشخيصية والعلاجية، نضمن تقديم رعاية شاملة ومتطورة تشمل جميع الخدمات من الفحوصات الروتينية إلى الجراحات الدقيقة.',\n    'hero.cta': 'احجز موعدك الآن',\n    'hero.readMore': 'اقرأ المزيد',\n    \n    // About\n    'about.headline': 'عيادات د. باوز البيطرية: رعاية متكاملة لصحة حيوانك الأليف',\n    'about.description': 'د. باوز هي عيادة بيطرية تقدّم أحدث ما توصلت إليه التكنولوجيا في مجال الرعاية البيطرية. من خلال فريقنا من الخبراء، وباستخدام أحدث الأجهزة والتقنيات التشخيصية والعلاجية، نضمن توفير رعاية شاملة ومتطورة تشمل كافة الخدمات، من الفحوصات الروتينية وصولاً إلى الجراحات الدقيقة. هدفنا هو الحفاظ على صحة ورفاهية حيواناتكم الأليفة في بيئة مريحة وآمنة.',\n    'about.readMore': 'اقرأ المزيد',\n    \n    // Services\n    'services.headline': 'ماذا نقدم؟',\n    'services.description': 'تقدم عيادات د. باوز البيطرية باقة متكاملة من الخدمات البيطرية الشاملة لتلبية احتياجات حيوانك الأليف في جميع مراحل حياته. من الفحوصات الوقائية إلى التشخيصات المتقدمة والجراحات المتخصصة. نحن هنا لضمان صحة أليفك.',\n    'services.readMore': 'اقرأ المزيد',\n    'services.wellness.title': 'الفحوصات الصحية',\n    'services.wellness.description': 'فحوصات صحية شاملة للحفاظ على حيوانك الأليف في حالة مثالية.',\n    'services.emergency.title': 'الرعاية الطارئة',\n    'services.emergency.description': 'خدمات طوارئ على مدار الساعة للحالات الطبية العاجلة.',\n    'services.vaccinations.title': 'التطعيمات',\n    'services.vaccinations.description': 'برامج تطعيم كاملة لحماية حيواناتك من الأمراض.',\n    'services.surgery.title': 'الجراحة',\n    'services.surgery.description': 'إجراءات جراحية متقدمة بأحدث المعدات.',\n    'services.diagnostics.title': 'التشخيص',\n    'services.diagnostics.description': 'تصوير تشخيصي متقدم وخدمات مخبرية.',\n    'services.dental.title': 'العناية بالأسنان',\n    'services.dental.description': 'تنظيف أسنان احترافي وخدمات صحة الفم.',\n    \n    // Service Packages\n    'packages.headline': 'باقات الخدمات',\n    'packages.description': 'اختر باقة الرعاية المثالية التي تناسب احتياجات حيوانك الأليف. جميع الباقات تشمل رعاية بيطرية شاملة مصممة للحفاظ على صحة وسعادة رفيقك المحبوب.',\n    'packages.basic.name': 'الرعاية الأساسية',\n    'packages.basic.price': '٢٩٩',\n    'packages.basic.period': 'ريال/سنة',\n    'packages.basic.feature1': 'فحص صحي سنوي',\n    'packages.basic.feature2': 'تطعيمات أساسية',\n    'packages.basic.feature3': 'الوقاية من الطفيليات',\n    'packages.basic.feature4': 'استشارة الأسنان',\n    'packages.basic.feature5': 'إرشادات التغذية',\n    'packages.complete.name': 'الرعاية الكاملة',\n    'packages.complete.price': '٥٩٩',\n    'packages.complete.period': 'ريال/سنة',\n    'packages.complete.feature1': 'فحوصات صحية نصف سنوية',\n    'packages.complete.feature2': 'باقة تطعيمات كاملة',\n    'packages.complete.feature3': 'وقاية متقدمة من الطفيليات',\n    'packages.complete.feature4': 'تنظيف الأسنان متضمن',\n    'packages.complete.feature5': 'فحوصات الدم والتشخيص',\n    'packages.complete.feature6': 'خصم على الرعاية الطارئة',\n    'packages.premium.name': 'الرعاية المميزة',\n    'packages.premium.price': '٩٩٩',\n    'packages.premium.period': 'ريال/سنة',\n    'packages.premium.feature1': 'فحوصات صحية ربع سنوية',\n    'packages.premium.feature2': 'باقة تطعيمات مميزة',\n    'packages.premium.feature3': 'وقاية على مدار العام',\n    'packages.premium.feature4': 'رعاية أسنان احترافية',\n    'packages.premium.feature5': 'فحوصات مخبرية شاملة',\n    'packages.premium.feature6': 'رعاية طارئة ذات أولوية',\n    'packages.premium.feature7': 'استشارة بيطرية ٢٤/٧',\n    'packages.popular': 'الأكثر شعبية',\n    'packages.bookNow': 'احجز الآن',\n    \n    // Media\n    'media.headline': 'الوسائط',\n    'media.description': 'ألقِ نظرة فاحصة على مرافقنا الحديثة وشاهد كيف نقدم رعاية استثنائية لحيواناتك الأليفة في بيئة دافئة ومرحبة.',\n    \n    // Why Choose Us\n    'why.headline': 'لماذا تختار عيادات د. باوز البيطرية؟',\n    'why.reason1.title': 'رعاية شاملة وحنونة',\n    'why.reason1.description': 'نعامل كل حيوان أليف كما لو كان ملكنا، بلطف واحترام وتفهّم.',\n    'why.reason2.title': 'فريق ذو خبرة',\n    'why.reason2.description': 'أطباؤنا وطاقمنا لديهم سنوات من الخبرة وشغف بصحة الحيوانات الأليفة.',\n    'why.reason3.title': 'عيادات متطورة وحديثة',\n    'why.reason3.description': 'نستخدم أحدث المعدات والتقنيات لتوفير أفضل رعاية ممكنة.',\n    'why.reason4.title': 'خطة علاجية مخصصة',\n    'why.reason4.description': 'نضع خطة علاج تناسب الاحتياجات الفريدة لكل حيوان أليف.',\n    'why.readMore': 'اقرأ المزيد',\n    \n    // Reviews\n    'reviews.headline': 'آراء عملائنا',\n    'reviews.1.name': 'أحمد الرشيد',\n    'reviews.1.text': 'خدمة ممتازة! الطاقم كان رائعًا ومهنيًا جدًا مع قطتي. أنصح بشدة بعيادة د. باوز!',\n    'reviews.2.name': 'سارة جونسون',\n    'reviews.2.text': 'كلبي حصل على أفضل رعاية هنا. الأطباء ذوو خبرة والعيادة نظيفة جدًا.',\n    'reviews.3.name': 'محمد حسن',\n    'reviews.3.text': 'تجربة رائعة بشكل عام. الطبيب البيطري شرح كل شيء بوضوح وحيواني الأليف يشعر بتحسن كبير.',\n    'reviews.4.name': 'إميلي رودريجيز',\n    'reviews.4.text': 'خدمة الطوارئ كانت مميزة. اهتموا بأرنبي فورًا وبشكل احترافي.',\n    'reviews.5.name': 'خالد عبدالله',\n    'reviews.5.text': 'أفضل عيادة بيطرية في الرياض! الطاقم ودود ويهتمون حقًا بالحيوانات.',\n    'reviews.6.name': 'جينيفر لي',\n    'reviews.6.text': 'معجبة جدًا بالمرافق ومستوى الرعاية. ببغائي حصل على علاج ممتاز.',\n    'reviews.7.name': 'عمر سعيد',\n    'reviews.7.text': 'فريق محترف ومعدات حديثة. جعلوا حيواني الأليف يشعر بالراحة خلال الزيارة.',\n    'reviews.8.name': 'ليزا مارتينيز',\n    'reviews.8.text': 'تجربة رائعة! خدمة التجميل كانت مثالية وكلبي يبدو رائعًا. شكرًا لكم!',\n    \n    // Contact\n    'contact.headline': 'تواصل معنا',\n    'contact.subheadline': 'بادر بحجز موعد لحيوانك الأليف في عيادة د. باوز البيطرية اليوم!',\n    'contact.name': 'الاسم',\n    'contact.phone': 'رقم الهاتف',\n    'contact.email': 'البريد الإلكتروني',\n    'contact.message': 'الرسالة',\n    'contact.submit': 'إرسال',\n    'contact.success': 'شكراً لك! سنتواصل معك قريباً.',\n    \n    // Book Now Page\n    'bookNow.title': 'احجز الآن',\n    'bookNow.welcome': 'نحن سعداء لرغبتك في الحجز وأن تصبح جزءًا من عائلتنا.',\n    'bookNow.chooseBranch': 'اختر من فروعنا للحجز',\n    'bookNow.bookingMethods': 'اختر طريقة الحجز المفضلة لديك',\n    'bookNow.whatsappBooking': 'احجز عبر الواتساب',\n    'bookNow.phoneBooking': 'احجز عبر الهاتف',\n    'bookNow.programBooking': 'احجز عبر برنامجنا',\n    'bookNow.riyadh': 'الرياض',\n    'bookNow.riyadhBranches': 'فروع الرياض',\n    'bookNow.matherBranch': 'فرع المعذر',\n    'bookNow.sahafahBranch': 'فرع الصحافة',\n    'bookNow.sahafahWhatsApp': '0552030564',\n    'bookNow.matherWhatsApp': '0531353667',\n    'bookNow.sahafahPhone': '0552030564',\n    'bookNow.matherPhone': '0531353667',\n    'bookNow.jeddah': 'جدة',\n    'bookNow.jeddahBranches': 'فروع جدة',\n    'bookNow.comingSoon': 'قريباً',\n    \n    // About Page\n    'aboutPage.header': 'عيادات د. باوز البيطرية بالرياض',\n    'aboutPage.subheader': 'خبرة نضعها بين أيديكم بكل ثقة',\n    'aboutPage.whoWeAre.title': 'من نحن؟',\n    'aboutPage.whoWeAre.subtitle': '',\n    'aboutPage.whoWeAre.para1': 'تُقدّم عيادات د. باوز، أفضل عيادة بيطرية بالرياض، رعاية بيطرية استثنائية تجمع بين الخبرة والتقنية الحديثة، مع لمسة حانية تُعبّر عن اهتمامنا العميق بصحة حيواناتكم الأليفة. من الفحوصات الروتينية إلى التشخيصات المتقدمة والعلاجات المتخصصة، نُوفّر رعاية شاملة في بيئة مريحة وودية، لضمان تجربة إيجابية لكم ولحيواناتكم الأليفة في كل زيارة.',\n    'aboutPage.whoWeAre.para2': '',\n    'aboutPage.whoWeAre.para3': '',\n    'aboutPage.vision.title': 'رؤيتنا',\n    'aboutPage.vision.content': 'تسعى عيادات دكتور باوز إلى أن تكون المرجع الأول والأفضل في مجال الرعاية البيطرية، حيث تقدم أعلى مستوى من الرعاية الصحية للحيوانات الأليفة.',\n    'aboutPage.mission.title': 'مهمتنا',\n    'aboutPage.mission.content': 'توفير رعاية بيطرية شاملة وعالية الجودة للحيوانات الأليفة، مع التركيز على صحة ورفاهية الحيوان، وتقديم أفضل الخدمات الطبية للحيوانات الأليفة، بدءًا من الفحوصات الروتينية وحتى الجراحات المعقدة، وذلك من خلال فريق عمل متخصص وبيئة مريحة لأليفك.',\n    'aboutPage.whyChoose.title': 'لماذا تختار عيادات د. باوز البيطرية؟',\n    'aboutPage.whyChoose.reason1.title': 'رعاية شاملة وحنونة',\n    'aboutPage.whyChoose.reason1.description': 'نعامل كل حيوان أليف كما لو كان حيواننا الأليف، باللطف والاحترام والتفهّم.',\n    'aboutPage.whyChoose.reason2.title': 'فريق ذو خبرة',\n    'aboutPage.whyChoose.reason2.description': 'يتمتع أطباؤنا البيطريون وطاقم الدعم لدينا بخبرة سنوات عديدة وشغف تجاه الحيوانات الأليفة.',\n    'aboutPage.whyChoose.reason3.title': 'عيادات متطورة وحديثة',\n    'aboutPage.whyChoose.reason3.description': 'حيث نستخدم أحدث التقنيات والمعدات لتوفير أفضل رعاية ممكنة.',\n    'aboutPage.whyChoose.reason4.title': 'خطة علاجية تناسب أليفك',\n    'aboutPage.whyChoose.reason4.description': 'نُعدل خطط العلاج لتلبية الاحتياجات الفريدة لكل حيوان أليف.',\n    'aboutPage.doctors.title': 'فريق العمل',\n    'aboutPage.doctors.description': 'في عيادات د. باوز، أفضل عيادة بيطرية بالرياض، يجمع فريقنا من الأطباء البيطريين بين الخبرة العالية والتعاطف العميق لتقديم رعاية شاملة ومتخصصة. ملتزمون بتطبيق أعلى معايير الجودة في كل جوانب الرعاية، وشغفهم بصحة الحيوانات هو الدافع الأساسي لعملهم. خبراتهم المتنوعة تُمكّنهم من توفير أفضل الحلول العلاجية لحيوانكم الأليف.',\n    'aboutPage.doctors.noInfo': 'ملفات تعريف الأطباء قريباً',\n    'aboutPage.partners.title': 'شركاؤنا',\n    'aboutPage.partners.noInfo': 'معلومات الشركاء قريباً',\n    'aboutPage.careers.title': 'الوظائف',\n    'aboutPage.careers.description': 'عيادة د. باوز، أفضل عيادة بيطرية بالرياض، تدعوك للانضمام إلى فريقها المتميز. نوفر لك بيئة عمل داعمة ومُحفّزة تُساعدك على التطور المهني واكتساب الخبرات القيمة في مجال صحة الحيوان.',\n    'aboutPage.careers.personalInfo': 'المعلومات الشخصية',\n    'aboutPage.careers.fullName': 'الاسم الكامل',\n    'aboutPage.careers.email': 'البريد الإلكتروني',\n    'aboutPage.careers.phone': 'رقم الهاتف',\n    'aboutPage.careers.professionalInfo': 'المعلومات المهنية',\n    'aboutPage.careers.resume': 'تحميل السيرة الذاتية',\n    'aboutPage.careers.coverLetter': 'الخطاب التعريفي (اختياري)',\n    'aboutPage.careers.position': 'الوظيفة المطلوبة (إن وجدت)',\n    'aboutPage.careers.startDate': 'تاريخ البدء المتاح',\n    'aboutPage.careers.experience': 'الخبرة ذات الصلة',\n    'aboutPage.careers.experiencePlaceholder': 'مثلاً: فني بيطري، مساعد بيطري، موظف استقبال',\n    'aboutPage.careers.certifications': 'الشهادات البيطرية (إن وجدت)',\n    'aboutPage.careers.education': 'المستوى التعليمي والمؤسسة',\n    'aboutPage.careers.interests': 'مجالات الاهتمام',\n    'aboutPage.careers.interestsPlaceholder': 'مثلاً: الجراحة، الطب الباطني، رعاية الطوارئ',\n    'aboutPage.careers.submit': 'إرسال الطلب',\n    \n    // Services Page\n    'servicesPage.header': 'خدماتنا',\n    'servicesPage.subheader': 'اختبر خدمات بيطرية استثنائية في د. باوز. نقدم مجموعة كاملة من الرعاية لحيواناتك الأليفة، من الفحوصات الروتينية إلى العلاجات المتقدمة.',\n    'servicesPage.bookAppointment': 'احجز موعد',\n    \n    'servicesPage.examinations.title': 'الفحوصات الطبية الدورية',\n    'servicesPage.examinations.description': 'في د. باوز، نؤمن بأن الرعاية الوقائية ضرورية لحياة طويلة وصحية لجميع الحيوانات الأليفة. فحوصاتنا الدورية للحيوانات الأليفة، والمعروفة أيضًا باسم فحوصات الصحة أو الفحوصات، هي جزء أساسي من خدماتنا البيطرية الشاملة. فهي تسمح لأطبائنا البيطريين بتقييم الصحة العامة لحيوانك الأليف، واكتشاف المشاكل المحتملة مبكرًا، وتقديم توصيات شخصية.',\n    'servicesPage.examinations.canine': 'فحوصات الكلاب: العلامات الحيوية، تسمع القلب والرئتين، فحوصات العيون، الأذن، الفم، الجلد، البطن، والعضلات والعظام.',\n    'servicesPage.examinations.feline': 'فحوصات القطط: فحوصات لطيفة تغطي العلامات الحيوية، العيون، الأذنين، صحة الفم، البطن، الفراء، والجلد.',\n    'servicesPage.examinations.avian': 'فحوصات الطيور: رعاية متخصصة تشمل الفحص البدني، تقييم الريش والمنقار، الوزن، فحص الغدد، وجس البطن.',\n    \n    'servicesPage.grooming.title': 'خدمات الاستحمام والتجميل',\n    'servicesPage.grooming.description': 'حافظ على نظافة وراحة حيوانك الأليف مع خدمات التجميل والتنظيف لدينا.',\n    'servicesPage.grooming.feature1': 'قص الأظافر',\n    'servicesPage.grooming.feature2': 'تنظيف الأذنين',\n    'servicesPage.grooming.feature3': 'الاستحمام والتجفيف بشامبو آمن',\n    'servicesPage.grooming.feature4': 'تمشيط وتجميل الشعر (حسب السلالة)',\n    \n    'servicesPage.diagnostics.title': 'الفحوصات التشخيصية',\n    'servicesPage.diagnostics.description': 'نوفر اختبارات تشخيصية دقيقة وسريعة بتقنية متقدمة:',\n    'servicesPage.diagnostics.lab': 'الفحوصات المخبرية: كيمياء الدم، تعداد الدم الكامل، تحليل البول، فحوصات الطفيليات والفطريات',\n    'servicesPage.diagnostics.imaging': 'التصوير: الأشعة السينية، الأشعة السينية للأسنان، الموجات فوق الصوتية',\n    'servicesPage.diagnostics.advanced': 'التشخيصات المتقدمة: الفحص المجهري والتنظير الداخلي',\n    \n    'servicesPage.surgery.title': 'العمليات الجراحية الطبية',\n    'servicesPage.surgery.description': 'يقوم فريقنا الجراحي بإجراء مجموعة واسعة من العمليات باستخدام تقنيات حديثة وآمنة:',\n    'servicesPage.surgery.feature1': 'التعقيم (الإخصاء)',\n    'servicesPage.surgery.feature2': 'جراحة العظام',\n    'servicesPage.surgery.feature3': 'عمليات الجهاز الهضمي',\n    'servicesPage.surgery.feature4': 'تجميل الأنف (للسلالات قصيرة الأنف)',\n    'servicesPage.surgery.feature5': 'جراحة المسالك البولية',\n    \n    'servicesPage.dental.title': 'خدمات الأسنان',\n    'servicesPage.dental.description': 'رعاية شاملة للأسنان لحماية أسنان ولثة حيوانك الأليف:',\n    'servicesPage.dental.feature1': 'تنظيف أسنان احترافي',\n    'servicesPage.dental.feature2': 'فحوصات الأسنان',\n    'servicesPage.dental.feature3': 'تقليح وتخطيط الجذور',\n    'servicesPage.dental.feature4': 'خلع الأسنان وجراحة الفم',\n    \n    'servicesPage.vaccination.title': 'التطعيمات الدورية',\n    'servicesPage.vaccination.description': 'احمِ حيواناتك الأليفة بالتطعيمات الأساسية وجداول التخلص من الديدان:',\n    'servicesPage.vaccination.feature1': 'لقاحات القطط (الثلاثي والرباعي)',\n    'servicesPage.vaccination.feature2': 'لقاحات الكلاب (الخماسي وداء الكلب)',\n    'servicesPage.vaccination.feature3': 'أدوية التخلص من الديدان',\n    \n    'servicesPage.travel.title': 'إجراءات سفر الحيوانات الأليفة',\n    'servicesPage.travel.description': 'مساعدة شاملة للسفر المحلي والدولي:',\n    'servicesPage.travel.feature1': 'شهادات صحية',\n    'servicesPage.travel.feature2': 'فحص داء الكلب والوثائق',\n    'servicesPage.travel.feature3': 'المساعدة في نماذج السفر ومتطلبات الوجهة',\n    \n    'servicesPage.boarding.title': 'خدمات الإيواء',\n    'servicesPage.boarding.description': 'خيارات إقامة مريحة وآمنة لحيواناتك الأليفة:',\n    'servicesPage.boarding.therapeutic': 'فندق الحيوانات العلاجي: رعاية ما بعد الجراحة، إدارة الحالات المزمنة، ومراقبة عن كثب',\n    'servicesPage.boarding.fungi': 'فندق علاج الفطريات: غرف علاج معزولة مع تعقيم متخصص وأدوية',\n    \n    'servicesPage.intensiveCare.title': 'الرعاية المركزة',\n    'servicesPage.intensiveCare.description': 'رعاية وحدة العناية المركزة المخصصة للحيوانات الأليفة الحرجة:',\n    'servicesPage.intensiveCare.feature1': 'إدارة فشل الأعضاء (الكلى، الكبد، القلب)',\n    'servicesPage.intensiveCare.feature2': 'اضطرابات التمثيل الغذائي والغدد الصماء',\n    'servicesPage.intensiveCare.feature3': 'الإصابات والصدمات الشديدة',\n    'servicesPage.intensiveCare.feature4': 'رعاية ما بعد الجراحة',\n    \n    'servicesPage.emergency.title': 'خدمات الطوارئ',\n    'servicesPage.emergency.description': 'رعاية طوارئ على مدار الساعة طوال أيام الأسبوع للحالات العاجلة مثل:',\n    'servicesPage.emergency.feature1': 'الصدمات',\n    'servicesPage.emergency.feature2': 'صعوبات التنفس',\n    'servicesPage.emergency.feature3': 'النزيف أو التسمم',\n    'servicesPage.emergency.feature4': 'النوبات والانتفاخ',\n    'servicesPage.emergency.numbers': 'أرقام الطوارئ:',\n    'servicesPage.emergency.sahafa': 'فرع الصحافة: 0552030564',\n    'servicesPage.emergency.mather': 'فرع المعذر: 0531353667',\n    \n    'servicesPage.homeCare.title': 'خدمات الرعاية المنزلية',\n    'servicesPage.homeCare.description': 'رعاية بيطرية مريحة في المنزل:',\n    'servicesPage.homeCare.feature1': 'فحوصات صحية',\n    'servicesPage.homeCare.feature2': 'التطعيمات',\n    'servicesPage.homeCare.feature3': 'جمع العينات (الدم، البول، البراز)',\n    \n    // Footer\n    'footer.description': 'من الفحوصات الروتينية إلى الجراحات المتقدمة، تقدم د. باوز رعاية بيطرية متكاملة لجميع احتياجات حيوانك الأليف.',\n    'footer.contactInfo': 'معلومات التواصل',\n    'footer.call': 'الاتصال',\n    'footer.generalPhone': '920003045',\n    'footer.emergency': 'الطوارئ: متوفرون لخدمتكم على مدار الساعة طوال أيام الأسبوع',\n    'footer.mobile': 'جوال',\n    'footer.sahafahBranch': 'فرع الصحافة',\n    'footer.sahafahAddress': 'عيادة د. باوز البيطرية، طريق الثمامة، حي الصحافة، الرياض 13315',\n    'footer.sahafahPhone': '05 5203 0564',\n    'footer.sahafahMapUrl': 'https://www.google.com/maps/search/?api=1&query=Dr.Paws+Veterinary+Clinic,Al+Thoumamah+Rd,As+Sahafah,Riyadh+13315',\n    'footer.matherBranch': 'فرع المعذر',\n    'footer.matherAddress': 'عيادة د. باوز البيطرية، طريق الأمير سلطان بن عبدالعزيز، المعذر الشمالية، الرياض 12314',\n    'footer.matherPhone': '05 3135 3667',\n    'footer.matherMapUrl': 'https://maps.app.goo.gl/PzCrrqSLmnCE487c9',\n    'footer.hours': 'ساعات العمل',\n    'footer.satThu': 'من السبت إلى الخميس : من 9:00 صباحًا حتى 11:00 مساءً',\n    'footer.fri': 'يوم الجمعة من 3:00 مساءً حتى 11:00 مساءً',\n    'footer.email': 'info@drpaws-sa.com',\n    'footer.follow': 'تابعنا',\n    \n    // Promotional Modal\n    'promo.title': 'عرض افتتاح فرع جدة!',\n    'promo.description': 'ترقبوا افتتاح فرعنا في جدة! سجل بياناتك الآن واحصل على خصم 20% لمدة 6 أشهر بعد الافتتاح',\n    'promo.firstName': 'الاسم الأول',\n    'promo.lastName': 'الاسم الأخير',\n    'promo.email': 'البريد الإلكتروني',\n    'promo.phoneNumber': 'رقم الهاتف',\n    'promo.required': '*',\n    'promo.firstNamePlaceholder': 'أدخل الاسم الأول',\n    'promo.lastNamePlaceholder': 'أدخل الاسم الأخير',\n    'promo.emailPlaceholder': 'example@email.com',\n    'promo.phoneNumberPlaceholder': '05xxxxxxxx',\n    'promo.submit': 'سجل الآن واحصل على الخصم',\n    'promo.submitting': 'جاري التسجيل...',\n    'promo.successTitle': 'تم التسجيل بنجاح!',\n    'promo.successMessage': 'سنتواصل معك قريباً بشأن عرض الافتتاح الخاص',\n    'promo.errorTitle': 'خطأ',\n    'promo.errorGeneric': 'حدث خطأ أثناء التسجيل، يرجى المحاولة مرة أخرى',\n    'promo.errorDuplicate': 'رقم الهاتف مسجل مسبقاً',\n    'promo.phoneAlreadyRegistered': 'هذا الرقم تم تسجيله من قبل.',\n    'promo.phoneNumberMustBe10Digits': 'رقم الهاتف يجب أن يكون 10 أرقام.',\n    'promo.emailAlreadyRegistered': 'هذا البريد الإلكتروني تم تسجيله من قبل.',\n    'promo.invalidEmail': 'الرجاء إدخال بريد إلكتروني صحيح.',\n    'promo.close': 'إغلاق',\n    'promo.successSubscription': 'تم الاشتراك في العرض بنجاح!',\n    'promo.subscriptionCode': 'رمز الاشتراك الخاص بك هو',\n    'promo.okButton': 'تم',\n    'promo.doNotShowAgain': 'لا تظهر مرة أخرى',\n  },\n};\n\nexport function LanguageProvider({ children }: { children: ReactNode }) {\n  const [language, setLanguage] = useState<Language>('en');\n\n  useEffect(() => {\n    // Set RTL direction and lang attribute when language changes\n    if (language === 'ar') {\n      document.documentElement.setAttribute('dir', 'rtl');\n      document.documentElement.setAttribute('lang', 'ar');\n    } else {\n      document.documentElement.setAttribute('dir', 'ltr');\n      document.documentElement.setAttribute('lang', 'en');\n    }\n  }, [language]);\n\n  const t = (key: string): string => {\n    const translationKey = key as keyof typeof translations['en'];\n    if (translationKey in translations[language]) {\n      return translations[language][translationKey] as string;\n    }\n    if (translationKey in translations.en) {\n      return translations.en[translationKey] as string;\n    }\n    return key;\n  };\n\n  return (\n    <LanguageContext.Provider value={{ language, setLanguage, t }}>\n      {children}\n    </LanguageContext.Provider>\n  );\n}\n\nexport function useLanguage() {\n  const context = useContext(LanguageContext);\n  if (context === undefined) {\n    throw new Error('useLanguage must be used within a LanguageProvider');\n  }\n  return context;\n}\n","size_bytes":49866},"design_guidelines.md":{"content":"# DR PAWS VETERINARY CLINIC - HOMEPAGE DESIGN GUIDELINES\n\n## Design Approach\n**Reference-Based**: Veterinary clinic with established brand identity requiring exact adherence to provided brand guidelines. Drawing inspiration from healthcare/wellness sites like Zocdoc and modern service providers with warm, trustworthy aesthetics.\n\n## Brand Colors (Exact HSL Format)\n**Primary Colors:**\n- Pigment Green: 143 76% 38% (rgb(24, 172, 97) / #18ac61)\n- Charcoal: 199 37% 24% (rgb(38, 70, 83) / #264653)\n\n**Accent Colors:**\n- Saffron: 43 75% 66% (rgb(233, 196, 106) / #e9c46a)\n- Sandy Brown: 27 87% 67% (rgb(244, 162, 97) / #f4a261)\n\n**Usage:**\n- Primary CTA buttons: Pigment Green backgrounds with white text\n- Headings: Charcoal for strong contrast\n- Warm accents: Saffron and Sandy Brown for highlights, icons, and decorative elements\n- Light backgrounds: Off-white (#fdfcfb) with subtle warmth\n- Dark mode not required for this veterinary clinic site\n\n## Typography\n**Primary (Headlines):** Rubik\n- H1: 3.5rem (56px) / font-medium\n- H2: 2.25rem (36px) / font-medium\n- H3: 1.5rem (24px) / font-normal\n\n**Secondary (Body):** Poppins\n- Body large: 1.125rem (18px) / font-normal / line-height relaxed\n- Body regular: 1rem (16px) / font-normal\n- Small text: 0.875rem (14px) / font-light\n\n**Font Loading:** Via Google Fonts CDN\n- Rubik: weights 400, 500\n- Poppins: weights 300, 400, 600, 700\n\n## Layout System\n**Spacing Scale:** Tailwind units of 4, 6, 8, 12, 16, 20, 24, 32\n- Section padding: py-20 (desktop), py-12 (mobile)\n- Container max-width: max-w-7xl\n- Content sections: max-w-6xl\n- Card spacing: gap-8 (desktop), gap-6 (mobile)\n\n## Component Library\n\n### Hero Section with Slider\n- Full-width background slider with veterinary clinic imagery\n- Overlay: Charcoal gradient (from 199 37% 24% / 0.7 to 199 37% 24% / 0.4)\n- Centered content with max-w-4xl\n- Headline: Rubik 3.5rem white\n- Subheadline: Poppins 1.5rem white/90% opacity\n- Subtext: Poppins 1.125rem white/80% opacity\n- CTA: Large button (px-8 py-4) Pigment Green background, white text, rounded-lg\n- Height: 85vh with flex centering\n\n### Introduction/About Section\n- Two-column grid (image left, content right on desktop, stacked mobile)\n- Headline: Rubik 2.25rem Charcoal\n- Body text: Poppins 1.125rem Charcoal/80%\n- Background: White\n- Image: Warm, professional veterinary care photo with rounded-xl corners\n- CTA: Outline button with Pigment Green border\n\n### Service Categories Section\n- Background: Subtle warm gradient (Saffron at 5% opacity)\n- Headline: Rubik 2.25rem Charcoal, centered\n- Intro paragraph: Poppins 1.125rem, centered, max-w-3xl\n- Service cards: 3-column grid (2-col tablet, 1-col mobile)\n- Card design: White background, rounded-xl, shadow-md, hover:shadow-lg transition\n- Card icons: Sandy Brown colored, 48px size\n- Card titles: Poppins 1.25rem Charcoal bold\n- Card descriptions: Poppins 1rem Charcoal/70%\n\n### Why Choose Us Section\n- Background: White\n- Headline: Rubik 2.25rem Charcoal, centered\n- 2x2 grid of feature cards (desktop), 1-column (mobile)\n- Feature cards: Icon (Pigment Green), title (Poppins 1.125rem bold), description\n- Icons: Use Heroicons for consistent style\n- Spacing: gap-12 between cards\n\n### Contact Form Section\n- Background: Charcoal dark\n- Two-column layout (form left, info right on desktop)\n- Headline: Rubik 2.25rem white\n- Form styling:\n  - Input fields: White backgrounds, border border-gray-300, rounded-lg, px-4 py-3\n  - Labels: Poppins white/90%\n  - Textarea: min-h-32\n  - Submit button: Pigment Green background, white text, full-width, py-4\n- Right column: Contact information in white text with icons\n\n### Footer\n- Background: Charcoal\n- Three-column grid (logo/tagline, contact info, hours)\n- Logo: White version\n- Text: Poppins 0.875rem white/80%\n- Section headings: Poppins 1rem white bold\n- Contact details with icons (Heroicons)\n- Social media: Icon row with hover:opacity-80 transition\n- Bottom copyright bar: Charcoal darker shade, centered text\n\n## Images\n**Hero Slider (3 images):**\n1. Veterinarian examining a happy golden retriever in bright, modern clinic\n2. Compassionate vet with cat owner consultation in warm, welcoming room\n3. State-of-the-art veterinary equipment and clean examination room\n\n**About Section Image:**\nProfessional veterinary team photo with diverse staff showing warmth and expertise\n\n**Service Cards:**\nUse Heroicons for service category icons (stethoscope, heart, clipboard, etc.)\n\n## Animations\nMinimal, professional animations:\n- Hero slider: 6-second fade transitions\n- Buttons: hover:scale-105 subtle lift\n- Service cards: hover:shadow-lg smooth transition\n- Scroll-triggered fade-ins for sections (opacity 0 to 1, 0.6s ease)\n\n## Accessibility\n- Maintain WCAG AA contrast ratios (all combinations pass)\n- Focus states: 2px Pigment Green outline with offset\n- Touch targets: minimum 44px height for mobile\n- Alt text for all images describing veterinary context\n- Semantic HTML structure with proper heading hierarchy","size_bytes":4980},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/Header.tsx":{"content":"import { Menu, X, Globe } from 'lucide-react';\nimport { useState } from 'react';\nimport { Link, useLocation } from 'wouter';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { useLanguage } from '@/contexts/LanguageContext';\nimport { Button } from '@/components/ui/button';\nimport logo from '@assets/dr-paws-logo.svg';\n\nexport default function Header() {\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const [location] = useLocation();\n  const { language, setLanguage, t } = useLanguage();\n\n  const mainNavItems = [\n    { name: t('nav.home'), path: '/' },\n    { name: t('nav.about'), path: '/about' },\n    { name: t('nav.services'), path: '/services' },\n    { name: t('nav.blog'), path: '/blog' },\n    { name: t('bookNow.title'), path: '/book-now' },\n  ];\n\n  const contactNavItem = { name: t('nav.contact'), path: '#contact' };\n  \n  // For mobile menu - include all items including Contact Us\n  const navItems = [...mainNavItems, contactNavItem];\n\n  const handleNavClick = (path: string) => {\n    if (path.startsWith('#')) {\n      if (path === '#contact') {\n        const footer = document.querySelector('footer');\n        footer?.scrollIntoView({ behavior: 'smooth' });\n      } else {\n        const element = document.getElementById(path.substring(1));\n        element?.scrollIntoView({ behavior: 'smooth' });\n      }\n      setIsMobileMenuOpen(false);\n    } else {\n      setIsMobileMenuOpen(false);\n    }\n  };\n\n  return (\n    <header className=\"sticky top-0 z-50 bg-white border-b border-border/40 backdrop-blur-sm\">\n      <nav className=\"max-w-7xl mx-auto px-6\">\n        <div className=\"flex items-center justify-between h-20\">\n          <Link href=\"/\" data-testid=\"link-logo\">\n            <motion.div\n              whileHover={{ scale: 1.02 }}\n              className=\"flex items-center\"\n            >\n              <img src={logo} alt=\"Dr. Paws Logo\" className=\"h-12 md:h-14\" data-testid=\"img-logo\" />\n            </motion.div>\n          </Link>\n\n          <div className=\"hidden md:flex items-center gap-8\">\n            {/* Main navigation items */}\n            {mainNavItems.map((item) => (\n              <Link key={item.name} href={item.path}>\n                <motion.span\n                  whileHover={{ y: -2 }}\n                  className={`inline-block text-foreground/80 hover:text-primary font-medium transition-colors relative group ${\n                    location === item.path ? 'text-primary' : ''\n                  }`}\n                  data-testid={`link-${item.name.toLowerCase().replace(' ', '-')}`}\n                >\n                  {item.name}\n                  <span className={`absolute -bottom-1 left-0 h-0.5 bg-primary transition-all duration-300 ${\n                    location === item.path ? 'w-full' : 'w-0 group-hover:w-full'\n                  }`}></span>\n                </motion.span>\n              </Link>\n            ))}\n            \n            {/* Visual separator */}\n            <div className=\"h-6 w-px bg-border\"></div>\n            \n            {/* Contact section - grouped with phone */}\n            <motion.button\n              onClick={() => handleNavClick(contactNavItem.path)}\n              whileHover={{ y: -2 }}\n              className=\"text-foreground/80 hover:text-primary font-medium transition-colors relative group\"\n              data-testid=\"link-contact-us\"\n            >\n              {contactNavItem.name}\n              <span className=\"absolute -bottom-1 left-0 w-0 h-0.5 bg-primary transition-all duration-300 group-hover:w-full\"></span>\n            </motion.button>\n            \n            <motion.a\n              href=\"tel:920003045\"\n              whileHover={{ scale: 1.05 }}\n              className=\"flex items-center gap-2 text-primary font-semibold hover-elevate active-elevate-2 px-4 py-2 rounded-md\"\n              data-testid=\"link-phone\"\n            >\n              <lord-icon\n                src=\"https://cdn.lordicon.com/ojbonimq.json\"\n                trigger=\"loop\"\n                delay=\"1500\"\n                colors=\"primary:#121331,secondary:#08a88a\"\n                stroke=\"regular\"\n                style={{ width: '30px', height: '30px' }}\n              />\n              <span>920003045</span>\n            </motion.a>\n            \n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={() => setLanguage(language === 'en' ? 'ar' : 'en')}\n              className=\"flex items-center gap-2\"\n              data-testid=\"button-language-switcher\"\n            >\n              <Globe className=\"w-4 h-4\" />\n              {language === 'en' ? 'العربية' : 'English'}\n            </Button>\n          </div>\n\n          <div className=\"flex items-center gap-2 md:hidden\">\n            <motion.a\n              href=\"tel:920003045\"\n              whileTap={{ scale: 0.95 }}\n              className=\"flex items-center gap-2 text-primary font-semibold hover-elevate active-elevate-2 px-3 py-2 rounded-md\"\n              data-testid=\"link-phone-mobile\"\n            >\n              <lord-icon\n                src=\"https://cdn.lordicon.com/ojbonimq.json\"\n                trigger=\"loop\"\n                delay=\"1500\"\n                colors=\"primary:#121331,secondary:#08a88a\"\n                stroke=\"regular\"\n                style={{ width: '30px', height: '30px' }}\n              />\n              <span className=\"text-sm\">920003045</span>\n            </motion.a>\n            <Button\n              variant=\"ghost\"\n              size=\"icon\"\n              onClick={() => setLanguage(language === 'en' ? 'ar' : 'en')}\n              data-testid=\"button-language-switcher-mobile\"\n            >\n              <Globe className=\"w-5 h-5\" />\n            </Button>\n            <button\n              onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n              className=\"p-2 rounded-lg hover-elevate active-elevate-2\"\n              data-testid=\"button-mobile-menu\"\n              aria-label=\"Toggle menu\"\n            >\n              {isMobileMenuOpen ? (\n                <X className=\"w-6 h-6\" />\n              ) : (\n                <Menu className=\"w-6 h-6\" />\n              )}\n            </button>\n          </div>\n        </div>\n\n        <AnimatePresence>\n          {isMobileMenuOpen && (\n            <motion.div\n              initial={{ opacity: 0, height: 0 }}\n              animate={{ opacity: 1, height: 'auto' }}\n              exit={{ opacity: 0, height: 0 }}\n              transition={{ duration: 0.3 }}\n              className=\"md:hidden overflow-hidden\"\n            >\n              <div className=\"py-4 space-y-2\">\n                {navItems.map((item) => (\n                  item.path.startsWith('#') ? (\n                    <motion.button\n                      key={item.name}\n                      onClick={() => handleNavClick(item.path)}\n                      whileTap={{ scale: 0.98 }}\n                      className=\"block w-full text-left px-4 py-3 text-foreground/80 hover:text-primary hover:bg-primary/5 rounded-lg transition-colors font-medium\"\n                      data-testid={`mobile-link-${item.name.toLowerCase().replace(' ', '-')}`}\n                    >\n                      {item.name}\n                    </motion.button>\n                  ) : (\n                    <Link key={item.name} href={item.path}>\n                      <motion.span\n                        whileTap={{ scale: 0.98 }}\n                        onClick={() => setIsMobileMenuOpen(false)}\n                        className={`block px-4 py-3 text-foreground/80 hover:text-primary hover:bg-primary/5 rounded-lg transition-colors font-medium ${\n                          location === item.path ? 'text-primary bg-primary/5' : ''\n                        }`}\n                        data-testid={`mobile-link-${item.name.toLowerCase().replace(' ', '-')}`}\n                      >\n                        {item.name}\n                      </motion.span>\n                    </Link>\n                  )\n                ))}\n              </div>\n            </motion.div>\n          )}\n        </AnimatePresence>\n      </nav>\n    </header>\n  );\n}\n","size_bytes":8081},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-9 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5741},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/examples/Footer.tsx":{"content":"import Footer from '../Footer';\n\nexport default function FooterExample() {\n  return <Footer />;\n}\n","size_bytes":98},"client/src/components/ServicePackagesSection.tsx":{"content":"import ServicePackagesDisplay from './ServicePackagesDisplay';\n\nexport default function ServicePackagesSection() {\n  return <ServicePackagesDisplay showHeader={true} />;\n}\n","size_bytes":172},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/pages/Services.tsx":{"content":"import { motion, useInView, AnimatePresence } from 'framer-motion';\nimport { useLanguage } from '@/contexts/LanguageContext';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { useState, useRef, useEffect } from 'react';\nimport { Link } from 'wouter';\nimport Header from '@/components/Header';\nimport ECGAnimation from '@/components/ECGAnimation';\nimport HeartbeatDivider from '@/components/HeartbeatDivider';\nimport Footer from '@/components/Footer';\nimport {\n  Stethoscope,\n  Scissors,\n  Microscope,\n  Syringe,\n  Pill,\n  Plane,\n  Home,\n  Heart,\n  AlertCircle,\n  Sparkles,\n  ChevronDown,\n  ChevronUp\n} from 'lucide-react';\nimport servicesHeroImage from '@assets/generated_images/Modern_veterinary_equipment_room_49dc6345.png';\nimport teamImage from '@assets/generated_images/Veterinary_team_professional_photo_a4845f6b.png';\nimport vetExamImage from '@assets/generated_images/Vet_examining_golden_retriever_19654044.png';\nimport consultationImage from '@assets/generated_images/Vet_consultation_with_cat_owner_7978144f.png';\n\nexport default function Services() {\n  const { t, language } = useLanguage();\n  const [expandedCards, setExpandedCards] = useState<Record<number, boolean>>({});\n\n  const heroRef = useRef(null);\n  const servicesRef1 = useRef(null);\n  const imageRef1 = useRef(null);\n  const servicesRef2 = useRef(null);\n  const imageRef2 = useRef(null);\n  const servicesRef3 = useRef(null);\n  const homeCareRef = useRef(null);\n\n  const heroInView = useInView(heroRef, { once: false, amount: 0.3 });\n  const servicesInView1 = useInView(servicesRef1, { once: false, amount: 0.2 });\n  const imageInView1 = useInView(imageRef1, { once: false, amount: 0.3 });\n  const servicesInView2 = useInView(servicesRef2, { once: false, amount: 0.2 });\n  const imageInView2 = useInView(imageRef2, { once: false, amount: 0.3 });\n  const servicesInView3 = useInView(servicesRef3, { once: false, amount: 0.2 });\n  const homeCareInView = useInView(homeCareRef, { once: false, amount: 0.3 });\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  const toggleExpand = (id: number) => {\n    setExpandedCards(prev => {\n      // If the clicked card is already open, close it\n      if (prev[id]) {\n        return { [id]: false };\n      }\n      // Otherwise, close all others and open only this one\n      return { [id]: true };\n    });\n  };\n\n  const services = [\n    {\n      id: 1,\n      icon: Stethoscope,\n      title: language === 'ar' ? 'الفحص الطبي الدوري' : 'Periodic Medical Examination',\n      preview: language === 'ar' \n        ? 'في د. باوز، نؤمن بأن الرعاية الوقائية أساسية لحياة صحية مديدة لجميع الحيوانات الأليفة. فحوصاتنا الدورية، المعروفة أيضًا باسم فحوصات الصحة العامة أو الفحوصات الروتينية، تُعدّ جزءًا حيويًا من خدماتنا البيطرية الشاملة.'\n        : 'At Dr. Paws, we believe preventative care is essential for a long and healthy life for all pets. Our periodic pet examinations, also known as wellness exams or checkups, are a crucial part of our comprehensive veterinary services.',\n      fullContent: language === 'ar'\n        ? `تُتيح هذه الزيارات الروتينية لأطبائنا تقييم صحة حيوانك الأليف بشكل عام، واكتشاف المشاكل المحتملة في وقت مبكر، وتقديم توصيات مُخصّصة لرعايتهم المُستمرة.\n\n**الفحوصات الدورية للكلاب:**\nخلال الفحص الطبي الدوري للكلاب، نُجري فحصًا بدنيًا شاملاً.\n\n**الفحوصات الدورية للقطط:**\nتُجرى الفحوصات الطبية الدورية للقطط بنهج لطيف وصبور، لتقليل التوتر على قطتك.\n\n**الفحوصات الدورية للطيور:**\nتتطلب الفحوصات الطبية الدورية للطيور معرفة متخصصة وتقنيات تعامل خاصة.\n\nالفحوصات المنتظمة ضرورية للحفاظ على صحة حيوانك الأليف ومنع المشاكل الصحية الخطيرة.`\n        : `These routine visits allow our veterinarians to assess your pet's overall health, detect potential problems early, and provide personalized recommendations for their ongoing care.\n\n**Canine Periodic Pet Examinations:**\nDuring a canine periodic medical examination, we perform a thorough physical examination.\n\n**Feline Periodic Pet Examinations:**\nFeline periodic medical examinations are performed with a gentle and patient approach, minimizing stress for your cat.\n\n**Avian Periodic Pet Examinations:**\nAvian periodic medical examinations require specialized knowledge and handling techniques.\n\nRegular checkups are vital for maintaining your pet's well-being and preventing serious health issues.`,\n      features: language === 'ar' ? [\n        'العلامات الحيوية: فحص درجة الحرارة والنبض ومعدل التنفس',\n        'سماع القلب والرئتين: الاستماع إلى القلب والرئتين',\n        'فحص العيون: فحص العيون للكشف عن إعتام عدسة العين أو الجلوكوما',\n        'فحص الأذنين: فحص الأذنين للكشف عن الالتهابات أو العث',\n        'فحص الفم: تقييم الأسنان واللثة للكشف عن تراكم الجير',\n        'فحص الجلد: فحص الجلد والفراء',\n        'جس البطن: جس البطن للتحقق من تضخم الأعضاء',\n        'تقييم الجهاز العضلي الهيكلي: تقييم المفاصل والعضلات'\n      ] : [\n        'Vital Signs: Checking temperature, pulse, and respiration rate',\n        'Cardiopulmonary Auscultation: Listening to the heart and lungs',\n        'Ophthalmologic Examination: Examining the eyes for cataracts, glaucoma',\n        'Otoscopic Examination: Examining the ears for infections, mites',\n        'Oral Examination: Assessing teeth and gums for tartar buildup',\n        'Dermatological Examination: Examining skin and coat',\n        'Abdominal Palpation: Checking for organ enlargement, masses',\n        'Musculoskeletal Evaluation: Assessing joints and muscles'\n      ],\n    },\n    {\n      id: 2,\n      icon: Sparkles,\n      title: language === 'ar' ? 'خدمات العناية بالنظافة والمظهر' : 'Shower & Grooming Services',\n      preview: language === 'ar'\n        ? 'يُساهم الحفاظ على نظافة ومظهر حيوانك الأليف بشكل كبير في صحته العامة وراحته ورفاهيته. في د. باوز، نُقدّم مجموعة من خدمات عيادة رعاية نظافة الحيوانات الفعّالة والمُصمّمة للحفاظ على مظهر حيوانك الأليف بأفضل حال.'\n        : 'Maintaining your pet\\'s hygiene and appearance contributes significantly to their overall health, comfort, and well-being. At Dr. Paws, we offer a range of gentle and effective pet clean up services, designed to keep your pet looking and feeling their best.',\n      fullContent: language === 'ar'\n        ? `هذه الخدمات، على الرغم من أنها ليست طبية بحتة، إلا أنها جزء مهم من الرعاية الوقائية وتُكمّل خدماتنا البيطرية الأخرى.\n\nخدماتنا للعناية بالنظافة تساعد في منع الانزعاج المؤلم والالتهابات ومشاكل الجلد مع الحفاظ على راحة حيوانك الأليف وصحته. نستخدم منتجات عالية الجودة وآمنة للحيوانات الأليفة وتقنيات تُقلّل التوتر.`\n        : `These pet clean up services, while not strictly medical, are an important part of preventative care and complement our other veterinary services.\n\nOur grooming services help prevent painful discomfort, infections, and skin problems while keeping your pet comfortable and healthy. We use high-quality, pet-safe products and techniques that minimize stress for your beloved companion.`,\n      features: language === 'ar' ? [\n        'تقليم الأظافر: تقليم منتظم لمنع النمو الزائد ومشاكل المفاصل',\n        'تنظيف الأذنين: تنظيف لطيف لمنع الالتهابات وإزالة تراكم الشمع',\n        'الاستحمام والتجفيف: خدمات مُهدّئة باستخدام شامبو وبلسم آمن',\n        'تمشيط وقص الشعر: قصات شعر خاصة بالسلالات وخدمات فك التشابك'\n      ] : [\n        'Nail Clipping: Regular nail trims to prevent overgrowth and joint problems',\n        'Ear Cleaning: Gentle cleaning to prevent infections and remove wax buildup',\n        'Bath and Drying: Soothing services using pet-safe shampoos and conditioners',\n        'Hair Combing and Cutting: Breed-specific haircuts and de-matting services'\n      ],\n    },\n    {\n      id: 3,\n      icon: Microscope,\n      title: language === 'ar' ? 'الاختبارات التشخيصية' : 'Diagnostic Tests',\n      preview: language === 'ar'\n        ? 'يُعدّ التشخيص الدقيق وفي الوقت المناسب أمرًا بالغ الأهمية للعلاج الفعّال. في مركز تحليل الحيوانات في د.باوز، نُقدّم مجموعة شاملة من خدمات التشخيص البيطرية لتقييم صحة حيوانك الأليف بسرعة ودقة.'\n        : 'Accurate and timely diagnosis is crucial for effective treatment. At Dr. Paws, we offer a comprehensive range of diagnostic veterinary services to quickly and accurately assess your pet\\'s health.',\n      fullContent: language === 'ar'\n        ? `مركز تحليل الحيوانات في د.باوز مُجهز بأحدث تقنيات التشخيص، مما يُتيح لنا إجراء مجموعة مُتنوعة من الاختبارات.\n\n**التحاليل:**\n• اختبارات الدم الكيميائية: تقييم وظائف الأعضاء (الكبد والكلى والبنكرياس)\n• صورة الدم الكاملة: معلومات حول خلايا الدم والمكونات\n• تحليل البول: تقييم وظائف الكلى والكشف عن الالتهابات\n• فحوصات الطفيليات المعوية: فحص مجهري لعينات البراز\n• فحوصات الأمراض الفطرية: اختبارات متنوعة\n• فحوصات الأمراض الفيروسية: طرق تشخيصية متنوعة\n\n**التصوير:**\n• الأشعة السينية: صور تفصيلية للعظام والمفاصل والأعضاء\n• أشعة الأسنان: تقييم صحة الأسنان\n• الموجات فوق الصوتية: صور حية للأعضاء الداخلية\n\n**التشخيصات المتقدمة:**\n• الفحص المجهري: تحديد الخلايا والبكتيريا والطفيليات\n• التنظير الداخلي والخارجي: رؤية داخل الأعضاء\n\nتُمكّن هذه الخدمات التشخيصية البيطرية الشاملة أطباءنا من تحديد سبب مرض أو إصابة حيوانك الأليف ووضع خطة علاج دقيقة وفعّالة.`\n        : `Our state-of-the-art facility is equipped with advanced diagnostic technology, allowing us to perform a variety of tests.\n\n**Laboratory Testing:**\n• Chemical Blood Tests: Evaluate organ function (liver, kidneys, pancreas)\n• Complete Blood Count (CBC): Information about blood cells and components\n• Urine Analysis: Assess kidney function and detect infections\n• Intestinal Parasite Examinations: Microscopic examination of fecal samples\n• Fungal Disease Examinations: Tests including microscopic examination and cultures\n• Viral Disease Examinations: Various diagnostic methods to detect viral infections\n\n**Imaging:**\n• X-rays (Radiography): Detailed images of bones, joints, and internal organs\n• Dental X-rays: Assess health of teeth and surrounding bone structures\n• Ultrasound: Real-time images of internal organs\n\n**Advanced Diagnostics:**\n• Microscopic Examination: Identify cells, bacteria, parasites, or abnormalities\n• Internal and External Endoscopy: Visualize inside of organs or body cavities\n\nThese comprehensive diagnostic veterinary services enable our veterinarians to pinpoint the cause of your pet's illness or injury and develop a precise and effective treatment plan.`,\n      features: language === 'ar' ? [\n        'التحاليل: فحوصات الدم، صورة الدم الكاملة، تحليل البول',\n        'التصوير: الأشعة السينية، أشعة الأسنان، الموجات فوق الصوتية',\n        'التشخيصات المتقدمة: الفحص المجهري، التنظير',\n        'الكشف عن الطفيليات والأمراض: فحوصات شاملة'\n      ] : [\n        'Laboratory Testing: Blood tests, CBC, urine analysis',\n        'Imaging: X-rays, Dental X-rays, Ultrasound',\n        'Advanced Diagnostics: Microscopy, Endoscopy',\n        'Parasite & Disease Detection: Comprehensive examinations'\n      ],\n    },\n    {\n      id: 4,\n      icon: Scissors,\n      title: language === 'ar' ? 'العمليات الجراحية' : 'Medical Surgeries',\n      preview: language === 'ar'\n        ? 'في د. باوز، يُجري أطباؤنا ذوو الخبرة الواسعة مجموعة واسعة من العمليات الجراحية باستخدام أحدث التقنيات والمعدات المتطورة. نتفهم أن جراحة الحيوانات الأليفة قد تكون وقتًا عصيبًا لكل من الحيوانات الأليفة وأصحابها.'\n        : 'At Dr. Paws, our experienced veterinarians perform a wide range of medical surgeries using the latest techniques and state-of-the-art equipment. We understand that pet surgery can be a stressful time for both pets and their owners.',\n      fullContent: language === 'ar'\n        ? `نحن ملتزمون بتوفير بيئة آمنة ومريحة وداعمة طوال العملية.\n\n**تشمل خدمات عيادة الجراحة البيطرية:**\n\n• **عمليات التعقيم (الخصي/استئصال المبيض):** إجراءات روتينية تساعد في منع الحمل غير المرغوب فيه وتوفر فوائد صحية عديدة.\n\n• **جراحة العظام للحيوانات الأليفة:** نعالج الكسور وتمزق الأربطة (تمزق الرباط الصليبي) وخلل تنسج الورك والكوع.\n\n• **عمليات الجهاز الهضمي:** علاج حالات المعدة والأمعاء والكبد والبنكرياس بما في ذلك إزالة الأجسام الغريبة والخزعات.\n\n• **تجميل الأنف (للسلالات قصيرة الأنف):** مصمم للسلالات قصيرة الأنف مثل كلاب البولدوج والباج والبوكسر لتحسين التنفس.\n\n• **عمليات المسالك البولية:** معالجة حصوات المثانة وانسداد المسالك البولية.\n\nقبل أي إجراء جراحي، نُجري تقييمًا شاملاً قبل الجراحة. نُعطي الأولوية لإدارة الألم طوال العملية الجراحية ونوفر رعاية شاملة بعد العملية.`\n        : `We are committed to providing a safe, comfortable, and supportive environment throughout the entire process.\n\n**Our comprehensive pet surgery services include:**\n\n• **Sterilization Operations (Spay/Neuter):** Routine procedures that prevent unwanted litters and offer numerous health benefits.\n\n• **Orthopedic surgery for pets:** We address fractures, ligament tears (cruciate ligament ruptures), hip and elbow dysplasia to restore mobility.\n\n• **Digestive System Operations:** Treatment of conditions affecting the stomach, intestines, liver, pancreas including foreign body removal and biopsies.\n\n• **Rhinoplasty (for Brachycephalic Breeds):** Designed for short-nosed breeds like Bulldogs, Pugs, and Boxers to improve breathing.\n\n• **Urinary Tract Operations:** Address bladder stones, urinary obstructions, and other urinary system issues.\n\nPrior to any pet surgery procedure, we conduct a thorough pre-surgical evaluation. We prioritize pain management throughout the surgical process and provide comprehensive post-operative care.`,\n      features: language === 'ar' ? [\n        'عمليات التعقيم (الخصي/استئصال المبيض)',\n        'جراحة العظام: الكسور وتمزق الأربطة وخلل التنسج',\n        'عمليات الجهاز الهضمي: إزالة الأجسام الغريبة والخزعات',\n        'تجميل الأنف للسلالات قصيرة الأنف',\n        'عمليات المسالك البولية: حصوات المثانة والانسداد'\n      ] : [\n        'Sterilization Operations (Spay/Neuter)',\n        'Orthopedic Surgery: Fractures, ligament repairs, dysplasia',\n        'Digestive System Operations: Foreign body removal, biopsies',\n        'Rhinoplasty for Brachycephalic Breeds',\n        'Urinary Tract Operations: Bladder stones, obstructions'\n      ],\n    },\n    {\n      id: 5,\n      icon: Stethoscope,\n      title: language === 'ar' ? 'خدمات طب الأسنان' : 'Dental Services',\n      preview: language === 'ar'\n        ? 'تُعدّ صحة الفم الجيدة أمرًا بالغ الأهمية لصحة ورفاهية حيوانك الأليف بشكل عام. يُقدّم د. باوز خدمات بيطرية شاملة للأسنان مُصمّمة للحفاظ على صحة أسنان ولثة حيوانك الأليف طوال حياته.'\n        : 'Good oral hygiene is crucial for your pet\\'s overall health and well-being. Dr. Paws offers comprehensive dental veterinary services designed to keep your pet\\'s teeth and gums healthy throughout their lives.',\n      fullContent: language === 'ar'\n        ? `خدماتنا ضرورية لمنع أمراض اللثة التي يُمكن أن تُؤدّي إلى مشاكل صحية خطيرة تؤثر على القلب والكلى.\n\n**تشمل خدماتنا:**\n\n• **تنظيف الأسنان الاحترافي (الوقاية):** حجر الزاوية في الرعاية الوقائية للأسنان. نزيل تراكم البلاك والجير من فوق وتحت خط اللثة ونُلمّع الأسنان.\n\n• **الفحوصات الشاملة للأسنان:** فحوصات منتظمة للكشف المُبكّر عن مشاكل الأسنان وقد نوصي بأشعة سينية للأسنان.\n\n• **كشط وتنعيم الجذور:** يُزيل تراكم الجير ويُنعّم أسطح جذور الأسنان لعلاج أمراض اللثة.\n\n• **خلع الأسنان:** في حالات أمراض الأسنان الشديدة، يُجري أطباؤنا عمليات الخلع مع الاهتمام الدقيق بإدارة الألم.\n\n• **جراحة الفم:** إجراءات متقدمة لمشاكل الأسنان المعقدة مثل أورام الفم أو كسور الفك.\n\nالعناية المنتظمة بالأسنان ضرورية للحفاظ على صحة فم حيوانك الأليف وتحسين جودة حياته.`\n        : `Our dental services are essential for preventing periodontal disease, which can lead to serious health problems affecting the heart, kidneys, and other organs.\n\n**Our services include:**\n\n• **Professional Teeth Cleaning (Prophylaxis):** The cornerstone of preventative dental care. We remove plaque and tartar buildup from above and below the gum line, then polish teeth.\n\n• **Comprehensive Dental Check-ups:** Regular examinations for early detection of dental problems. We may recommend dental X-rays to evaluate tooth roots and surrounding bone.\n\n• **Scaling and Root Planing:** Removes tartar buildup and smooths tooth root surfaces. Particularly important for treating periodontal disease.\n\n• **Tooth Extractions:** In cases of severe dental disease or fractured teeth, performed with careful attention to pain management.\n\n• **Oral Surgery:** Advanced procedures for complex dental issues such as oral tumors or jaw fractures.\n\nRegular dental care is essential for maintaining your pet's oral health, improving their quality of life, and contributing to their overall well-being.`,\n      features: language === 'ar' ? [\n        'تنظيف الأسنان الاحترافي (الوقاية)',\n        'الفحوصات الشاملة للأسنان والأشعة السينية',\n        'كشط وتنعيم الجذور',\n        'خلع الأسنان',\n        'جراحة الفم المتقدمة'\n      ] : [\n        'Professional Teeth Cleaning (Prophylaxis)',\n        'Comprehensive Dental Check-ups and X-rays',\n        'Scaling and Root Planing',\n        'Tooth Extractions',\n        'Advanced Oral Surgery'\n      ],\n    },\n    {\n      id: 6,\n      icon: Syringe,\n      title: language === 'ar' ? 'التطعيمات الدورية' : 'Periodic Vaccinations',\n      preview: language === 'ar'\n        ? 'تُعدّ تطعيمات الحيوانات الأليفة حجر الزاوية في الخدمات البيطرية الوقائية، حيث تحمي حيوانك الأليف من مجموعة من الأمراض المُعدية التي يُحتمل أن تُهدّد حياته. في د. باوز، نُخصّص بروتوكولات تطعيماتنا بناءً على احتياجات حيوانك الفريدة.'\n        : 'Pet vaccinations are a cornerstone of preventative veterinary services, protecting your pet from a range of contagious and potentially life-threatening diseases. At Dr. Paws, we tailor our vaccination protocols based on your pet\\'s unique needs.',\n      fullContent: language === 'ar'\n        ? `نتفهم أن كل حيوان أليف فريد من نوعه، لذلك نُخصّص بروتوكولاتنا بناءً على نوع حيوانك وعمره ونمط حياته.\n\n**تطعيمات القطط الثلاثي والرباعي:**\nالحماية ضد فيروس الهربس (التهابات الجهاز التنفسي) والكاليسيفايروس (مشاكل تنفسية) والبانليفوبينيا (طاعون القطط). التطعيم الرباعي يضيف الحماية ضد لوكيميا القطط.\n\nالفوائد: الحماية من الأمراض القاتلة، تقوية جهاز المناعة، الوقاية من انتشار الأمراض بين القطط.\n\n**تطعيم الكلاب الخماسي:**\nالحماية ضد خمسة أمراض: داء الكلب، داء البارفو، داء الأدنو الفيروسي، داء البارافلو، وداء البورديتيلا.\n\nالفوائد: الحماية من الأمراض القاتلة، تقوية المناعة، منع انتشار الأمراض بين الكلاب.\n\n**تطعيم السعار:**\nمن أهم التطعيمات للكلاب والقطط، يحمي من مرض فيروسي يصيب الجهاز العصبي ويمكن انتقاله للإنسان.\n\n**تطعيمات الديدان:**\nأدوية للقضاء على الديدان المعوية تُعطى بشكل دوري حسب توجيهات الطبيب البيطري.`\n        : `We understand that every pet is unique, so we customize protocols based on your pet's species, age, lifestyle, and individual risk factors.\n\n**Trivalent and Quadrivalent Cat Vaccines:**\nProtection against feline herpesvirus (upper respiratory infections), calicivirus (respiratory problems), and panleukopenia (feline distemper). The quadrivalent vaccine adds protection against Feline Leukemia.\n\nBenefits: Protection from fatal diseases, strengthening immunity, preventing disease spread among cats.\n\n**Canine Pentavalent Vaccine:**\nProtection against five diseases: Rabies, Parvovirus, Adenovirus, Parainfluenza, and Bordetella.\n\nBenefits: Protection from fatal diseases, strengthening immunity, preventing disease spread among dogs.\n\n**Rabies Vaccine:**\nOne of the most important vaccines for both dogs and cats, protecting against this viral disease that can be transmitted to humans.\n\n**Deworming Medications:**\nMedications to eliminate intestinal worms, given periodically as directed by the veterinarian.`,\n      features: language === 'ar' ? [\n        'تطعيمات القطط الثلاثي والرباعي',\n        'تطعيم الكلاب الخماسي',\n        'تطعيم السعار للكلاب والقطط',\n        'أدوية الديدان'\n      ] : [\n        'Trivalent & Quadrivalent Cat Vaccines',\n        'Canine Pentavalent Vaccine',\n        'Rabies Vaccine for Dogs and Cats',\n        'Deworming Medications'\n      ],\n    },\n    {\n      id: 7,\n      icon: Plane,\n      title: language === 'ar' ? 'إجراءات سفر الحيوانات الأليفة' : 'Pet Travel Procedures',\n      preview: language === 'ar'\n        ? 'يُمكن أن يكون السفر مع حيوانك الأليف تجربة مُجزية، ولكنه يتطلب تخطيطًا دقيقًا والالتزام بلوائح مُحددة. يُقدّم د. باوز خدمات شاملة لإجراءات سفر الحيوانات الأليفة لضمان سفر سلس وآمن.'\n        : 'Traveling with your pet can be a rewarding experience, but it requires careful planning and adherence to specific regulations. Dr. Paws offers comprehensive pet travel procedures services to ensure smooth and safe pet travel.',\n      fullContent: language === 'ar'\n        ? `نتفهم أن لكل وجهة متطلبات فريدة، وفريقنا ذو الخبرة هنا لإرشادك سواء في الداخل أو دوليًا.\n\n**تشمل خدماتنا البيطرية لإجراءات سفر الحيوانات الأليفة:**\n\n• **الشهادات الصحية:** وثيقة رسمية تُثبت أن حيوانك الأليف يتمتع بصحة جيدة وخالٍ من الأمراض المُعدية، مطلوبة للسفر عبر حدود الولايات أو دوليًا. نُجري فحصًا بدنيًا شاملاً.\n\n• **اختبار داء الكَلَب لأغراض السفر:** العديد من البلدان تتطلب إثباتًا للتطعيم ضد داء الكَلَب و/أو اختبارًا لمعايرة داء الكَلَب. نُقدّم الوثائق الرسمية المطلوبة للسفر الدولي. ملاحظة: غالبًا ما تكون هناك فترات انتظار.\n\n• **ملء نماذج الشهادات:** نساعدك في ملء نماذج الشهادات الضرورية بدقة وكفاءة. نبقى على اطلاع بأحدث اللوائح بما في ذلك الدول الأوروبية والشهادات المُصدّقة من USDA APHIS.\n\nنوصي بالاتصال بنا قبل أسابيع أو حتى أشهر من موعد سفرك لإتاحة وقت كافٍ للفحوصات والاختبارات والأوراق.`\n        : `We understand that each destination has unique requirements, and our experienced team is here to guide you through the process, both domestically and internationally.\n\n**Our pet travel veterinary services include:**\n\n• **Health Certificates:** Official document verifying that your pet is healthy and free from contagious diseases, required for travel across state lines or internationally. We perform thorough physical examinations.\n\n• **Rabies Testing for Travel Purposes:** Many countries require proof of rabies vaccination and/or a rabies titer test. We administer vaccinations and perform titer tests, providing official documentation. Note: waiting periods often apply.\n\n• **Filling out Certificate Forms:** Our experienced team assists with completing complex paperwork. We stay up-to-date on regulations for various destinations, including European countries and those requiring USDA APHIS endorsed certificates.\n\nWe recommend contacting us several weeks or even months before your planned travel date to allow ample time for examinations, testing, and paperwork.`,\n      features: language === 'ar' ? [\n        'الشهادات الصحية للسفر المحلي والدولي',\n        'اختبار وتطعيم داء الكَلَب للسفر',\n        'ملء نماذج الشهادات والتصديق من USDA'\n      ] : [\n        'Health Certificates for domestic and international travel',\n        'Rabies Testing and Vaccination for Travel',\n        'Certificate Forms completion and USDA endorsement'\n      ],\n    },\n    {\n      id: 8,\n      icon: Home,\n      title: language === 'ar' ? 'خدمات الإقامة' : 'Boarding Services',\n      preview: language === 'ar'\n        ? 'في د. باوز، نتفهم أن ترك حيوانك الأليف قد يكون مُرهقًا. لهذا السبب نُقدّم خدمات الإقامة وفندقة الحيوانات المُريحة والرعاية كجزء من خدماتنا البيطرية الشاملة.'\n        : 'At Dr. Paws, we understand that leaving your pet behind can be stressful. That\\'s why we offer comfortable and caring boarding services as part of our comprehensive veterinary services, providing a true home away from home.',\n      fullContent: language === 'ar'\n        ? `نُلبي مجموعة مُتنوعة من الاحتياجات مع خيارات إقامة مُتخصّصة:\n\n**فندق علاجي للحيوانات الأليفة:**\nمصمم للحيوانات الأليفة التي تتطلب رعاية طبية مُتخصّصة:\n• التعافي بعد الجراحة: مُراقبة دقيقة وإدارة للألم ومُساعدة في الحركة\n• إدارة الحالات المُزمنة: رعاية فردية للسكري وأمراض الكلى والقلب\n• الحيوانات التي تتطلب مُراقبة دقيقة: ملاحظة مُتكررة ومراقبة العلامات الحيوية\n\n**فندق للحيوانات وعلاج الفطريات:**\nإيواء متخصص للحيوانات التي تخضع لعلاج من الالتهابات الفطرية:\n• العزل: بيئة مُنفصلة ومعزولة لمنع انتقال العدوى\n• بروتوكولات تنظيف وتطهير متخصصة: نظافة صارمة\n• إعطاء الأدوية المُضادة للفطريات: وفقًا لتعليمات الطبيب\n• مُراقبة تقدّم العلاج: ملاحظة دقيقة لضمان الفعالية\n\nخدمات الإقامة لدينا تضمن حصول حيوانك الأليف على رعاية احترافية وانتباه أثناء غيابك.`\n        : `We cater to a variety of needs with specialized boarding options:\n\n**Therapeutic Pet Hotel:**\nDesigned for pets requiring specialized medical care:\n• Post-surgical recovery: Close monitoring, pain management, mobility assistance\n• Management of chronic conditions: Individualized care for diabetes, kidney disease, heart disease\n• Pets requiring close monitoring: Frequent observation, vital signs monitoring, medication administration\n\n**Pet Hotel and Fungi Treatment:**\nSpecialized boarding for pets undergoing fungal infection treatment:\n• Isolation: Separate environment to prevent cross-contamination\n• Specialized cleaning and disinfection protocols: Strict hygiene to prevent fungal spores\n• Administration of antifungal medications: Prescribed medications according to veterinarian's instructions\n• Monitoring of treatment progress: Close observation to ensure treatment effectiveness\n\nOur boarding services ensure your pet receives professional care and attention while you're away.`,\n      features: language === 'ar' ? [\n        'فندق علاجي: التعافي بعد الجراحة وإدارة الحالات المزمنة',\n        'إقامة متخصصة لعلاج الفطريات: بيئة معزولة مع بروتوكولات صارمة'\n      ] : [\n        'Therapeutic Pet Hotel: Post-surgical recovery and chronic condition management',\n        'Specialized Fungi Treatment Boarding: Isolated environment with strict protocols'\n      ],\n    },\n    {\n      id: 9,\n      icon: Heart,\n      title: language === 'ar' ? 'العناية المركزة' : 'Intensive Care',\n      preview: language === 'ar'\n        ? 'في عيادة د. باوز البيطرية، نتفهم أن الأمراض والإصابات الخطيرة تتطلب رعاية مُتخصّصة. وحدة العناية المركزة للحيوانات الأليفة لدينا مُصمّمة لتوفير مُراقبة وعلاج مُتقدّمين للحيوانات الأليفة في الحالات التي تُهدّد حياتها.'\n        : 'At Dr. Paws Veterinary Clinic, we understand that critical illnesses and injuries require specialized care. Our pet intensive care unit (ICU) is a dedicated space designed to provide advanced monitoring and treatment for pets in life-threatening conditions.',\n      fullContent: language === 'ar'\n        ? `فريقنا البيطري مُدرّب على طب الحالات الحرجة ويستخدم أحدث المُعدّات لتوفير رعاية على مدار الساعة.\n\n**تُركّز خدمات مركز العناية بالحيوانات على إدارة وعلاج:**\n\n• **فشل الأعضاء:**\n  - الفشل الكلوي: علاج مُتقدّم بالسوائل وإدارة للكهارل ورعاية داعمة\n  - الفشل الكبدي: علاجات متخصصة لدعم وظائف الكبد\n  - فشل القلب: مُراقبة مُتقدّمة للقلب وعلاج بالأكسجين\n\n• **الاضطرابات الأيضية:** إدارة حالات معقدة مثل داء السكري ومرض كوشينغ ومرض أديسون.\n\n• **أمراض الغدد الصماء:** رعاية متخصصة لقصور الغدة الدرقية وفرط نشاط الغدة الدرقية والسكري الكاذب.\n\n• **الإصابات الشديدة:** رعاية فورية شاملة للكسور والإصابات الداخلية والجروح الشديدة.\n\n• **حالات حرجة أخرى:** الإنتان، ضيق التنفس، الحالات العصبية، مُضاعفات ما بعد الجراحة.\n\nفريقنا مُكرس لتوفير رعاية بيطرية مركزة لإعطاء حيوانك الأليف أفضل فرصة للتعافي.`\n        : `Our experienced veterinary team is trained in critical care medicine and utilizes state-of-the-art equipment to provide around-the-clock care.\n\n**Our ICU services focus on managing and treating:**\n\n• **Organ Failure:**\n  - Kidney Failure: Advanced fluid therapy, electrolyte management, supportive care\n  - Liver Failure: Specialized treatments to support liver function and manage complications\n  - Heart Failure: Advanced cardiac monitoring, oxygen therapy, medication management\n\n• **Metabolic Disorders:** Management of complex conditions such as diabetes mellitus, Cushing's disease, and Addison's disease.\n\n• **Endocrine Diseases:** Specialized care for hypothyroidism, hyperthyroidism, and diabetes insipidus to regulate hormone levels.\n\n• **Severe Injuries:** Immediate comprehensive care for traumatic injuries, including fractures, internal injuries, and severe wounds.\n\n• **Other Critical Conditions:** Sepsis, respiratory distress, neurological conditions, post-operative complications.\n\nOur team is dedicated to providing compassionate and intensive veterinary services to give your pet the best possible chance of recovery.`,\n      features: language === 'ar' ? [\n        'علاج فشل الأعضاء: الكلى والكبد والقلب',\n        'الاضطرابات الأيضية: السكري وكوشينغ وأديسون',\n        'أمراض الغدد الصماء: اضطرابات الغدة الدرقية والسكري الكاذب',\n        'الإصابات الشديدة: الكسور والإصابات الداخلية',\n        'حالات حرجة: الإنتان وضيق التنفس والرعاية العصبية'\n      ] : [\n        'Organ Failure Treatment: Kidney, Liver, Heart',\n        'Metabolic Disorders: Diabetes, Cushing\\'s, Addison\\'s disease',\n        'Endocrine Diseases: Thyroid disorders, diabetes insipidus',\n        'Severe Injuries: Trauma care, fractures, internal injuries',\n        'Critical Conditions: Sepsis, respiratory distress, neurological care'\n      ],\n    },\n    {\n      id: 10,\n      icon: AlertCircle,\n      title: language === 'ar' ? 'خدمات الطوارئ' : 'Emergency Services',\n      preview: language === 'ar'\n        ? 'يُمكن أن تكون حالات الطوارئ للحيوانات الأليفة تجربة مُخيفة. في د. باوز، نتفهم مدى إلحاح وضغط هذه المواقف. نُقدّم خدمات بيطرية من خلال عيادة بيطرية طوارئ للحيوانات الأليفة.'\n        : 'Pet emergencies can be a frightening experience for both you and your beloved companion. At Dr. Paws, we understand the urgency and stress of these situations. We provide veterinary services through our emergency pet clinic during our regular business hours.',\n      fullContent: language === 'ar'\n        ? `فريقنا المُتخصّص مُستعد للتعامل مع مجموعة واسعة من الحالات الطبية الطارئة.\n\n**أمثلة على حالات الطوارئ التي نُعالجها:**\n\n• **الصدمات (الاصطدام بسيارة، السقوط):** تقييم وعلاج فوري للكسور والإصابات الداخلية والحالات المُتعلّقة بالصدمات.\n\n• **صعوبة التنفس:** حالة طارئة تُهدّد الحياة. إذا كان حيوانك الأليف يُعاني من صعوبة في التنفس أو يلهث أو لديه لثة زرقاء، اطلب رعاية فورية.\n\n• **نزيف حاد:** تدخل بيطري سريع للنزيف غير المُسيطر عليه.\n\n• **التسمم:** علاج لابتلاع مواد سامة. اتصل بنا أو بخط المُساعدة الخاص بالتسمم فورًا.\n\n• **النوبات:** تحديد السبب والعلاج المُناسب للنوبات العصبية أو الأيضية.\n\n• **الانتفاخ (توسع المعدة والالتواء):** حالة تُهدّد الحياة شائعة في الكلاب الكبيرة تتطلب تدخلاً فوريًا.\n\n**أرقام الطوارئ:**\nفرع الصحافة: 05520 30564\nفرع الماثر: 05313 53667\n\nسيُقدّم فريقنا إرشادات ويستعد لوصولك. هدفنا توفير رعاية سريعة وفعّالة عندما يكون حيوانك الأليف في أمس الحاجة إليها.`\n        : `Our dedicated team is prepared to handle a wide range of urgent medical situations.\n\n**Examples of emergencies we treat include:**\n\n• **Trauma (Hit by Car, Falls):** Immediate assessment and treatment of fractures, internal injuries, and trauma-related conditions.\n\n• **Difficulty Breathing:** Life-threatening respiratory distress. If your pet is struggling to breathe, gasping, or has blue-tinged gums, seek immediate care.\n\n• **Severe Bleeding:** Prompt intervention for uncontrolled internal or external bleeding.\n\n• **Poisoning:** Treatment for toxic substance ingestion. Contact us or the Pet Poison Helpline immediately if suspected.\n\n• **Seizures:** Evaluation and treatment to determine cause and appropriate management.\n\n• **Bloat (Gastric Dilatation-Volvulus):** Life-threatening condition requiring immediate intervention, common in large breed dogs.\n\n**Emergency Contact:**\nAl-Sahafa Branch: 05520 30564\nAl-Mather Branch: 05313 53667\n\nIf your pet is experiencing any urgent medical issues, please call our emergency pet clinic immediately. Our emergency team will provide guidance and prepare for your arrival. Our goal is to provide swift, effective, and compassionate care when your pet needs it most.`,\n      features: language === 'ar' ? [\n        'الصدمات: الاصطدام بسيارة، السقوط، الحوادث',\n        'صعوبة التنفس: ضيق التنفس',\n        'نزيف حاد: داخلي وخارجي',\n        'التسمم: ابتلاع مواد سامة',\n        'النوبات: طوارئ عصبية',\n        'الانتفاخ: توسع المعدة والالتواء'\n      ] : [\n        'Trauma: Hit by car, falls, accidents',\n        'Difficulty Breathing: Respiratory distress',\n        'Severe Bleeding: Internal and external',\n        'Poisoning: Toxic substance ingestion',\n        'Seizures: Neurological emergencies',\n        'Bloat: Gastric Dilatation-Volvulus'\n      ],\n      emergency: true,\n    },\n    {\n      id: 11,\n      icon: Pill,\n      title: language === 'ar' ? 'خدمات الرعاية المنزلية' : 'Home Care Services',\n      preview: language === 'ar'\n        ? 'نتفهم أن زيارة عيادة بيطرية قد تكون صعبة بالنسبة لبعض الحيوانات الأليفة وأصحابها. سواء كان حيوانك الأليف يُعاني من القلق أثناء السفر أو لديه مشاكل في الحركة أو كنت تُفضّل راحة الرعاية في المنزل، يُقدّم د. باوز خدمات بيطرية للرعاية المنزلية.'\n        : 'We understand that visiting a veterinary clinic can be challenging for some pets and their owners. Whether your pet experiences anxiety during travel, has mobility issues, or you simply prefer the convenience of in-home care, Dr. Paws offers compassionate home care veterinary services.',\n      fullContent: language === 'ar'\n        ? `نجلب خبرتنا إليك مُباشرةً، مما يضمن حصول حيوانك الأليف على الاهتمام الضروري مع تقليل التوتر.\n\n**قد تشمل خدمات الرعاية المنزلية:**\n\n• **الفحوصات الصحية:** فحوصات صحية روتينية في راحة منزلك، تقييم صحة حيوانك الأليف بشكل عام وفحص العلامات الحيوية. مُفيد بشكل خاص للحيوانات الأليفة الكبيرة في السن أو تلك التي تُعاني من قيود في الحركة.\n\n• **التطعيمات:** إعطاء التطعيمات الضرورية في المنزل، حماية حيوانك الأليف من الأمراض دون ضغوط زيارة العيادة.\n\n• **جمع العينات:** جمع عينات الدم أو البول أو البراز في منزلك للاختبارات التشخيصية، مما يُقلّل من التوتر على حيوانك الأليف.\n\nخدماتنا البيطرية للرعاية المنزلية مُصمّمة لتوفير رعاية يسهل الوصول إليها، مما يضمن حصول حيوانك الأليف على الاهتمام الضروري في بيئة مألوفة ومريحة. يُرجى الاتصال بنا لمُناقشة احتياجات حيوانك الأليف.`\n        : `We bring our expertise directly to you, ensuring your pet receives the necessary attention while minimizing stress.\n\n**Our home care services may include:**\n\n• **Wellness Exams:** Routine wellness exams in the comfort of your home, assessing overall health, checking vital signs, and discussing any concerns. Especially beneficial for senior pets or those with mobility limitations.\n\n• **Vaccinations:** Administer necessary vaccinations at home, protecting your pet from preventable diseases without the stress of a clinic visit.\n\n• **Sample Collection:** Collect blood, urine, or fecal samples in your home for diagnostic testing, minimizing stress for your pet.\n\nOur home care veterinary services are designed to provide accessible and compassionate care, ensuring your pet receives the necessary attention in a familiar, comfortable environment. Please contact us to discuss your pet's needs and determine if a home visit is the right option.`,\n      features: language === 'ar' ? [\n        'الفحوصات الصحية: تقييمات صحية روتينية في المنزل',\n        'التطعيمات: خدمات التطعيم في المنزل',\n        'جمع العينات: الدم والبول والبراز للاختبارات'\n      ] : [\n        'Wellness Exams: Routine health assessments at home',\n        'Vaccinations: In-home vaccination services',\n        'Sample Collection: Blood, urine, fecal samples for testing'\n      ],\n    },\n  ];\n\n  const ServiceCard = ({ service, isInView }: { service: typeof services[0]; isInView: boolean }) => {\n    const Icon = service.icon;\n    const isExpanded = expandedCards[service.id];\n    \n    const lordIconConfig: Record<number, string> = {\n      1: 'https://cdn.lordicon.com/fdjmqgqo.json',\n      2: 'https://cdn.lordicon.com/qrbnmuva.json',\n      3: 'https://cdn.lordicon.com/xtqxtpiq.json',\n      4: 'https://cdn.lordicon.com/ebchswfj.json',\n      5: 'https://cdn.lordicon.com/qgvewybt.json',\n      6: 'https://cdn.lordicon.com/ssjzuqhe.json',\n      7: 'https://cdn.lordicon.com/xvidkckm.json',\n      8: 'https://cdn.lordicon.com/nejoxqhx.json',\n      9: 'https://cdn.lordicon.com/rqeluyar.json',\n      10: 'https://cdn.lordicon.com/njkwpvad.json',\n      11: 'https://cdn.lordicon.com/npehekun.json',\n    };\n    \n    const hasLordIcon = lordIconConfig[service.id];\n\n    return (\n      <motion.div\n        initial={{ opacity: 0, y: 30 }}\n        animate={isInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 30 }}\n        transition={{ duration: 0.6, ease: 'easeOut' }}\n        className=\"h-full\"\n      >\n        <Card\n          className={`h-full flex flex-col hover-elevate ${\n            service.emergency ? 'border-[#e9c46a]' : ''\n          }`}\n          data-testid={`card-service-${service.id}`}\n          dir={language === 'ar' ? 'rtl' : 'ltr'}\n        >\n          <CardHeader>\n            <CardTitle\n              className={`text-[#18ac61] ${\n                hasLordIcon ? 'flex items-center gap-3' : ''\n              }`}\n              data-testid={`title-service-${service.id}`}\n            >\n              {hasLordIcon && (\n                <lord-icon\n                  src={lordIconConfig[service.id]}\n                  trigger=\"loop\"\n                  delay=\"1500\"\n                  style={{ width: '60px', height: '60px' }}\n                />\n              )}\n              {service.title}\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"flex flex-col flex-1\">\n            {/* Preview text - always visible */}\n            <p\n              className=\"text-foreground/80 mb-4\"\n              data-testid={`preview-service-${service.id}`}\n            >\n              {service.preview}\n            </p>\n\n            {/* Expanded content - shown when Read More is clicked */}\n            <AnimatePresence initial={false}>\n              {isExpanded && (\n                <motion.div\n                  key={`expanded-${service.id}`}\n                  initial={{ opacity: 0, height: 0 }}\n                  animate={{ opacity: 1, height: 'auto' }}\n                  exit={{ opacity: 0, height: 0 }}\n                  transition={{ duration: 0.3, ease: 'easeOut' }}\n                >\n                  {/* Full content */}\n                  {service.fullContent && (\n                    <div className=\"mb-4 text-foreground/80 whitespace-pre-line\">\n                      {service.fullContent}\n                    </div>\n                  )}\n\n                  {/* Features list */}\n                  <ul className=\"space-y-2 mb-4\">\n                    {service.features.map((feature, idx) => (\n                      <li\n                        key={idx}\n                        className=\"text-sm text-foreground/70 flex items-start gap-2\"\n                        data-testid={`feature-service-${service.id}-${idx}`}\n                      >\n                        <span className=\"inline-block w-1.5 h-1.5 rounded-full bg-[#18ac61] mt-2 flex-shrink-0\" />\n                        <span>{feature}</span>\n                      </li>\n                    ))}\n                  </ul>\n                </motion.div>\n              )}\n            </AnimatePresence>\n\n            {/* Read More / Show Less button */}\n            {service.fullContent && (\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={() => toggleExpand(service.id)}\n                className=\"mb-4 mt-auto\"\n                data-testid={`button-expand-${service.id}`}\n              >\n                {isExpanded ? (\n                  <>\n                    <ChevronUp className=\"w-4 h-4 mr-1\" />\n                    {language === 'ar' ? 'عرض أقل' : 'Show less'}\n                  </>\n                ) : (\n                  <>\n                    <ChevronDown className=\"w-4 h-4 mr-1\" />\n                    {language === 'ar' ? 'اقرأ المزيد' : 'Read more'}\n                  </>\n                )}\n              </Button>\n            )}\n\n            {/* Book appointment button */}\n            <Link href=\"/book-now\">\n              <Button\n                className=\"w-full\"\n                data-testid={`button-book-${service.id}`}\n              >\n                {language === 'ar' ? 'احجز موعد' : 'Book an Appointment'}\n              </Button>\n            </Link>\n          </CardContent>\n        </Card>\n      </motion.div>\n    );\n  };\n\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <Header />\n      <ECGAnimation />\n\n      <main className=\"flex-1 relative z-10\">\n        {/* Hero Section */}\n        <section\n          ref={heroRef}\n          className=\"relative h-[400px] flex items-center justify-center overflow-hidden\"\n        >\n          <motion.div\n            initial={{ scale: 1.1 }}\n            animate={{ scale: 1 }}\n            transition={{ duration: 1.5, ease: 'easeOut' }}\n            className=\"absolute inset-0\"\n          >\n            <div className=\"absolute inset-0 bg-gradient-to-b from-black/60 to-black/40 z-10\" />\n            <img\n              src={servicesHeroImage}\n              alt=\"Veterinary Services\"\n              className=\"w-full h-full object-cover\"\n            />\n          </motion.div>\n\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            animate={heroInView ? { opacity: 1, y: 0 } : {}}\n            transition={{ duration: 0.8, delay: 0.3 }}\n            className=\"relative z-20 text-center px-6\"\n          >\n            <h1\n              className=\"font-display text-5xl md:text-6xl font-bold text-white mb-4\"\n              data-testid=\"text-services-header\"\n            >\n              {language === 'ar' ? 'خدماتنا' : 'Our Services'}\n            </h1>\n            <p\n              className=\"text-xl md:text-2xl text-white/90 max-w-3xl mx-auto\"\n              data-testid=\"text-services-subheader\"\n            >\n              {language === 'ar' \n                ? 'نقدم نطاقًا كاملاً من الرعاية لحيواناتكم الأليفة، من الفحوصات الروتينية إلى العلاجات المتقدمة'\n                : 'Comprehensive & Specialized Care for Your Pets'\n              }\n            </p>\n          </motion.div>\n        </section>\n\n        {/* Services Grid 1 */}\n        <section ref={servicesRef1} className=\"py-20\">\n          <div className=\"max-w-7xl mx-auto px-6\">\n            <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n              {services.slice(0, 3).map((service) => (\n                <ServiceCard key={service.id} service={service} isInView={servicesInView1} />\n              ))}\n            </div>\n          </div>\n        </section>\n\n        {/* Image Section 1 */}\n        <motion.section\n          ref={imageRef1}\n          className=\"py-16\"\n        >\n          <div className=\"max-w-7xl mx-auto px-6\">\n            <div className=\"grid md:grid-cols-2 gap-12 items-center\">\n              <motion.div\n                initial={{ opacity: 0, x: -50 }}\n                animate={imageInView1 ? { opacity: 1, x: 0 } : { opacity: 0, x: -50 }}\n                transition={{ duration: 0.8, ease: 'easeOut' }}\n              >\n                <motion.img\n                  whileHover={{ scale: 1.02 }}\n                  transition={{ duration: 0.3 }}\n                  src={vetExamImage}\n                  alt=\"Veterinary examination\"\n                  className=\"rounded-xl w-full h-auto object-cover shadow-md\"\n                  data-testid=\"img-services-1\"\n                />\n              </motion.div>\n              <motion.div\n                initial={{ opacity: 0, x: 50 }}\n                animate={imageInView1 ? { opacity: 1, x: 0 } : { opacity: 0, x: 50 }}\n                transition={{ duration: 0.8, delay: 0.2, ease: 'easeOut' }}\n                className=\"space-y-6\"\n                dir={language === 'ar' ? 'rtl' : 'ltr'}\n              >\n                <h2 className=\"text-3xl font-bold text-primary\">\n                  {language === 'ar' ? 'رعاية شاملة ومتخصصة' : 'Comprehensive & Specialized Care'}\n                </h2>\n                <p className=\"text-lg text-foreground/90\">\n                  {language === 'ar' \n                    ? 'في عيادات د. باوز، نقدم مجموعة واسعة من الخدمات البيطرية المتخصصة باستخدام أحدث المعدات والتقنيات لضمان صحة وسعادة حيوانك الأليف.'\n                    : 'At Dr. Paws, we offer a wide range of specialized veterinary services using the latest equipment and technology to ensure your pet\\'s health and happiness.'\n                  }\n                </p>\n              </motion.div>\n            </div>\n          </div>\n        </motion.section>\n\n        {/* Services Grid 2 */}\n        <section ref={servicesRef2} className=\"py-20\">\n          <div className=\"max-w-7xl mx-auto px-6\">\n            <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n              {services.slice(3, 7).map((service) => (\n                <ServiceCard key={service.id} service={service} isInView={servicesInView2} />\n              ))}\n            </div>\n          </div>\n        </section>\n\n        {/* Image Section 2 */}\n        <motion.section\n          ref={imageRef2}\n          className=\"py-16\"\n        >\n          <div className=\"max-w-7xl mx-auto px-6\">\n            <div className=\"grid md:grid-cols-2 gap-12 items-center\">\n              <motion.div\n                initial={{ opacity: 0, x: 50 }}\n                animate={imageInView2 ? { opacity: 1, x: 0 } : { opacity: 0, x: 50 }}\n                transition={{ duration: 0.8, ease: 'easeOut' }}\n                className=\"md:order-2\"\n              >\n                <motion.img\n                  whileHover={{ scale: 1.02 }}\n                  transition={{ duration: 0.3 }}\n                  src={consultationImage}\n                  alt=\"Veterinary consultation\"\n                  className=\"rounded-xl w-full h-auto object-cover shadow-md\"\n                  data-testid=\"img-services-2\"\n                />\n              </motion.div>\n              <motion.div\n                initial={{ opacity: 0, x: -50 }}\n                animate={imageInView2 ? { opacity: 1, x: 0 } : { opacity: 0, x: -50 }}\n                transition={{ duration: 0.8, delay: 0.2, ease: 'easeOut' }}\n                className=\"space-y-6 md:order-1\"\n                dir={language === 'ar' ? 'rtl' : 'ltr'}\n              >\n                <h2 className=\"text-3xl font-bold text-primary\">\n                  {language === 'ar' ? 'فريق محترف ومتفاني' : 'Professional & Dedicated Team'}\n                </h2>\n                <p className=\"text-lg text-foreground/90\">\n                  {language === 'ar' \n                    ? 'فريقنا من الأطباء البيطريين ذوي الخبرة ملتزم بتقديم أفضل رعاية ممكنة لحيواناتكم الأليفة مع الاهتمام بكل التفاصيل.'\n                    : 'Our team of experienced veterinarians is committed to providing the best possible care for your pets with attention to every detail.'\n                  }\n                </p>\n              </motion.div>\n            </div>\n          </div>\n        </motion.section>\n\n        {/* Services Grid 3 */}\n        <section ref={servicesRef3} className=\"py-20\">\n          <div className=\"max-w-7xl mx-auto px-6\">\n            <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n              {services.slice(7, 10).map((service) => (\n                <ServiceCard key={service.id} service={service} isInView={servicesInView3} />\n              ))}\n            </div>\n          </div>\n        </section>\n\n        {/* Home Care Section */}\n        <motion.section\n          ref={homeCareRef}\n          className=\"py-16\"\n        >\n          <div className=\"max-w-7xl mx-auto px-6\">\n            <div className=\"grid md:grid-cols-3 gap-12 items-center\">\n              <motion.div\n                initial={{ opacity: 0, x: -50 }}\n                animate={homeCareInView ? { opacity: 1, x: 0 } : { opacity: 0, x: -50 }}\n                transition={{ duration: 0.8, ease: 'easeOut' }}\n              >\n                <motion.img\n                  whileHover={{ scale: 1.02 }}\n                  transition={{ duration: 0.3 }}\n                  src={teamImage}\n                  alt=\"Veterinary team\"\n                  className=\"rounded-xl w-full h-auto object-cover shadow-md\"\n                  data-testid=\"img-home-care-left\"\n                />\n              </motion.div>\n\n              <motion.div\n                initial={{ opacity: 0, y: 30 }}\n                animate={homeCareInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 30 }}\n                transition={{ duration: 0.8, delay: 0.2, ease: 'easeOut' }}\n              >\n                <ServiceCard service={services[10]} isInView={homeCareInView} />\n              </motion.div>\n\n              <motion.div\n                initial={{ opacity: 0, x: 50 }}\n                animate={homeCareInView ? { opacity: 1, x: 0 } : { opacity: 0, x: 50 }}\n                transition={{ duration: 0.8, ease: 'easeOut' }}\n              >\n                <motion.img\n                  whileHover={{ scale: 1.02 }}\n                  transition={{ duration: 0.3 }}\n                  src={vetExamImage}\n                  alt=\"Home care service\"\n                  className=\"rounded-xl w-full h-auto object-cover shadow-md\"\n                  data-testid=\"img-home-care-right\"\n                />\n              </motion.div>\n            </div>\n          </div>\n        </motion.section>\n      </main>\n\n      <HeartbeatDivider />\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":59447},"client/src/components/AnimatedPawBackground.tsx":{"content":"import { useMemo } from 'react';\nimport { motion } from 'framer-motion';\n\nconst PawPrint = ({ color, size, top, left, duration, delay }: {\n  color: string;\n  size: number;\n  top: string;\n  left: string;\n  duration: number;\n  delay: number;\n}) => {\n  return (\n    <motion.div\n      className=\"absolute\"\n      style={{\n        top,\n        left,\n        width: `${size}px`,\n        height: `${size}px`,\n        opacity: 0.06,\n      }}\n      animate={{\n        y: [0, -30, 0],\n        x: [0, 15, -15, 0],\n        rotate: [0, 10, -10, 0],\n      }}\n      transition={{\n        duration,\n        delay,\n        repeat: Infinity,\n        ease: \"easeInOut\",\n      }}\n    >\n      <svg\n        viewBox=\"0 0 24 24\"\n        fill={color}\n        width=\"100%\"\n        height=\"100%\"\n      >\n        <path d=\"M12 8c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm-6 4c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm12 0c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm-9 6c0-1.66 1.34-3 3-3s3 1.34 3 3H9zm-3 2c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm12 0c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z\"/>\n        <ellipse cx=\"12\" cy=\"20\" rx=\"4\" ry=\"2.5\"/>\n      </svg>\n    </motion.div>\n  );\n};\n\nexport default function AnimatedPawBackground() {\n  const brandColors = [\n    '#18ac61',\n    '#264653',\n    '#e9c46a',\n    '#f4a261',\n  ];\n\n  const pawPrints = useMemo(() => {\n    return Array.from({ length: 18 }, (_, i) => ({\n      id: i,\n      color: brandColors[Math.floor(Math.random() * brandColors.length)],\n      size: Math.random() * 40 + 60,\n      top: `${Math.random() * 100}%`,\n      left: `${Math.random() * 100}%`,\n      duration: Math.random() * 10 + 15,\n      delay: Math.random() * 5,\n    }));\n  }, []);\n\n  return (\n    <div className=\"fixed inset-0 pointer-events-none overflow-hidden z-0\">\n      {pawPrints.map((paw) => (\n        <PawPrint\n          key={paw.id}\n          color={paw.color}\n          size={paw.size}\n          top={paw.top}\n          left={paw.left}\n          duration={paw.duration}\n          delay={paw.delay}\n        />\n      ))}\n    </div>\n  );\n}\n","size_bytes":2056},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/pages/About.tsx":{"content":"import { motion, useInView } from 'framer-motion';\nimport { useLanguage } from '@/contexts/LanguageContext';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Label } from '@/components/ui/label';\nimport { useState, useRef, useEffect, useCallback } from 'react';\nimport { useToast } from '@/hooks/use-toast';\nimport Header from '@/components/Header';\nimport ECGAnimation from '@/components/ECGAnimation';\nimport HeartbeatDivider from '@/components/HeartbeatDivider';\nimport Footer from '@/components/Footer';\nimport { Heart, Users, Building2, Stethoscope, Upload } from 'lucide-react';\nimport teamImage from '@assets/generated_images/Veterinary_team_professional_photo_a4845f6b.png';\nimport vetExamImage from '@assets/generated_images/Vet_examining_golden_retriever_19654044.png';\nimport consultationImage from '@assets/generated_images/Vet_consultation_with_cat_owner_7978144f.png';\nimport equipmentImage from '@assets/generated_images/Modern_veterinary_equipment_room_49dc6345.png';\nimport drMahmoudReda from '@assets/Dr Mahmoud Reda_1761496171222.png';\nimport drHassanEmbaby from '@assets/Dr Hassan Embaby_1761496171223.png';\nimport drMohamedKelany from '@assets/Dr Mohamed Kelany_1761496171224.png';\nimport drMohamedAbdulla from '@assets/Dr Mohamed Abdulla_1761496171225.png';\nimport drHeshamAlMatrein from '@assets/Dr Hesham AlMatrein _1761496171225.png';\nimport { useQuery } from '@tanstack/react-query';\nimport type { Partner } from '@shared/schema';\nimport useEmblaCarousel from 'embla-carousel-react';\nimport Autoplay from 'embla-carousel-autoplay';\n\nexport default function About() {\n  const { t, language } = useLanguage();\n  const { toast } = useToast();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const { data: partners = [] } = useQuery<Partner[]>({\n    queryKey: [\"/api/partners\"],\n  });\n\n  const heroRef = useRef(null);\n  const whoWeAreRef = useRef(null);\n  const visionMissionRef = useRef(null);\n  const whyChooseRef = useRef(null);\n  const doctorsRef = useRef(null);\n  const partnersRef = useRef(null);\n  const careersRef = useRef(null);\n\n  const heroInView = useInView(heroRef, { once: false, amount: 0.3 });\n  const whoWeAreInView = useInView(whoWeAreRef, { once: false, amount: 0.3 });\n  const visionMissionInView = useInView(visionMissionRef, { once: false, amount: 0.3 });\n  const whyChooseInView = useInView(whyChooseRef, { once: false, amount: 0.3 });\n  const doctorsInView = useInView(doctorsRef, { once: false, amount: 0.3 });\n  const partnersInView = useInView(partnersRef, { once: false, amount: 0.3 });\n  const careersInView = useInView(careersRef, { once: false, amount: 0.3 });\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n\n    setTimeout(() => {\n      toast({\n        title: t('contact.success'),\n        description: t('aboutPage.careers.submit'),\n      });\n      setIsSubmitting(false);\n      (e.target as HTMLFormElement).reset();\n    }, 1000);\n  };\n\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.1,\n      },\n    },\n  };\n\n  const itemVariants = {\n    hidden: { opacity: 0, y: 20 },\n    visible: { opacity: 1, y: 0 },\n  };\n\n  const whyChooseReasons = [\n    {\n      icon: Heart,\n      title: t('aboutPage.whyChoose.reason1.title'),\n      description: t('aboutPage.whyChoose.reason1.description'),\n    },\n    {\n      icon: Users,\n      title: t('aboutPage.whyChoose.reason2.title'),\n      description: t('aboutPage.whyChoose.reason2.description'),\n    },\n    {\n      icon: Building2,\n      title: t('aboutPage.whyChoose.reason3.title'),\n      description: t('aboutPage.whyChoose.reason3.description'),\n    },\n    {\n      icon: Stethoscope,\n      title: t('aboutPage.whyChoose.reason4.title'),\n      description: t('aboutPage.whyChoose.reason4.description'),\n    },\n  ];\n\n  const doctors = [\n    {\n      id: 1,\n      nameEn: 'Dr. Mahmoud Reda',\n      nameAr: 'د. محمود رضا',\n      image: drMahmoudReda,\n    },\n    {\n      id: 2,\n      nameEn: 'Dr. Hassan Embaby',\n      nameAr: 'د. حسن امبابي',\n      image: drHassanEmbaby,\n    },\n    {\n      id: 3,\n      nameEn: 'Dr. Mohamed Kelany',\n      nameAr: 'د. محمد كيلاني',\n      image: drMohamedKelany,\n    },\n    {\n      id: 4,\n      nameEn: 'Dr. Mohamed Abdulla',\n      nameAr: 'د. محمد عبدالله',\n      image: drMohamedAbdulla,\n    },\n    {\n      id: 5,\n      nameEn: 'Dr. Hesham AlMatrein',\n      nameAr: 'د. هشام المطرين',\n      image: drHeshamAlMatrein,\n    },\n  ];\n\n  const [emblaRef] = useEmblaCarousel(\n    { \n      loop: true, \n      align: 'center',\n      direction: language === 'ar' ? 'rtl' : 'ltr',\n      duration: 25,\n      inViewThreshold: 0\n    },\n    [Autoplay({ delay: 3000, stopOnInteraction: false })]\n  );\n\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <Header />\n      <ECGAnimation />\n      \n      <main className=\"flex-1 relative z-10\">\n        <motion.div\n          initial=\"hidden\"\n          animate=\"visible\"\n          variants={containerVariants}\n          className=\"container mx-auto px-4 py-16 space-y-16\"\n        >\n          <motion.div\n            ref={heroRef}\n            variants={itemVariants}\n            className=\"text-center space-y-4\"\n          >\n            <motion.h1\n              initial={{ opacity: 0, y: 20 }}\n              animate={heroInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}\n              transition={{ duration: 0.8 }}\n              className=\"text-4xl md:text-5xl font-bold text-primary\"\n              data-testid=\"text-about-header\"\n            >\n              {t('aboutPage.header')}\n            </motion.h1>\n            <motion.p\n              initial={{ opacity: 0, y: 20 }}\n              animate={heroInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}\n              transition={{ duration: 0.8, delay: 0.2 }}\n              className=\"text-xl text-muted-foreground\"\n              data-testid=\"text-about-subheader\"\n            >\n              {t('aboutPage.subheader')}\n            </motion.p>\n          </motion.div>\n\n          <motion.section ref={whoWeAreRef} variants={itemVariants}>\n            <div className=\"grid md:grid-cols-2 gap-12 items-center\">\n              <motion.div\n                initial={{ opacity: 0, x: -50 }}\n                animate={whoWeAreInView ? { opacity: 1, x: 0 } : { opacity: 0, x: -50 }}\n                transition={{ duration: 0.8 }}\n              >\n                <motion.img\n                  whileHover={{ scale: 1.02 }}\n                  transition={{ duration: 0.3 }}\n                  src={teamImage}\n                  alt=\"Dr. Paws veterinary team\"\n                  className=\"rounded-xl w-full h-auto object-cover shadow-md\"\n                  data-testid=\"img-who-we-are\"\n                />\n              </motion.div>\n              <motion.div\n                initial={{ opacity: 0, x: 50 }}\n                animate={whoWeAreInView ? { opacity: 1, x: 0 } : { opacity: 0, x: 50 }}\n                transition={{ duration: 0.8, delay: 0.2 }}\n                className=\"space-y-6\"\n              >\n                <h2 className=\"text-3xl font-bold text-primary\" data-testid=\"text-who-we-are-title\">\n                  {t('aboutPage.whoWeAre.title')}\n                </h2>\n                {t('aboutPage.whoWeAre.subtitle') && (\n                  <h3 className=\"text-2xl font-semibold text-foreground\" data-testid=\"text-who-we-are-subtitle\">\n                    {t('aboutPage.whoWeAre.subtitle')}\n                  </h3>\n                )}\n                <div className=\"space-y-4 text-lg text-foreground/90\">\n                  <p data-testid=\"text-who-we-are-para1\">{t('aboutPage.whoWeAre.para1')}</p>\n                  {t('aboutPage.whoWeAre.para2') && (\n                    <p data-testid=\"text-who-we-are-para2\">{t('aboutPage.whoWeAre.para2')}</p>\n                  )}\n                  {t('aboutPage.whoWeAre.para3') && (\n                    <p data-testid=\"text-who-we-are-para3\">{t('aboutPage.whoWeAre.para3')}</p>\n                  )}\n                </div>\n              </motion.div>\n            </div>\n          </motion.section>\n\n          <motion.section ref={visionMissionRef} variants={itemVariants}>\n            <div className=\"grid md:grid-cols-2 gap-12 items-center\">\n              <motion.div\n                initial={{ opacity: 0, x: 50 }}\n                animate={visionMissionInView ? { opacity: 1, x: 0 } : { opacity: 0, x: 50 }}\n                transition={{ duration: 0.8 }}\n                className=\"md:order-2\"\n              >\n                <motion.img\n                  whileHover={{ scale: 1.02 }}\n                  transition={{ duration: 0.3 }}\n                  src={vetExamImage}\n                  alt=\"Veterinarian examining dog\"\n                  className=\"rounded-xl w-full h-auto object-cover shadow-md\"\n                  data-testid=\"img-vision-mission\"\n                />\n              </motion.div>\n              <motion.div\n                initial={{ opacity: 0, x: -50 }}\n                animate={visionMissionInView ? { opacity: 1, x: 0 } : { opacity: 0, x: -50 }}\n                transition={{ duration: 0.8, delay: 0.2 }}\n                className=\"md:order-1 grid gap-8\"\n              >\n                <Card data-testid=\"card-vision\">\n                  <CardHeader>\n                    <CardTitle className=\"text-2xl text-primary flex items-center gap-3\">\n                      <lord-icon\n                        src=\"https://cdn.lordicon.com/zywwafpn.json\"\n                        trigger=\"loop\"\n                        delay=\"1500\"\n                        state=\"morph-turn-on\"\n                        colors=\"primary:#545454,secondary:#18ac61\"\n                        style={{ width: '60px', height: '60px' }}\n                      />\n                      {t('aboutPage.vision.title')}\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <p className=\"text-lg text-foreground/90\">{t('aboutPage.vision.content')}</p>\n                  </CardContent>\n                </Card>\n\n                <Card data-testid=\"card-mission\">\n                  <CardHeader>\n                    <CardTitle className=\"text-2xl text-primary flex items-center gap-3\">\n                      <lord-icon\n                        src=\"https://cdn.lordicon.com/lagziwcr.json\"\n                        trigger=\"loop\"\n                        delay=\"1500\"\n                        colors=\"primary:#545454,secondary:#18ac61\"\n                        style={{ width: '60px', height: '60px' }}\n                      />\n                      {t('aboutPage.mission.title')}\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <p className=\"text-lg text-foreground/90\">{t('aboutPage.mission.content')}</p>\n                  </CardContent>\n                </Card>\n              </motion.div>\n            </div>\n          </motion.section>\n\n          <motion.section ref={whyChooseRef} variants={itemVariants} className=\"space-y-8\">\n            <motion.h2\n              initial={{ opacity: 0, y: 20 }}\n              animate={whyChooseInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}\n              transition={{ duration: 0.8 }}\n              className=\"text-3xl font-bold text-primary text-center\"\n              data-testid=\"text-why-choose-title\"\n            >\n              {t('aboutPage.whyChoose.title')}\n            </motion.h2>\n            <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-6\">\n              {whyChooseReasons.map((reason, index) => {\n                const Icon = reason.icon;\n                return (\n                  <Card key={index} className=\"text-center\" data-testid={`card-reason-${index + 1}`}>\n                    <CardHeader>\n                      <div className=\"mx-auto w-16 h-16 bg-primary/10 rounded-full flex items-center justify-center mb-4\">\n                        <Icon className=\"w-8 h-8 text-primary\" />\n                      </div>\n                      <CardTitle className=\"text-xl\">{reason.title}</CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                      <p className=\"text-muted-foreground\">{reason.description}</p>\n                    </CardContent>\n                  </Card>\n                );\n              })}\n            </div>\n          </motion.section>\n\n          <motion.section ref={doctorsRef} variants={itemVariants}>\n            <div className=\"flex flex-col lg:flex-row gap-12 items-center justify-center\">\n              {/* Doctor Carousel - Left Side */}\n              <motion.div\n                initial={{ opacity: 0, x: -50 }}\n                animate={doctorsInView ? { opacity: 1, x: 0 } : { opacity: 0, x: -50 }}\n                transition={{ duration: 0.8 }}\n                className=\"w-full max-w-[400px] sm:max-w-none sm:w-[500px] sm:min-w-[500px] mx-auto\"\n              >\n                {/* Carousel Container */}\n                <div className=\"w-full\">\n                  <div className=\"overflow-hidden rounded-xl\" ref={emblaRef}>\n                    <div className=\"flex\">\n                      {doctors.map((doctor) => (\n                        <div\n                          key={doctor.id}\n                          className=\"flex-shrink-0 flex-grow-0 basis-full\"\n                          data-testid={`doctor-slide-${doctor.id}`}\n                        >\n                          <div className=\"overflow-visible rounded-xl shadow-md\">\n                            <div className=\"relative w-full aspect-square overflow-hidden rounded-xl\">\n                              <motion.img\n                                whileHover={{ scale: 1.05 }}\n                                transition={{ duration: 0.3 }}\n                                src={doctor.image}\n                                alt={language === 'ar' ? doctor.nameAr : doctor.nameEn}\n                                className=\"w-full h-full object-cover\"\n                                data-testid={`img-doctor-${doctor.id}`}\n                              />\n                            </div>\n                            <div className=\"p-6 text-center bg-gradient-to-b from-background to-primary/5 rounded-b-xl\">\n                              <h3 className=\"text-2xl font-semibold text-primary\" data-testid={`text-doctor-name-${doctor.id}`}>\n                                {language === 'ar' ? doctor.nameAr : doctor.nameEn}\n                              </h3>\n                            </div>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              </motion.div>\n              \n              {/* Content - Right Side */}\n              <motion.div\n                initial={{ opacity: 0, x: 50 }}\n                animate={doctorsInView ? { opacity: 1, x: 0 } : { opacity: 0, x: 50 }}\n                transition={{ duration: 0.8, delay: 0.2 }}\n                className=\"space-y-6\"\n              >\n                <h2 className=\"text-3xl font-bold text-primary flex items-center gap-3\" data-testid=\"text-doctors-title\">\n                  <lord-icon\n                    src=\"https://cdn.lordicon.com/jfdtmvil.json\"\n                    trigger=\"loop\"\n                    delay=\"1500\"\n                    state=\"in-reveal\"\n                    colors=\"primary:#545454,secondary:#18ac61\"\n                    style={{ width: '60px', height: '60px' }}\n                  />\n                  {t('aboutPage.doctors.title')}\n                </h2>\n                <p className=\"text-lg text-foreground/90 leading-relaxed\" data-testid=\"text-doctors-description\">\n                  {t('aboutPage.doctors.description')}\n                </p>\n                <Card className=\"border-primary/20\">\n                  <CardContent className=\"p-6\">\n                    <div className=\"space-y-4\">\n                      <div className=\"flex items-center gap-3\">\n                        <div className=\"w-12 h-12 bg-primary/10 rounded-full flex items-center justify-center flex-shrink-0\">\n                          <Stethoscope className=\"w-6 h-6 text-primary\" />\n                        </div>\n                        <div>\n                          <h4 className=\"font-semibold text-foreground\">\n                            {language === 'ar' ? 'خبرة واسعة' : 'Extensive Experience'}\n                          </h4>\n                          <p className=\"text-sm text-muted-foreground\">\n                            {language === 'ar' \n                              ? 'فريق من الأطباء البيطريين المؤهلين تأهيلاً عالياً'\n                              : 'Highly qualified veterinary team'}\n                          </p>\n                        </div>\n                      </div>\n                      <div className=\"flex items-center gap-3\">\n                        <div className=\"w-12 h-12 bg-primary/10 rounded-full flex items-center justify-center flex-shrink-0\">\n                          <Heart className=\"w-6 h-6 text-primary\" />\n                        </div>\n                        <div>\n                          <h4 className=\"font-semibold text-foreground\">\n                            {language === 'ar' ? 'رعاية شاملة' : 'Comprehensive Care'}\n                          </h4>\n                          <p className=\"text-sm text-muted-foreground\">\n                            {language === 'ar' \n                              ? 'خدمات بيطرية متكاملة لحيوانك الأليف'\n                              : 'Complete veterinary services for your pet'}\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              </motion.div>\n            </div>\n          </motion.section>\n\n          <motion.section ref={partnersRef} variants={itemVariants} className=\"space-y-6\">\n            <motion.h2\n              initial={{ opacity: 0, y: 20 }}\n              animate={partnersInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}\n              transition={{ duration: 0.8 }}\n              className=\"text-3xl font-bold text-primary flex items-center gap-3\"\n              data-testid=\"text-partners-title\"\n            >\n              <lord-icon\n                src=\"https://cdn.lordicon.com/rcuovkuy.json\"\n                trigger=\"loop\"\n                delay=\"1500\"\n                colors=\"primary:#545454,secondary:#18ac61\"\n                style={{ width: '60px', height: '60px' }}\n              />\n              {t('aboutPage.partners.title')}\n            </motion.h2>\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              animate={partnersInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}\n              transition={{ duration: 0.8, delay: 0.2 }}\n            >\n              {partners.length === 0 ? (\n                <Card data-testid=\"card-partners-placeholder\">\n                  <CardContent className=\"py-12 text-center\">\n                    <p className=\"text-muted-foreground text-lg\">{t('aboutPage.partners.noInfo')}</p>\n                  </CardContent>\n                </Card>\n              ) : (\n                <div className=\"overflow-hidden\" data-testid=\"partners-grid\">\n                  <motion.div\n                    className=\"flex gap-8\"\n                    animate={{\n                      x: [-280 * partners.length, 0],\n                    }}\n                    transition={{\n                      x: {\n                        repeat: Infinity,\n                        repeatType: \"loop\",\n                        duration: partners.length * 5,\n                        ease: \"linear\",\n                      },\n                    }}\n                  >\n                    {[...partners, ...partners, ...partners].map((partner, index) => (\n                      <div\n                        key={`${partner.id}-${index}`}\n                        className=\"flex-shrink-0 w-64\"\n                        data-testid={`partner-${partner.id}-${index}`}\n                      >\n                        <Card className=\"hover-elevate\">\n                          <CardContent className=\"p-6 flex items-center justify-center h-48\">\n                            {partner.logoUrl ? (\n                              <img\n                                src={partner.logoUrl}\n                                alt={partner.name}\n                                className=\"max-w-full max-h-full object-contain\"\n                                data-testid={`img-partner-${partner.id}-${index}`}\n                              />\n                            ) : (\n                              <Upload className=\"w-12 h-12 text-muted-foreground\" />\n                            )}\n                          </CardContent>\n                        </Card>\n                      </div>\n                    ))}\n                  </motion.div>\n                </div>\n              )}\n            </motion.div>\n          </motion.section>\n\n          <motion.section ref={careersRef} variants={itemVariants} className=\"space-y-8\">\n            <div className=\"grid md:grid-cols-2 gap-12 items-center\">\n              <motion.div\n                initial={{ opacity: 0, x: 50 }}\n                animate={careersInView ? { opacity: 1, x: 0 } : { opacity: 0, x: 50 }}\n                transition={{ duration: 0.8 }}\n                className=\"md:order-2\"\n              >\n                <motion.img\n                  whileHover={{ scale: 1.02 }}\n                  transition={{ duration: 0.3 }}\n                  src={equipmentImage}\n                  alt=\"Modern veterinary equipment\"\n                  className=\"rounded-xl w-full h-auto object-cover shadow-md\"\n                  data-testid=\"img-careers\"\n                />\n              </motion.div>\n              <motion.div\n                initial={{ opacity: 0, x: -50 }}\n                animate={careersInView ? { opacity: 1, x: 0 } : { opacity: 0, x: -50 }}\n                transition={{ duration: 0.8, delay: 0.2 }}\n                className=\"md:order-1 space-y-4\"\n              >\n                <h2 className=\"text-3xl font-bold text-primary flex items-center gap-3\" data-testid=\"text-careers-title\">\n                  <lord-icon\n                    src=\"https://cdn.lordicon.com/dpdqbwcf.json\"\n                    trigger=\"loop\"\n                    delay=\"1500\"\n                    colors=\"primary:#545454,secondary:#18ac61\"\n                    style={{ width: '60px', height: '60px' }}\n                  />\n                  {t('aboutPage.careers.title')}\n                </h2>\n                <p className=\"text-lg text-foreground/90\" data-testid=\"text-careers-description\">\n                  {t('aboutPage.careers.description')}\n                </p>\n              </motion.div>\n            </div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              animate={careersInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}\n              transition={{ duration: 0.8, delay: 0.4 }}\n            >\n              <Card data-testid=\"card-careers-form\">\n                <CardContent className=\"pt-6\">\n                <form onSubmit={handleSubmit} className=\"space-y-8\">\n                  <div className=\"space-y-6\">\n                    <h3 className=\"text-xl font-semibold text-primary\" data-testid=\"text-personal-info\">\n                      {t('aboutPage.careers.personalInfo')}\n                    </h3>\n                    <div className=\"grid md:grid-cols-2 gap-6\">\n                      <div className=\"space-y-2\">\n                        <Label htmlFor=\"fullName\">{t('aboutPage.careers.fullName')}</Label>\n                        <Input\n                          id=\"fullName\"\n                          name=\"fullName\"\n                          required\n                          data-testid=\"input-full-name\"\n                        />\n                      </div>\n                      <div className=\"space-y-2\">\n                        <Label htmlFor=\"email\">{t('aboutPage.careers.email')}</Label>\n                        <Input\n                          id=\"email\"\n                          name=\"email\"\n                          type=\"email\"\n                          required\n                          data-testid=\"input-email\"\n                        />\n                      </div>\n                      <div className=\"space-y-2\">\n                        <Label htmlFor=\"phone\">{t('aboutPage.careers.phone')}</Label>\n                        <Input\n                          id=\"phone\"\n                          name=\"phone\"\n                          type=\"tel\"\n                          required\n                          data-testid=\"input-phone\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"space-y-6\">\n                    <h3 className=\"text-xl font-semibold text-primary\" data-testid=\"text-professional-info\">\n                      {t('aboutPage.careers.professionalInfo')}\n                    </h3>\n                    <div className=\"grid md:grid-cols-2 gap-6\">\n                      <div className=\"space-y-2\">\n                        <Label htmlFor=\"resume\">{t('aboutPage.careers.resume')}</Label>\n                        <div className=\"flex items-center gap-2\">\n                          <Input\n                            id=\"resume\"\n                            name=\"resume\"\n                            type=\"file\"\n                            accept=\".pdf,.doc,.docx\"\n                            required\n                            data-testid=\"input-resume\"\n                            className=\"flex-1\"\n                          />\n                          <Upload className=\"w-5 h-5 text-muted-foreground\" />\n                        </div>\n                      </div>\n                      <div className=\"space-y-2\">\n                        <Label htmlFor=\"position\">{t('aboutPage.careers.position')}</Label>\n                        <Input\n                          id=\"position\"\n                          name=\"position\"\n                          data-testid=\"input-position\"\n                        />\n                      </div>\n                      <div className=\"space-y-2\">\n                        <Label htmlFor=\"startDate\">{t('aboutPage.careers.startDate')}</Label>\n                        <Input\n                          id=\"startDate\"\n                          name=\"startDate\"\n                          type=\"date\"\n                          required\n                          data-testid=\"input-start-date\"\n                        />\n                      </div>\n                      <div className=\"space-y-2\">\n                        <Label htmlFor=\"certifications\">{t('aboutPage.careers.certifications')}</Label>\n                        <Input\n                          id=\"certifications\"\n                          name=\"certifications\"\n                          data-testid=\"input-certifications\"\n                        />\n                      </div>\n                      <div className=\"space-y-2 md:col-span-2\">\n                        <Label htmlFor=\"education\">{t('aboutPage.careers.education')}</Label>\n                        <Input\n                          id=\"education\"\n                          name=\"education\"\n                          required\n                          data-testid=\"input-education\"\n                        />\n                      </div>\n                      <div className=\"space-y-2 md:col-span-2\">\n                        <Label htmlFor=\"experience\">{t('aboutPage.careers.experience')}</Label>\n                        <Textarea\n                          id=\"experience\"\n                          name=\"experience\"\n                          placeholder={t('aboutPage.careers.experiencePlaceholder')}\n                          required\n                          data-testid=\"input-experience\"\n                          rows={4}\n                        />\n                      </div>\n                      <div className=\"space-y-2 md:col-span-2\">\n                        <Label htmlFor=\"interests\">{t('aboutPage.careers.interests')}</Label>\n                        <Textarea\n                          id=\"interests\"\n                          name=\"interests\"\n                          placeholder={t('aboutPage.careers.interestsPlaceholder')}\n                          data-testid=\"input-interests\"\n                          rows={3}\n                        />\n                      </div>\n                      <div className=\"space-y-2 md:col-span-2\">\n                        <Label htmlFor=\"coverLetter\">{t('aboutPage.careers.coverLetter')}</Label>\n                        <Textarea\n                          id=\"coverLetter\"\n                          name=\"coverLetter\"\n                          data-testid=\"input-cover-letter\"\n                          rows={5}\n                        />\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"flex justify-center\">\n                    <Button\n                      type=\"submit\"\n                      size=\"lg\"\n                      disabled={isSubmitting}\n                      data-testid=\"button-submit-application\"\n                      className=\"min-w-[200px]\"\n                    >\n                      {isSubmitting ? '...' : t('aboutPage.careers.submit')}\n                    </Button>\n                  </div>\n                </form>\n                </CardContent>\n              </Card>\n            </motion.div>\n          </motion.section>\n        </motion.div>\n      </main>\n\n      <HeartbeatDivider />\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":30145},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n          await import(\"@replit/vite-plugin-dev-banner\").then((m) =>\n            m.devBanner(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":1080},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\nimport { insertServicePackageSchema, insertCustomerReviewSchema, insertPartnerSchema, insertOpeningDiscountSchema } from \"@shared/schema\";\nimport { z } from \"zod\";\nimport { ObjectStorageService, ObjectNotFoundError } from \"./objectStorage\";\nimport { sendDiscountConfirmationEmail } from \"./email-service\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Service Packages Routes\n  \n  // Get all service packages\n  app.get(\"/api/service-packages\", async (req, res) => {\n    try {\n      const packages = await storage.getAllServicePackages();\n      res.json(packages);\n    } catch (error) {\n      console.error(\"Error fetching service packages:\", error);\n      res.status(500).json({ error: \"Failed to fetch service packages\", details: error instanceof Error ? error.message : String(error) });\n    }\n  });\n\n  // Get single service package\n  app.get(\"/api/service-packages/:id\", async (req, res) => {\n    try {\n      const id = parseInt(req.params.id);\n      const pkg = await storage.getServicePackage(id);\n      if (!pkg) {\n        return res.status(404).json({ error: \"Service package not found\" });\n      }\n      res.json(pkg);\n    } catch (error) {\n      res.status(500).json({ error: \"Failed to fetch service package\" });\n    }\n  });\n\n  // Create service package\n  app.post(\"/api/service-packages\", async (req, res) => {\n    try {\n      const data = insertServicePackageSchema.parse(req.body);\n      const pkg = await storage.createServicePackage(data);\n      res.status(201).json(pkg);\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ error: \"Invalid data\", details: error.errors });\n      }\n      console.error(\"Error creating service package:\", error);\n      res.status(500).json({ error: \"Failed to create service package\", details: error instanceof Error ? error.message : String(error) });\n    }\n  });\n\n  // Update service package\n  app.put(\"/api/service-packages/:id\", async (req, res) => {\n    try {\n      const id = parseInt(req.params.id);\n      const data = insertServicePackageSchema.partial().parse(req.body);\n      const pkg = await storage.updateServicePackage(id, data);\n      if (!pkg) {\n        return res.status(404).json({ error: \"Service package not found\" });\n      }\n      res.json(pkg);\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ error: \"Invalid data\", details: error.errors });\n      }\n      res.status(500).json({ error: \"Failed to update service package\" });\n    }\n  });\n\n  // Delete service package\n  app.delete(\"/api/service-packages/:id\", async (req, res) => {\n    try {\n      const id = parseInt(req.params.id);\n      const success = await storage.deleteServicePackage(id);\n      if (!success) {\n        return res.status(404).json({ error: \"Service package not found\" });\n      }\n      res.status(204).send();\n    } catch (error) {\n      res.status(500).json({ error: \"Failed to delete service package\" });\n    }\n  });\n\n  // Customer Reviews Routes\n\n  // Get all customer reviews\n  app.get(\"/api/customer-reviews\", async (req, res) => {\n    try {\n      const reviews = await storage.getAllCustomerReviews();\n      res.json(reviews);\n    } catch (error) {\n      console.error(\"Error fetching customer reviews:\", error);\n      res.status(500).json({ error: \"Failed to fetch customer reviews\", details: error instanceof Error ? error.message : String(error) });\n    }\n  });\n\n  // Get single customer review\n  app.get(\"/api/customer-reviews/:id\", async (req, res) => {\n    try {\n      const id = parseInt(req.params.id);\n      const review = await storage.getCustomerReview(id);\n      if (!review) {\n        return res.status(404).json({ error: \"Customer review not found\" });\n      }\n      res.json(review);\n    } catch (error) {\n      res.status(500).json({ error: \"Failed to fetch customer review\" });\n    }\n  });\n\n  // Create customer review\n  app.post(\"/api/customer-reviews\", async (req, res) => {\n    try {\n      const data = insertCustomerReviewSchema.parse(req.body);\n      const review = await storage.createCustomerReview(data);\n      res.status(201).json(review);\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ error: \"Invalid data\", details: error.errors });\n      }\n      console.error(\"Error creating customer review:\", error);\n      res.status(500).json({ error: \"Failed to create customer review\", details: error instanceof Error ? error.message : String(error) });\n    }\n  });\n\n  // Update customer review\n  app.put(\"/api/customer-reviews/:id\", async (req, res) => {\n    try {\n      const id = parseInt(req.params.id);\n      const data = insertCustomerReviewSchema.partial().parse(req.body);\n      const review = await storage.updateCustomerReview(id, data);\n      if (!review) {\n        return res.status(404).json({ error: \"Customer review not found\" });\n      }\n      res.json(review);\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ error: \"Invalid data\", details: error.errors });\n      }\n      res.status(500).json({ error: \"Failed to update customer review\" });\n    }\n  });\n\n  // Delete customer review\n  app.delete(\"/api/customer-reviews/:id\", async (req, res) => {\n    try {\n      const id = parseInt(req.params.id);\n      const success = await storage.deleteCustomerReview(id);\n      if (!success) {\n        return res.status(404).json({ error: \"Customer review not found\" });\n      }\n      res.status(204).send();\n    } catch (error) {\n      res.status(500).json({ error: \"Failed to delete customer review\" });\n    }\n  });\n\n  // Partners Routes\n\n  // Get all partners\n  app.get(\"/api/partners\", async (req, res) => {\n    try {\n      const partners = await storage.getAllPartners();\n      res.json(partners);\n    } catch (error) {\n      console.error(\"Error fetching partners:\", error);\n      res.status(500).json({ error: \"Failed to fetch partners\", details: error instanceof Error ? error.message : String(error) });\n    }\n  });\n\n  // Get single partner\n  app.get(\"/api/partners/:id\", async (req, res) => {\n    try {\n      const id = parseInt(req.params.id);\n      const partner = await storage.getPartner(id);\n      if (!partner) {\n        return res.status(404).json({ error: \"Partner not found\" });\n      }\n      res.json(partner);\n    } catch (error) {\n      res.status(500).json({ error: \"Failed to fetch partner\" });\n    }\n  });\n\n  // Create partner\n  app.post(\"/api/partners\", async (req, res) => {\n    try {\n      const data = insertPartnerSchema.parse(req.body);\n      const partner = await storage.createPartner(data);\n      res.status(201).json(partner);\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ error: \"Invalid data\", details: error.errors });\n      }\n      console.error(\"Error creating partner:\", error);\n      res.status(500).json({ error: \"Failed to create partner\", details: error instanceof Error ? error.message : String(error) });\n    }\n  });\n\n  // Update partner\n  app.put(\"/api/partners/:id\", async (req, res) => {\n    try {\n      const id = parseInt(req.params.id);\n      const data = insertPartnerSchema.partial().parse(req.body);\n      const partner = await storage.updatePartner(id, data);\n      if (!partner) {\n        return res.status(404).json({ error: \"Partner not found\" });\n      }\n      res.json(partner);\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ error: \"Invalid data\", details: error.errors });\n      }\n      res.status(500).json({ error: \"Failed to update partner\" });\n    }\n  });\n\n  // Delete partner\n  app.delete(\"/api/partners/:id\", async (req, res) => {\n    try {\n      const id = parseInt(req.params.id);\n      const success = await storage.deletePartner(id);\n      if (!success) {\n        return res.status(404).json({ error: \"Partner not found\" });\n      }\n      res.status(204).send();\n    } catch (error) {\n      res.status(500).json({ error: \"Failed to delete partner\" });\n    }\n  });\n\n  // Object Storage Routes for Partner Logos\n\n  // Serve public objects\n  app.get(\"/public-objects/:filePath(*)\", async (req, res) => {\n    const filePath = req.params.filePath;\n    const objectStorageService = new ObjectStorageService();\n    try {\n      const file = await objectStorageService.searchPublicObject(filePath);\n      if (!file) {\n        return res.status(404).json({ error: \"File not found\" });\n      }\n      objectStorageService.downloadObject(file, res);\n    } catch (error) {\n      console.error(\"Error searching for public object:\", error);\n      return res.status(500).json({ error: \"Internal server error\" });\n    }\n  });\n\n  // Serve private objects (partner logos)\n  app.get(\"/objects/:objectPath(*)\", async (req, res) => {\n    const objectStorageService = new ObjectStorageService();\n    try {\n      const objectFile = await objectStorageService.getObjectEntityFile(\n        req.path,\n      );\n      objectStorageService.downloadObject(objectFile, res);\n    } catch (error) {\n      console.error(\"Error checking object access:\", error);\n      if (error instanceof ObjectNotFoundError) {\n        return res.sendStatus(404);\n      }\n      return res.sendStatus(500);\n    }\n  });\n\n  // Get upload URL for partner logo\n  app.post(\"/api/objects/upload\", async (req, res) => {\n    const objectStorageService = new ObjectStorageService();\n    const uploadURL = await objectStorageService.getObjectEntityUploadURL();\n    res.json({ uploadURL });\n  });\n\n  // Update partner with logo URL\n  app.put(\"/api/partners/:id/logo\", async (req, res) => {\n    if (!req.body.logoURL) {\n      return res.status(400).json({ error: \"logoURL is required\" });\n    }\n\n    try {\n      const id = parseInt(req.params.id);\n      const objectStorageService = new ObjectStorageService();\n      const objectPath = await objectStorageService.trySetObjectEntityAclPolicy(\n        req.body.logoURL,\n        {\n          owner: \"admin\",\n          visibility: \"public\",\n        },\n      );\n\n      const partner = await storage.updatePartner(id, { logoUrl: objectPath });\n      if (!partner) {\n        return res.status(404).json({ error: \"Partner not found\" });\n      }\n\n      res.status(200).json({\n        objectPath: objectPath,\n        partner,\n      });\n    } catch (error) {\n      console.error(\"Error setting partner logo:\", error);\n      res.status(500).json({ error: \"Internal server error\" });\n    }\n  });\n\n  // Opening Discount Routes\n\n  // Check if phone number exists\n  app.get(\"/api/opening-discount/check-phone/:phoneNumber\", async (req, res) => {\n    try {\n      const phoneNumber = req.params.phoneNumber;\n      const exists = await storage.checkPhoneNumberExists(phoneNumber);\n      res.status(200).json({ exists });\n    } catch (error) {\n      console.error(\"Error checking phone number:\", error);\n      res.status(500).json({ error: \"Failed to check phone number\" });\n    }\n  });\n\n  // Check if email exists\n  app.get(\"/api/opening-discount/check-email/:email\", async (req, res) => {\n    try {\n      const email = req.params.email;\n      const exists = await storage.checkEmailExists(email);\n      res.status(200).json({ exists });\n    } catch (error) {\n      console.error(\"Error checking email:\", error);\n      res.status(500).json({ error: \"Failed to check email\" });\n    }\n  });\n\n  // Create opening discount registration\n  app.post(\"/api/opening-discount\", async (req, res) => {\n    try {\n      const data = insertOpeningDiscountSchema.parse(req.body);\n      const registration = await storage.createOpeningDiscount(data);\n      \n      // Send confirmation email\n      try {\n        await sendDiscountConfirmationEmail({\n          firstName: data.firstName,\n          lastName: data.lastName,\n          email: data.emailAddress,\n          discountCode: data.phoneNumber,\n          language: req.body.language || 'en',\n        });\n      } catch (emailError) {\n        console.error(\"Error sending confirmation email:\", emailError);\n        // Don't fail the registration if email fails\n      }\n      \n      res.status(201).json(registration);\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ error: \"Invalid data\", details: error.errors });\n      }\n      console.error(\"Error creating opening discount registration:\", error);\n      \n      // Check for unique constraint violation\n      if (error && typeof error === 'object' && 'code' in error && error.code === '23505') {\n        return res.status(409).json({ error: \"Phone number already registered\" });\n      }\n      \n      res.status(500).json({ error: \"Failed to register\", details: error instanceof Error ? error.message : String(error) });\n    }\n  });\n\n  const httpServer = createServer(app);\n\n  return httpServer;\n}\n","size_bytes":12920},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/components/AnimatedServicesBackground.tsx":{"content":"import { useMemo } from 'react';\nimport { motion } from 'framer-motion';\n\nconst PawPrint = ({ color, size, top, left, duration, delay }: {\n  color: string;\n  size: number;\n  top: string;\n  left: string;\n  duration: number;\n  delay: number;\n}) => {\n  return (\n    <motion.div\n      className=\"absolute\"\n      style={{\n        top,\n        left,\n        width: `${size}px`,\n        height: `${size}px`,\n        opacity: 0.08,\n      }}\n      animate={{\n        y: [0, -30, 0],\n        x: [0, 15, -15, 0],\n        rotate: [0, 10, -10, 0],\n      }}\n      transition={{\n        duration,\n        delay,\n        repeat: Infinity,\n        ease: \"easeInOut\",\n      }}\n    >\n      <svg\n        viewBox=\"0 0 100 100\"\n        fill={color}\n        width=\"100%\"\n        height=\"100%\"\n      >\n        {/* Main pad with curved bottom - matching the image */}\n        <path d=\"M 30 65 Q 30 45, 50 45 Q 70 45, 70 65 Q 72 80, 60 85 Q 50 90, 40 85 Q 28 80, 30 65 Z\" />\n        \n        {/* Four toe pads - ovals arranged around the main pad */}\n        {/* Top center toe */}\n        <ellipse cx=\"50\" cy=\"20\" rx=\"8\" ry=\"12\" />\n        {/* Left toe */}\n        <ellipse cx=\"28\" cy=\"32\" rx=\"7\" ry=\"11\" transform=\"rotate(-25 28 32)\" />\n        {/* Right toe */}\n        <ellipse cx=\"72\" cy=\"32\" rx=\"7\" ry=\"11\" transform=\"rotate(25 72 32)\" />\n        {/* Bottom left toe */}\n        <ellipse cx=\"18\" cy=\"50\" rx=\"6\" ry=\"10\" transform=\"rotate(-35 18 50)\" />\n        {/* Bottom right toe */}\n        <ellipse cx=\"82\" cy=\"50\" rx=\"6\" ry=\"10\" transform=\"rotate(35 82 50)\" />\n      </svg>\n    </motion.div>\n  );\n};\n\nconst Bone = ({ color, size, top, left, duration, delay }: {\n  color: string;\n  size: number;\n  top: string;\n  left: string;\n  duration: number;\n  delay: number;\n}) => {\n  return (\n    <motion.div\n      className=\"absolute\"\n      style={{\n        top,\n        left,\n        width: `${size}px`,\n        height: `${size}px`,\n        opacity: 0.08,\n      }}\n      animate={{\n        y: [0, 30, 0],\n        x: [0, -15, 15, 0],\n        rotate: [0, -10, 10, 0],\n      }}\n      transition={{\n        duration,\n        delay,\n        repeat: Infinity,\n        ease: \"easeInOut\",\n      }}\n    >\n      <svg\n        viewBox=\"0 0 100 50\"\n        fill={color}\n        width=\"100%\"\n        height=\"100%\"\n      >\n        {/* Left bone end - two circles */}\n        <circle cx=\"12\" cy=\"18\" r=\"8\" />\n        <circle cx=\"12\" cy=\"32\" r=\"8\" />\n        {/* Right bone end - two circles */}\n        <circle cx=\"88\" cy=\"18\" r=\"8\" />\n        <circle cx=\"88\" cy=\"32\" r=\"8\" />\n        {/* Center connecting bar */}\n        <rect x=\"16\" y=\"20\" width=\"68\" height=\"10\" rx=\"5\" ry=\"5\" />\n      </svg>\n    </motion.div>\n  );\n};\n\nexport default function AnimatedServicesBackground() {\n  const brandColors = [\n    '#18ac61',\n    '#264653',\n    '#e9c46a',\n    '#f4a261',\n  ];\n\n  const elements = useMemo(() => {\n    const items = [];\n    \n    // Create 12 paw prints\n    for (let i = 0; i < 12; i++) {\n      items.push({\n        id: `paw-${i}`,\n        type: 'paw',\n        color: brandColors[Math.floor(Math.random() * brandColors.length)],\n        size: Math.random() * 40 + 60,\n        top: `${Math.random() * 100}%`,\n        left: `${Math.random() * 100}%`,\n        duration: Math.random() * 10 + 15,\n        delay: Math.random() * 5,\n      });\n    }\n    \n    // Create 6 bones\n    for (let i = 0; i < 6; i++) {\n      items.push({\n        id: `bone-${i}`,\n        type: 'bone',\n        color: brandColors[Math.floor(Math.random() * brandColors.length)],\n        size: Math.random() * 40 + 60,\n        top: `${Math.random() * 100}%`,\n        left: `${Math.random() * 100}%`,\n        duration: Math.random() * 10 + 15,\n        delay: Math.random() * 5,\n      });\n    }\n    \n    return items;\n  }, []);\n\n  return (\n    <div className=\"fixed inset-0 pointer-events-none overflow-hidden z-0\">\n      {elements.map((element) => (\n        element.type === 'paw' ? (\n          <PawPrint\n            key={element.id}\n            color={element.color}\n            size={element.size}\n            top={element.top}\n            left={element.left}\n            duration={element.duration}\n            delay={element.delay}\n          />\n        ) : (\n          <Bone\n            key={element.id}\n            color={element.color}\n            size={element.size}\n            top={element.top}\n            left={element.left}\n            duration={element.duration}\n            delay={element.delay}\n          />\n        )\n      ))}\n    </div>\n  );\n}\n","size_bytes":4488},"client/src/components/examples/ContactSection.tsx":{"content":"import ContactSection from '../ContactSection';\n\nexport default function ContactSectionExample() {\n  return <ContactSection />;\n}\n","size_bytes":130},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar, boolean, serial, integer } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  username: text(\"username\").notNull().unique(),\n  password: text(\"password\").notNull(),\n});\n\nexport const insertUserSchema = createInsertSchema(users).pick({\n  username: true,\n  password: true,\n});\n\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type User = typeof users.$inferSelect;\n\nexport const servicePackages = pgTable(\"service_packages\", {\n  id: serial(\"id\").primaryKey(),\n  name: text(\"name\").notNull(),\n  nameAr: text(\"name_ar\"),\n  price: text(\"price\").notNull(),\n  period: text(\"period\").notNull(),\n  periodAr: text(\"period_ar\"),\n  popular: boolean(\"popular\").notNull().default(false),\n  features: text(\"features\").array().notNull(),\n  featuresAr: text(\"features_ar\").array(),\n});\n\nexport const insertServicePackageSchema = createInsertSchema(servicePackages).omit({\n  id: true,\n});\n\nexport type InsertServicePackage = z.infer<typeof insertServicePackageSchema>;\nexport type ServicePackage = typeof servicePackages.$inferSelect;\n\nexport const customerReviews = pgTable(\"customer_reviews\", {\n  id: serial(\"id\").primaryKey(),\n  name: text(\"name\").notNull(),\n  nameAr: text(\"name_ar\"),\n  rating: integer(\"rating\").notNull(),\n  message: text(\"message\").notNull(),\n});\n\nexport const insertCustomerReviewSchema = createInsertSchema(customerReviews).omit({\n  id: true,\n}).extend({\n  rating: z.number().min(1).max(5),\n});\n\nexport type InsertCustomerReview = z.infer<typeof insertCustomerReviewSchema>;\nexport type CustomerReview = typeof customerReviews.$inferSelect;\n\nexport const partners = pgTable(\"partners\", {\n  id: serial(\"id\").primaryKey(),\n  name: text(\"name\").notNull(),\n  nameAr: text(\"name_ar\"),\n  logoUrl: text(\"logo_url\"),\n});\n\nexport const insertPartnerSchema = createInsertSchema(partners).omit({\n  id: true,\n}).extend({\n  logoUrl: z.string().optional(),\n});\n\nexport type InsertPartner = z.infer<typeof insertPartnerSchema>;\nexport type Partner = typeof partners.$inferSelect;\n\nexport const openingDiscount = pgTable(\"opening_discount\", {\n  id: serial(\"id\").primaryKey(),\n  firstName: varchar(\"first_name\", { length: 50 }).notNull(),\n  lastName: varchar(\"last_name\", { length: 50 }).notNull(),\n  phoneNumber: varchar(\"phone_number\", { length: 15 }).notNull().unique(),\n  emailAddress: varchar(\"email_address\", { length: 50 }).notNull().unique(),\n});\n\nexport const insertOpeningDiscountSchema = createInsertSchema(openingDiscount).omit({\n  id: true,\n}).extend({\n  firstName: z.string().max(20, \"First name must be 20 characters or less\"),\n  lastName: z.string().max(20, \"Last name must be 20 characters or less\"),\n  phoneNumber: z.string().max(10, \"Phone number must be 10 digits or less\").regex(/^[0-9]+$/, \"Phone number must contain only digits\"),\n  emailAddress: z.string().email(\"Invalid email address\").max(50, \"Email must be 50 characters or less\"),\n});\n\nexport type InsertOpeningDiscount = z.infer<typeof insertOpeningDiscountSchema>;\nexport type OpeningDiscount = typeof openingDiscount.$inferSelect;\n","size_bytes":3250},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/pages/Blog.tsx":{"content":"import { motion, useInView } from 'framer-motion';\nimport { useLanguage } from '@/contexts/LanguageContext';\nimport { Button } from '@/components/ui/button';\nimport { useRef, useEffect } from 'react';\nimport Header from '@/components/Header';\nimport ECGAnimation from '@/components/ECGAnimation';\nimport Footer from '@/components/Footer';\nimport { Calendar, User, Dog, Cat, Bird, Syringe, UtensilsCrossed, type LucideIcon } from 'lucide-react';\nimport { Link } from 'wouter';\nimport dogImage from '@assets/Summer Care Tips for Dogs_1759926617301.png';\nimport catImage from '@assets/Why Regular Check-ups Matter for Cats_1759926617300.png';\nimport birdImage from '@assets/Caring for Your Pet Birds at Home_1759926617299.png';\nimport vaccineImage from '@assets/Importance of Vaccinations for Pets (2)_1759928686852.png';\nimport nutritionImage from '@assets/stock_images/dog_cat_eating_natur_d19edd3f.jpg';\nimport blogHeroImage from '@assets/Dr Paws Blog_1759927269597.png';\nimport HeartbeatDivider from '@/components/HeartbeatDivider';\n\ninterface BlogPost {\n  id: number;\n  titleEn: string;\n  titleAr: string;\n  contentEn: string;\n  contentAr: string;\n  icon: LucideIcon;\n  image: string;\n  date: string;\n  author: string;\n  category: string;\n  categoryAr: string;\n}\n\nexport default function Blog() {\n  const { language } = useLanguage();\n\n  const heroRef = useRef(null);\n  const postsRef = useRef(null);\n\n  const heroInView = useInView(heroRef, { once: false, amount: 0.3 });\n  const postsInView = useInView(postsRef, { once: false, amount: 0.1 });\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  const blogPosts: BlogPost[] = [\n    {\n      id: 1,\n      titleEn: \"Summer Care Tips for Dogs\",\n      titleAr: \"نصائح العناية الصيفية للكلاب\",\n      contentEn: \"Hot Saudi summers can be tough for dogs! Make sure your furry friend stays cool by keeping them hydrated, walking during early mornings, and avoiding hot pavements. Regular grooming helps reduce body heat and keeps them comfortable. Visit Dr. Paws for a summer health check and professional grooming.\",\n      contentAr: \"الصيف في السعودية قد يكون صعبًا على الكلاب! احرص على بقاء كلبك رطبًا، ونزهه في الصباح الباكر وتجنب الطرق الساخنة. العناية الدورية بالشعر تساعد على تقليل حرارة الجسم وجعل كلبك مرتاحًا. قم بزيارة عيادات د. باوز لفحص صيفي شامل وخدمة تجميل احترافية.\",\n      icon: Dog,\n      image: dogImage,\n      date: \"2025-01-15\",\n      author: \"Dr. Paws Team\",\n      category: \"Pet Care\",\n      categoryAr: \"رعاية الحيوانات\"\n    },\n    {\n      id: 2,\n      titleEn: \"Why Regular Check-ups Matter for Cats\",\n      titleAr: \"أهمية الفحوصات الدورية للقطط\",\n      contentEn: \"Cats often hide signs of illness. Regular veterinary check-ups can detect problems early, keeping your cat healthy and happy. Dr. Paws offers gentle, stress-free examinations to ensure your feline friend's well-being.\",\n      contentAr: \"القطط غالبًا ما تُخفي علامات المرض، لذلك الفحص البيطري الدوري يساعد في اكتشاف أي مشكلة مبكرًا لضمان صحتها وسعادتها. في عيادات د. باوز، نقدم فحوصات لطيفة وخالية من التوتر لحيوانك الأليف.\",\n      icon: Cat,\n      image: catImage,\n      date: \"2025-01-10\",\n      author: \"Dr. Paws Team\",\n      category: \"Health\",\n      categoryAr: \"الصحة\"\n    },\n    {\n      id: 3,\n      titleEn: \"Caring for Your Pet Birds at Home\",\n      titleAr: \"رعاية طيورك الأليفة في المنزل\",\n      contentEn: \"Birds need special care — clean cages, fresh food, and daily interaction. Watch for changes in feathers or appetite, as they can indicate illness. Dr. Paws provides expert avian care and health consultations for all bird species.\",\n      contentAr: \"الطيور تحتاج إلى عناية خاصة — نظّف القفص بانتظام، وقدّم طعامًا طازجًا وتفاعل معها يوميًا. راقب أي تغيّر في الريش أو الشهية لأنها قد تدل على مرض. يقدم د. باوز رعاية متخصصة واستشارات صحية لجميع أنواع الطيور.\",\n      icon: Bird,\n      image: birdImage,\n      date: \"2025-01-05\",\n      author: \"Dr. Paws Team\",\n      category: \"Pet Care\",\n      categoryAr: \"رعاية الحيوانات\"\n    },\n    {\n      id: 4,\n      titleEn: \"Importance of Vaccinations for Pets\",\n      titleAr: \"أهمية التطعيمات للحيوانات الأليفة\",\n      contentEn: \"Vaccines protect your pet from dangerous diseases like rabies and parvovirus. Keeping vaccinations up to date ensures long-term safety. Schedule your pet's vaccination today at Dr. Paws and keep them protected year-round.\",\n      contentAr: \"اللقاحات تحمي حيوانك الأليف من الأمراض الخطيرة مثل السعار والبارفو. الالتزام بجدول التطعيمات يحافظ على صحته على المدى الطويل. احجز موعد التطعيم اليوم في عيادات د. باوز لضمان حمايته طوال العام.\",\n      icon: Syringe,\n      image: vaccineImage,\n      date: \"2024-12-28\",\n      author: \"Dr. Paws Team\",\n      category: \"Health\",\n      categoryAr: \"الصحة\"\n    },\n    {\n      id: 5,\n      titleEn: \"Healthy Nutrition Tips for Cats, Dogs & Birds\",\n      titleAr: \"نصائح التغذية الصحية للقطط والكلاب والطيور\",\n      contentEn: \"A balanced diet supports immunity, energy, and mood. Choose vet-approved food suitable for your pet's species, age, and activity level. Dr. Paws nutrition experts can guide you to the perfect feeding plan.\",\n      contentAr: \"النظام الغذائي المتوازن يعزز المناعة والطاقة والمزاج العام. اختر طعامًا معتمدًا من الطبيب البيطري ومناسبًا لنوع الحيوان وعمره ونشاطه. يمكن لخبراء التغذية في د. باوز مساعدتك في إعداد النظام الغذائي المثالي.\",\n      icon: UtensilsCrossed,\n      image: nutritionImage,\n      date: \"2024-12-20\",\n      author: \"Dr. Paws Team\",\n      category: \"Nutrition\",\n      categoryAr: \"التغذية\"\n    }\n  ];\n\n  const BlogPost = ({ post, index }: { post: BlogPost; index: number }) => {\n    const title = language === 'ar' ? post.titleAr : post.titleEn;\n    const content = language === 'ar' ? post.contentAr : post.contentEn;\n    const category = language === 'ar' ? post.categoryAr : post.category;\n    const Icon = post.icon;\n    const isEven = index % 2 === 0;\n    const imageOnLeft = language === 'ar' ? !isEven : isEven;\n\n    return (\n      <motion.article\n        initial={{ opacity: 0, y: 30 }}\n        animate={postsInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 30 }}\n        transition={{ duration: 0.6, delay: index * 0.15, ease: 'easeOut' }}\n        className=\"mb-24 last:mb-0\"\n        dir={language === 'ar' ? 'rtl' : 'ltr'}\n      >\n        <div className={`flex flex-col ${imageOnLeft ? 'lg:flex-row' : 'lg:flex-row-reverse'} gap-8 lg:gap-12 items-center`}>\n          {/* Image */}\n          <div className=\"w-full lg:w-1/2\">\n            <div className=\"relative overflow-hidden rounded-md group\">\n              <img \n                src={post.image} \n                alt={title}\n                className=\"w-full h-[400px] object-cover transition-transform duration-500 group-hover:scale-105\"\n                data-testid={`img-post-${post.id}`}\n              />\n              <div className=\"absolute inset-0 bg-gradient-to-t from-black/20 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300\" />\n            </div>\n          </div>\n\n          {/* Content */}\n          <div className=\"w-full lg:w-1/2 space-y-6\">\n            {/* Icon and Category */}\n            <div className=\"flex items-center gap-4 flex-wrap\">\n              <div className=\"w-14 h-14 rounded-md bg-[#18ac61]/10 flex items-center justify-center\">\n                <Icon className=\"w-7 h-7 text-[#18ac61]\" data-testid={`icon-${post.id}`} />\n              </div>\n              <span \n                className=\"px-4 py-1.5 rounded-full text-sm font-medium bg-[#18ac61]/10 text-[#18ac61]\"\n                data-testid={`category-${post.id}`}\n              >\n                {category}\n              </span>\n            </div>\n\n            {/* Title */}\n            <h2 \n              className=\"font-display text-3xl md:text-4xl font-bold text-[#264653]\"\n              data-testid={`title-${post.id}`}\n            >\n              {title}\n            </h2>\n\n            {/* Meta */}\n            <div className={`flex items-center gap-6 text-sm text-muted-foreground flex-wrap ${language === 'ar' ? 'flex-row-reverse' : ''}`}>\n              <div className={`flex items-center gap-2 ${language === 'ar' ? 'flex-row-reverse' : ''}`}>\n                <Calendar className=\"w-4 h-4\" />\n                <span data-testid={`date-${post.id}`}>\n                  {new Date(post.date).toLocaleDateString(language === 'ar' ? 'ar-SA' : 'en-US', {\n                    year: 'numeric',\n                    month: 'long',\n                    day: 'numeric'\n                  })}\n                </span>\n              </div>\n              <div className={`flex items-center gap-2 ${language === 'ar' ? 'flex-row-reverse' : ''}`}>\n                <User className=\"w-4 h-4\" />\n                <span data-testid={`author-${post.id}`}>{post.author}</span>\n              </div>\n            </div>\n\n            {/* Content */}\n            <p \n              className=\"text-lg text-foreground/70 leading-relaxed\"\n              data-testid={`content-${post.id}`}\n              style={{ paddingBottom: '30px' }}\n            >\n              {content}\n            </p>\n\n            {/* CTA Button */}\n            <Link href=\"/book-now\">\n              <Button \n                size=\"lg\"\n                className=\"bg-[#18ac61] text-white\"\n                data-testid={`button-book-${post.id}`}\n              >\n                {language === 'ar' ? 'احجز موعد' : 'Book an Appointment'}\n              </Button>\n            </Link>\n          </div>\n        </div>\n\n        {/* Separator Line */}\n        {index < blogPosts.length - 1 && (\n          <div className=\"mt-24 border-t border-border/40\" />\n        )}\n      </motion.article>\n    );\n  };\n\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <Header />\n      <ECGAnimation />\n\n      <main className=\"flex-1 relative z-10\">\n        {/* Hero Section */}\n        <section\n          ref={heroRef}\n          className=\"relative py-32 bg-cover bg-center\"\n          style={{ backgroundImage: `url(${blogHeroImage})` }}\n        >\n          <div className=\"absolute inset-0 bg-gradient-to-r from-black/70 to-black/50\" />\n          <div className=\"max-w-7xl mx-auto px-6 relative z-10\">\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              animate={heroInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 30 }}\n              transition={{ duration: 0.8 }}\n              className=\"text-center\"\n              dir={language === 'ar' ? 'rtl' : 'ltr'}\n            >\n              <h1\n                className=\"font-display text-5xl md:text-6xl font-bold text-white mb-6\"\n                data-testid=\"text-blog-header\"\n              >\n                {language === 'ar' ? 'مدونة د. باوز' : 'Dr. Paws Blog'}\n              </h1>\n              <p\n                className=\"text-xl md:text-2xl text-white/90 max-w-3xl mx-auto\"\n                data-testid=\"text-blog-subheader\"\n              >\n                {language === 'ar' \n                  ? 'نصائح ومعلومات مفيدة لرعاية حيواناتك الأليفة'\n                  : 'Helpful Tips & Information for Your Pet Care'\n                }\n              </p>\n            </motion.div>\n          </div>\n        </section>\n\n        {/* Blog Posts */}\n        <section ref={postsRef} className=\"py-20\">\n          <div className=\"max-w-7xl mx-auto px-6\">\n            {blogPosts.map((post, index) => (\n              <BlogPost key={post.id} post={post} index={index} />\n            ))}\n          </div>\n        </section>\n\n        {/* Heartbeat Divider */}\n        <HeartbeatDivider />\n\n        {/* CTA Section */}\n        <motion.section\n          initial={{ opacity: 0, y: 30 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          viewport={{ once: false, amount: 0.3 }}\n          transition={{ duration: 0.8 }}\n          className=\"py-20 bg-[#264653]\"\n        >\n          <div className=\"max-w-4xl mx-auto px-6 text-center\" dir={language === 'ar' ? 'rtl' : 'ltr'}>\n            <h2 className=\"font-display text-3xl md:text-4xl font-bold text-white mb-6\">\n              {language === 'ar' ? 'هل لديك استفسار؟' : 'Have a Question?'}\n            </h2>\n            <p className=\"text-xl text-white/90 mb-8\">\n              {language === 'ar' \n                ? 'فريقنا البيطري هنا لمساعدتك'\n                : 'Our Veterinary Team is Here to Help'\n              }\n            </p>\n            <Link href=\"/book-now\">\n              <Button \n                size=\"lg\"\n                className=\"bg-[#18ac61] text-white\"\n                data-testid=\"button-contact-cta\"\n              >\n                {language === 'ar' ? 'تواصل معنا' : 'Contact Us'}\n              </Button>\n            </Link>\n          </div>\n        </motion.section>\n      </main>\n\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":13828},"client/src/components/Footer.tsx":{"content":"import { MapPin, Phone, Clock, Mail } from 'lucide-react';\nimport { SiFacebook, SiInstagram, SiX, SiWhatsapp, SiSnapchat } from 'react-icons/si';\nimport { motion } from 'framer-motion';\nimport { useLanguage } from '@/contexts/LanguageContext';\nimport logoSvg from '@assets/dr-paws-logo.svg';\n\nconst container = {\n  hidden: { opacity: 0 },\n  show: {\n    opacity: 1,\n    transition: {\n      staggerChildren: 0.1\n    }\n  }\n};\n\nconst item = {\n  hidden: { opacity: 0, y: 20 },\n  show: { opacity: 1, y: 0 }\n};\n\nexport default function Footer() {\n  const { t } = useLanguage();\n  return (\n    <footer className=\"bg-[hsl(199,37%,24%)] text-white\">\n      <div className=\"max-w-7xl mx-auto px-6 py-16\">\n        <motion.div \n          variants={container}\n          initial=\"hidden\"\n          whileInView=\"show\"\n          viewport={{ once: false, amount: 0.3 }}\n          className=\"grid md:grid-cols-3 gap-12 mb-12\"\n        >\n          <motion.div variants={item}>\n            <img src={logoSvg} alt=\"Dr. Paws\" className=\"h-16 mb-4\" data-testid=\"img-footer-logo\" />\n            <p className=\"text-white/80 text-sm leading-relaxed\">\n              {t('footer.description')}\n            </p>\n          </motion.div>\n\n          <motion.div variants={item}>\n            <h4 className=\"font-semibold text-lg mb-4\">{t('footer.contactInfo')}</h4>\n            <div className=\"space-y-3 text-sm\">\n              <div className=\"flex items-start gap-2\">\n                <Phone className=\"w-4 h-4 mt-0.5 flex-shrink-0\" />\n                <div>\n                  <p>{t('footer.call')}: <a href=\"tel:920003045\" className=\"hover:underline\" data-testid=\"link-phone-general\">{t('footer.generalPhone')}</a></p>\n                  <p className=\"text-white/70\">{t('footer.emergency')}</p>\n                </div>\n              </div>\n              \n              <div className=\"space-y-1\">\n                <a \n                  href={t('footer.sahafahMapUrl')} \n                  target=\"_blank\" \n                  rel=\"noopener noreferrer\"\n                  className=\"flex items-start gap-2 hover-elevate rounded-md p-1 -m-1 transition-colors\"\n                  data-testid=\"link-location-sahafa\"\n                >\n                  <MapPin className=\"w-4 h-4 mt-0.5 flex-shrink-0\" />\n                  <div>\n                    <p className=\"font-medium\">{t('footer.sahafahBranch')}</p>\n                    <p className=\"text-white/70\">{t('footer.sahafahAddress')}</p>\n                  </div>\n                </a>\n                <p className=\"text-white/70 ps-6\">{t('footer.mobile')}: <a href=\"tel:0552030564\" className=\"hover:underline\" data-testid=\"link-phone-sahafa\" dir=\"ltr\">{t('footer.sahafahPhone')}</a></p>\n              </div>\n\n              <div className=\"space-y-1\">\n                <a \n                  href={t('footer.matherMapUrl')} \n                  target=\"_blank\" \n                  rel=\"noopener noreferrer\"\n                  className=\"flex items-start gap-2 hover-elevate rounded-md p-1 -m-1 transition-colors\"\n                  data-testid=\"link-location-mather\"\n                >\n                  <MapPin className=\"w-4 h-4 mt-0.5 flex-shrink-0\" />\n                  <div>\n                    <p className=\"font-medium\">{t('footer.matherBranch')}</p>\n                    <p className=\"text-white/70\">{t('footer.matherAddress')}</p>\n                  </div>\n                </a>\n                <p className=\"text-white/70 ps-6\">{t('footer.mobile')}: <a href=\"tel:0531353667\" className=\"hover:underline\" data-testid=\"link-phone-mather\" dir=\"ltr\">{t('footer.matherPhone')}</a></p>\n              </div>\n            </div>\n          </motion.div>\n\n          <motion.div variants={item}>\n            <h4 className=\"font-semibold text-lg mb-4\">{t('footer.hours')}</h4>\n            <div className=\"space-y-2 text-sm mb-6\">\n              <div className=\"flex items-start gap-2\">\n                <Clock className=\"w-4 h-4 mt-0.5 flex-shrink-0\" />\n                <div>\n                  <p>{t('footer.satThu')}</p>\n                  <p>{t('footer.fri')}</p>\n                </div>\n              </div>\n              \n              <div className=\"flex items-start gap-2\">\n                <Mail className=\"w-4 h-4 mt-0.5 flex-shrink-0\" />\n                <p><a href=\"mailto:info@drpaws-sa.com\" className=\"hover:underline\" data-testid=\"link-email\">{t('footer.email')}</a></p>\n              </div>\n            </div>\n\n            <div className=\"mt-6\">\n              <h4 className=\"font-semibold text-lg mb-4\">{t('footer.follow')}</h4>\n              <div className=\"flex gap-4\">\n                <motion.a\n                  whileHover={{ scale: 1.2, rotate: 5 }}\n                  whileTap={{ scale: 0.9 }}\n                  href=\"https://www.facebook.com/share/19YLB7ZUxH/\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"w-10 h-10 rounded-lg bg-white/10 flex items-center justify-center hover-elevate active-elevate-2\"\n                  data-testid=\"link-facebook\"\n                  aria-label=\"Facebook\"\n                >\n                  <SiFacebook className=\"w-5 h-5\" />\n                </motion.a>\n                <motion.a\n                  whileHover={{ scale: 1.2, rotate: 5 }}\n                  whileTap={{ scale: 0.9 }}\n                  href=\"https://www.instagram.com/drpawssa?igsh=MW4zbTJhNmRrNjRidA==\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"w-10 h-10 rounded-lg bg-white/10 flex items-center justify-center hover-elevate active-elevate-2\"\n                  data-testid=\"link-instagram\"\n                  aria-label=\"Instagram\"\n                >\n                  <SiInstagram className=\"w-5 h-5\" />\n                </motion.a>\n                <motion.a\n                  whileHover={{ scale: 1.2, rotate: 5 }}\n                  whileTap={{ scale: 0.9 }}\n                  href=\"https://x.com/drpawssa\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"w-10 h-10 rounded-lg bg-white/10 flex items-center justify-center hover-elevate active-elevate-2\"\n                  data-testid=\"link-twitter\"\n                  aria-label=\"X (Twitter)\"\n                >\n                  <SiX className=\"w-5 h-5\" />\n                </motion.a>\n                <motion.a\n                  whileHover={{ scale: 1.2, rotate: 5 }}\n                  whileTap={{ scale: 0.9 }}\n                  href=\"https://wa.me/966920003045\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"w-10 h-10 rounded-lg bg-white/10 flex items-center justify-center hover-elevate active-elevate-2\"\n                  data-testid=\"link-whatsapp\"\n                  aria-label=\"WhatsApp\"\n                >\n                  <SiWhatsapp className=\"w-5 h-5\" />\n                </motion.a>\n                <motion.a\n                  whileHover={{ scale: 1.2, rotate: 5 }}\n                  whileTap={{ scale: 0.9 }}\n                  href=\"https://www.snapchat.com/@drpawssa?sender_web_id=f7ef6909-6b8c-47f1-93ab-33fb6dea9af9&device_type=android&is_copy_url=true\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"w-10 h-10 rounded-lg bg-white/10 flex items-center justify-center hover-elevate active-elevate-2\"\n                  data-testid=\"link-snapchat\"\n                  aria-label=\"Snapchat\"\n                >\n                  <SiSnapchat className=\"w-5 h-5\" />\n                </motion.a>\n              </div>\n            </div>\n          </motion.div>\n        </motion.div>\n\n        <motion.div \n          initial={{ opacity: 0 }}\n          whileInView={{ opacity: 1 }}\n          viewport={{ once: false }}\n          transition={{ duration: 0.6, delay: 0.4 }}\n          className=\"border-t border-white/20 pt-8 text-center text-sm text-white/70\"\n        >\n          <p className=\"mb-3\">&copy; {new Date().getFullYear()} Dr. Paws Veterinary Clinic. All rights reserved.</p>\n          <p className=\"mb-2\">Powered By DotVets Software</p>\n          <div className=\"flex items-center justify-center gap-3\">\n            <a \n              href=\"tel:+966548336693\" \n              className=\"flex items-center gap-1 hover:text-white transition-colors\"\n              data-testid=\"link-dotvets-call\"\n              aria-label=\"Call DotVets\"\n            >\n              <Phone className=\"w-4 h-4\" />\n              <span dir=\"ltr\">+966 548336693</span>\n            </a>\n            <span className=\"text-white/40\">|</span>\n            <a \n              href=\"https://wa.me/966548336693\" \n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"flex items-center gap-1 hover:text-white transition-colors\"\n              data-testid=\"link-dotvets-whatsapp\"\n              aria-label=\"WhatsApp DotVets\"\n            >\n              <SiWhatsapp className=\"w-4 h-4\" />\n              <span>WhatsApp</span>\n            </a>\n          </div>\n        </motion.div>\n      </div>\n    </footer>\n  );\n}\n","size_bytes":9075},"client/src/components/examples/MediaSection.tsx":{"content":"import MediaSection from '../MediaSection';\n\nexport default function MediaSectionExample() {\n  return <MediaSection />;\n}\n","size_bytes":122},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  // Whitespace-nowrap: Badges should never wrap.\n  \"whitespace-nowrap inline-flex items-center rounded-md border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\" +\n  \" hover-elevate \" ,\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground shadow-xs\",\n        secondary: \"border-transparent bg-secondary text-secondary-foreground\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground shadow-xs\",\n\n        outline: \" border [border-color:var(--badge-outline)] shadow-xs\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  },\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  );\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1202},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"client/src/components/examples/HeroSlider.tsx":{"content":"import HeroSlider from '../HeroSlider';\n\nexport default function HeroSliderExample() {\n  return <HeroSlider />;\n}\n","size_bytes":114},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\" +\n  \" hover-elevate active-elevate-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground border border-primary-border\",\n        destructive:\n          \"bg-destructive text-destructive-foreground border border-destructive-border\",\n        outline:\n          // Shows the background color of whatever card / sidebar / accent background it is inside of.\n          // Inherits the current text color.\n          \" border [border-color:var(--button-outline)]  shadow-xs active:shadow-none \",\n        secondary: \"border bg-secondary text-secondary-foreground border border-secondary-border \",\n        // Add a transparent border so that when someone toggles a border on later, it doesn't shift layout/size.\n        ghost: \"border border-transparent\",\n      },\n      // Heights are set as \"min\" heights, because sometimes Ai will place large amount of content\n      // inside buttons. With a min-height they will look appropriate with small amounts of content,\n      // but will expand to fit large amounts of content.\n      size: {\n        default: \"min-h-9 px-4 py-2\",\n        sm: \"min-h-8 rounded-md px-3 text-xs\",\n        lg: \"min-h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  },\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  },\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":2359},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/sidebar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, VariantProps } from \"class-variance-authority\"\nimport { PanelLeftIcon } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nfunction SidebarProvider({\n  defaultOpen = true,\n  open: openProp,\n  onOpenChange: setOpenProp,\n  className,\n  style,\n  children,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  defaultOpen?: boolean\n  open?: boolean\n  onOpenChange?: (open: boolean) => void\n}) {\n  const isMobile = useIsMobile()\n  const [openMobile, setOpenMobile] = React.useState(false)\n\n  // This is the internal state of the sidebar.\n  // We use openProp and setOpenProp for control from outside the component.\n  const [_open, _setOpen] = React.useState(defaultOpen)\n  const open = openProp ?? _open\n  const setOpen = React.useCallback(\n    (value: boolean | ((value: boolean) => boolean)) => {\n      const openState = typeof value === \"function\" ? value(open) : value\n      if (setOpenProp) {\n        setOpenProp(openState)\n      } else {\n        _setOpen(openState)\n      }\n\n      // This sets the cookie to keep the sidebar state.\n      document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n    },\n    [setOpenProp, open]\n  )\n\n  // Helper to toggle the sidebar.\n  const toggleSidebar = React.useCallback(() => {\n    return isMobile ? setOpenMobile((open) => !open) : setOpen((open) => !open)\n  }, [isMobile, setOpen, setOpenMobile])\n\n  // Adds a keyboard shortcut to toggle the sidebar.\n  React.useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (\n        event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n        (event.metaKey || event.ctrlKey)\n      ) {\n        event.preventDefault()\n        toggleSidebar()\n      }\n    }\n\n    window.addEventListener(\"keydown\", handleKeyDown)\n    return () => window.removeEventListener(\"keydown\", handleKeyDown)\n  }, [toggleSidebar])\n\n  // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n  // This makes it easier to style the sidebar with Tailwind classes.\n  const state = open ? \"expanded\" : \"collapsed\"\n\n  const contextValue = React.useMemo<SidebarContextProps>(\n    () => ({\n      state,\n      open,\n      setOpen,\n      isMobile,\n      openMobile,\n      setOpenMobile,\n      toggleSidebar,\n    }),\n    [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n  )\n\n  return (\n    <SidebarContext.Provider value={contextValue}>\n      <TooltipProvider delayDuration={0}>\n        <div\n          data-slot=\"sidebar-wrapper\"\n          style={\n            {\n              \"--sidebar-width\": SIDEBAR_WIDTH,\n              \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n              ...style,\n            } as React.CSSProperties\n          }\n          className={cn(\n            \"group/sidebar-wrapper has-data-[variant=inset]:bg-sidebar flex min-h-svh w-full\",\n            className\n          )}\n          {...props}\n        >\n          {children}\n        </div>\n      </TooltipProvider>\n    </SidebarContext.Provider>\n  )\n}\n\nfunction Sidebar({\n  side = \"left\",\n  variant = \"sidebar\",\n  collapsible = \"offcanvas\",\n  className,\n  children,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  side?: \"left\" | \"right\"\n  variant?: \"sidebar\" | \"floating\" | \"inset\"\n  collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n}) {\n  const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n  if (collapsible === \"none\") {\n    return (\n      <div\n        data-slot=\"sidebar\"\n        className={cn(\n          \"bg-sidebar text-sidebar-foreground flex h-full w-[var(--sidebar-width)] flex-col\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n\n  if (isMobile) {\n    return (\n      <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n        <SheetContent\n          data-sidebar=\"sidebar\"\n          data-slot=\"sidebar\"\n          data-mobile=\"true\"\n          className=\"bg-sidebar text-sidebar-foreground w-[var(--sidebar-width)] p-0 [&>button]:hidden\"\n          style={\n            {\n              \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n            } as React.CSSProperties\n          }\n          side={side}\n        >\n          <SheetHeader className=\"sr-only\">\n            <SheetTitle>Sidebar</SheetTitle>\n            <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n          </SheetHeader>\n          <div className=\"flex h-full w-full flex-col\">{children}</div>\n        </SheetContent>\n      </Sheet>\n    )\n  }\n\n  return (\n    <div\n      className=\"group peer text-sidebar-foreground hidden md:block\"\n      data-state={state}\n      data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n      data-variant={variant}\n      data-side={side}\n      data-slot=\"sidebar\"\n    >\n      {/* This is what handles the sidebar gap on desktop */}\n      <div\n        data-slot=\"sidebar-gap\"\n        className={cn(\n          \"relative w-[var(--sidebar-width)] bg-transparent transition-[width] duration-200 ease-linear\",\n          \"group-data-[collapsible=offcanvas]:w-0\",\n          \"group-data-[side=right]:rotate-180\",\n          variant === \"floating\" || variant === \"inset\"\n            ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)+var(--spacing-4))]\"\n            : \"group-data-[collapsible=icon]:w-[var(--sidebar-width-icon)]\"\n        )}\n      />\n      <div\n        data-slot=\"sidebar-container\"\n        className={cn(\n          \"fixed inset-y-0 z-10 hidden h-svh w-[var(--sidebar-width)] transition-[left,right,width] duration-200 ease-linear md:flex\",\n          side === \"left\"\n            ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n            : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n          // Adjust the padding for floating and inset variants.\n          variant === \"floating\" || variant === \"inset\"\n            ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)+var(--spacing-4)+2px)]\"\n            : \"group-data-[collapsible=icon]:w-[var(--sidebar-width-icon)] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n          className\n        )}\n        {...props}\n      >\n        <div\n          data-sidebar=\"sidebar\"\n          data-slot=\"sidebar-inner\"\n          className=\"bg-sidebar group-data-[variant=floating]:border-sidebar-border flex h-full w-full flex-col group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:shadow-sm\"\n        >\n          {children}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction SidebarTrigger({\n  className,\n  onClick,\n  ...props\n}: React.ComponentProps<typeof Button>) {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      data-sidebar=\"trigger\"\n      data-slot=\"sidebar-trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeftIcon />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n}\n\nfunction SidebarRail({ className, ...props }: React.ComponentProps<\"button\">) {\n  const { toggleSidebar } = useSidebar()\n\n  // Note: Tailwind v3.4 doesn't support \"in-\" selectors. So the rail won't work perfectly.\n  return (\n    <button\n      data-sidebar=\"rail\"\n      data-slot=\"sidebar-rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"hover:after:bg-sidebar-border absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear group-data-[side=left]:-right-4 group-data-[side=right]:left-0 after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] sm:flex\",\n        \"in-data-[side=left]:cursor-w-resize in-data-[side=right]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"hover:group-data-[collapsible=offcanvas]:bg-sidebar group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarInset({ className, ...props }: React.ComponentProps<\"main\">) {\n  return (\n    <main\n      data-slot=\"sidebar-inset\"\n      className={cn(\n        \"bg-background relative flex w-full flex-1 flex-col\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow-sm md:peer-data-[variant=inset]:peer-data-[state=collapsed]:ml-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarInput({\n  className,\n  ...props\n}: React.ComponentProps<typeof Input>) {\n  return (\n    <Input\n      data-slot=\"sidebar-input\"\n      data-sidebar=\"input\"\n      className={cn(\"bg-background h-8 w-full shadow-none\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-header\"\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-footer\"\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof Separator>) {\n  return (\n    <Separator\n      data-slot=\"sidebar-separator\"\n      data-sidebar=\"separator\"\n      className={cn(\"bg-sidebar-border mx-2 w-auto\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-content\"\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroup({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-group\"\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroupLabel({\n  className,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"div\"> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-group-label\"\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"text-sidebar-foreground/70 ring-sidebar-ring flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium outline-hidden transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:h-4 [&>svg]:w-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroupAction({\n  className,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-group-action\"\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground absolute top-3.5 right-3 flex aspect-square w-5 items-center justify-center rounded-md p-0 outline-hidden transition-transform focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 md:after:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroupContent({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-group-content\"\n      data-sidebar=\"group-content\"\n      className={cn(\"w-full text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenu({ className, ...props }: React.ComponentProps<\"ul\">) {\n  return (\n    <ul\n      data-slot=\"sidebar-menu\"\n      data-sidebar=\"menu\"\n      className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuItem({ className, ...props }: React.ComponentProps<\"li\">) {\n  return (\n    <li\n      data-slot=\"sidebar-menu-item\"\n      data-sidebar=\"menu-item\"\n      className={cn(\"group/menu-item relative\", className)}\n      {...props}\n    />\n  )\n}\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-hidden ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-data-[sidebar=menu-action]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:w-8! group-data-[collapsible=icon]:h-8! group-data-[collapsible=icon]:p-2! [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:p-0!\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction SidebarMenuButton({\n  asChild = false,\n  isActive = false,\n  variant = \"default\",\n  size = \"default\",\n  tooltip,\n  className,\n  ...props\n}: React.ComponentProps<\"button\"> & {\n  asChild?: boolean\n  isActive?: boolean\n  tooltip?: string | React.ComponentProps<typeof TooltipContent>\n} & VariantProps<typeof sidebarMenuButtonVariants>) {\n  const Comp = asChild ? Slot : \"button\"\n  const { isMobile, state } = useSidebar()\n\n  const button = (\n    <Comp\n      data-slot=\"sidebar-menu-button\"\n      data-sidebar=\"menu-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n      {...props}\n    />\n  )\n\n  if (!tooltip) {\n    return button\n  }\n\n  if (typeof tooltip === \"string\") {\n    tooltip = {\n      children: tooltip,\n    }\n  }\n\n  return (\n    <Tooltip>\n      <TooltipTrigger asChild>{button}</TooltipTrigger>\n      <TooltipContent\n        side=\"right\"\n        align=\"center\"\n        hidden={state !== \"collapsed\" || isMobile}\n        {...tooltip}\n      />\n    </Tooltip>\n  )\n}\n\nfunction SidebarMenuAction({\n  className,\n  asChild = false,\n  showOnHover = false,\n  ...props\n}: React.ComponentProps<\"button\"> & {\n  asChild?: boolean\n  showOnHover?: boolean\n}) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-menu-action\"\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground peer-hover/menu-button:text-sidebar-accent-foreground absolute top-1.5 right-1 flex aspect-square w-5 items-center justify-center rounded-md p-0 outline-hidden transition-transform focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 md:after:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"peer-data-[active=true]/menu-button:text-sidebar-accent-foreground group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuBadge({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-menu-badge\"\n      data-sidebar=\"menu-badge\"\n      className={cn(\n        \"text-sidebar-foreground pointer-events-none absolute right-1 flex h-5 min-w-5 items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums select-none\",\n        \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuSkeleton({\n  className,\n  showIcon = false,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  showIcon?: boolean\n}) {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      data-slot=\"sidebar-menu-skeleton\"\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[var(--skeleton-width)] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n}\n\nfunction SidebarMenuSub({ className, ...props }: React.ComponentProps<\"ul\">) {\n  return (\n    <ul\n      data-slot=\"sidebar-menu-sub\"\n      data-sidebar=\"menu-sub\"\n      className={cn(\n        \"border-sidebar-border mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l px-2.5 py-0.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuSubItem({\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) {\n  return (\n    <li\n      data-slot=\"sidebar-menu-sub-item\"\n      data-sidebar=\"menu-sub-item\"\n      className={cn(\"group/menu-sub-item relative\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuSubButton({\n  asChild = false,\n  size = \"md\",\n  isActive = false,\n  className,\n  ...props\n}: React.ComponentProps<\"a\"> & {\n  asChild?: boolean\n  size?: \"sm\" | \"md\"\n  isActive?: boolean\n}) {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-menu-sub-button\"\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground active:bg-sidebar-accent active:text-sidebar-accent-foreground [&>svg]:text-sidebar-accent-foreground flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 outline outline-2 outline-transparent outline-offset-2 focus-visible:ring-2 disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":21846},"client/src/index.css":{"content":"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n/* LIGHT MODE */\n:root {\n  --button-outline: rgba(0,0,0, .10);\n  --badge-outline: rgba(0,0,0, .05);\n\n  /* Automatic computation of border around primary / danger buttons */\n  --opaque-button-border-intensity: -8; /* In terms of percentages */\n\n  /* Backgrounds applied on top of other backgrounds when hovered/active */\n  --elevate-1: rgba(0,0,0, .03);\n  --elevate-2: rgba(0,0,0, .08);\n\n  --background: 0 0% 99%;\n\n  --foreground: 199 37% 24%;\n\n  --border: 0 0% 88%;\n\n  --card: 0 0% 97%;\n\n  --card-foreground: 199 37% 24%;\n\n  --card-border: 0 0% 92%;\n\n  --sidebar: 0 0% 95%;\n\n  --sidebar-foreground: 199 37% 24%;\n\n  --sidebar-border: 0 0% 89%;\n\n  --sidebar-primary: 143 76% 38%;\n\n  --sidebar-primary-foreground: 0 0% 100%;\n\n  --sidebar-accent: 43 75% 66%;\n\n  --sidebar-accent-foreground: 199 37% 24%;\n\n  --sidebar-ring: 143 76% 38%;\n\n  --popover: 0 0% 93%;\n\n  --popover-foreground: 199 37% 24%;\n\n  --popover-border: 0 0% 87%;\n\n  --primary: 143 76% 38%;\n\n  --primary-foreground: 0 0% 100%;\n\n  --secondary: 0 0% 91%;\n\n  --secondary-foreground: 199 37% 24%;\n\n  --muted: 43 15% 90%;\n\n  --muted-foreground: 199 37% 35%;\n\n  --accent: 43 20% 88%;\n\n  --accent-foreground: 199 37% 24%;\n\n  --destructive: 0 72% 51%;\n\n  --destructive-foreground: 0 0% 100%;\n\n  --input: 0 0% 78%;\n  --ring: 143 76% 38%;\n  --chart-1: 143 76% 38%;\n  --chart-2: 27 87% 67%;\n  --chart-3: 199 37% 24%;\n  --chart-4: 43 75% 66%;\n  --chart-5: 143 76% 50%;\n\n  --font-sans: Poppins, sans-serif;\n  --font-serif: Georgia, serif;\n  --font-mono: Menlo, monospace;\n  --font-display: Rubik, sans-serif;\n  --radius: .5rem; /* 8px */\n  --shadow-2xs: 0px 2px 0px 0px hsl(0 0% 0% / 0.00);\n  --shadow-xs: 0px 2px 0px 0px hsl(0 0% 0% / 0.00);\n  --shadow-sm: 0px 2px 0px 0px hsl(0 0% 0% / 0.00), 0px 1px 2px -1px hsl(0 0% 0% / 0.00);\n  --shadow: 0px 2px 0px 0px hsl(0 0% 0% / 0.00), 0px 1px 2px -1px hsl(0 0% 0% / 0.00);\n  --shadow-md: 0px 2px 0px 0px hsl(0 0% 0% / 0.00), 0px 2px 4px -1px hsl(0 0% 0% / 0.00);\n  --shadow-lg: 0px 2px 0px 0px hsl(0 0% 0% / 0.00), 0px 4px 6px -1px hsl(0 0% 0% / 0.00);\n  --shadow-xl: 0px 2px 0px 0px hsl(0 0% 0% / 0.00), 0px 8px 10px -1px hsl(0 0% 0% / 0.00);\n  --shadow-2xl: 0px 2px 0px 0px hsl(0 0% 0% / 0.00);\n  --tracking-normal: 0em;\n  --spacing: 0.25rem;\n\n  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */\n\n  /* Fallback for older browsers */\n  --sidebar-primary-border: hsl(var(--sidebar-primary));\n  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --sidebar-accent-border: hsl(var(--sidebar-accent));\n  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --primary-border: hsl(var(--primary));\n  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --secondary-border: hsl(var(--secondary));\n  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --muted-border: hsl(var(--muted));\n  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --accent-border: hsl(var(--accent));\n  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --destructive-border: hsl(var(--destructive));\n  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n}\n\n.dark {\n  --button-outline: rgba(255,255,255, .10);\n  --badge-outline: rgba(255,255,255, .05);\n\n  --opaque-button-border-intensity: 9;  /* In terms of percentages */\n\n  /* Backgrounds applied on top of other backgrounds when hovered/active */\n  --elevate-1: rgba(255,255,255, .04);\n  --elevate-2: rgba(255,255,255, .09);\n\n  --background: 199 5% 12%;\n\n  --foreground: 0 0% 95%;\n\n  --border: 199 5% 20%;\n\n  --card: 199 5% 14%;\n\n  --card-foreground: 0 0% 95%;\n\n  --card-border: 199 5% 18%;\n\n  --sidebar: 199 5% 16%;\n\n  --sidebar-foreground: 0 0% 95%;\n\n  --sidebar-border: 199 5% 21%;\n\n  --sidebar-primary: 143 76% 35%;\n\n  --sidebar-primary-foreground: 0 0% 100%;\n\n  --sidebar-accent: 43 75% 58%;\n\n  --sidebar-accent-foreground: 199 37% 12%;\n\n  --sidebar-ring: 143 76% 38%;\n\n  --popover: 199 5% 18%;\n\n  --popover-foreground: 0 0% 95%;\n\n  --popover-border: 199 5% 23%;\n\n  --primary: 143 76% 35%;\n\n  --primary-foreground: 0 0% 100%;\n\n  --secondary: 199 5% 22%;\n\n  --secondary-foreground: 0 0% 95%;\n\n  --muted: 143 8% 20%;\n\n  --muted-foreground: 0 0% 75%;\n\n  --accent: 43 12% 22%;\n\n  --accent-foreground: 0 0% 95%;\n\n  --destructive: 0 72% 45%;\n\n  --destructive-foreground: 0 0% 100%;\n\n  --input: 199 5% 28%;\n  --ring: 143 76% 38%;\n  --chart-1: 143 76% 55%;\n  --chart-2: 27 87% 72%;\n  --chart-3: 199 37% 65%;\n  --chart-4: 43 75% 70%;\n  --chart-5: 143 76% 60%;\n\n  --shadow-2xs: 0px 2px 0px 0px hsl(0 0% 0% / 0.00);\n  --shadow-xs: 0px 2px 0px 0px hsl(0 0% 0% / 0.00);\n  --shadow-sm: 0px 2px 0px 0px hsl(0 0% 0% / 0.00), 0px 1px 2px -1px hsl(0 0% 0% / 0.00);\n  --shadow: 0px 2px 0px 0px hsl(0 0% 0% / 0.00), 0px 1px 2px -1px hsl(0 0% 0% / 0.00);\n  --shadow-md: 0px 2px 0px 0px hsl(0 0% 0% / 0.00), 0px 2px 4px -1px hsl(0 0% 0% / 0.00);\n  --shadow-lg: 0px 2px 0px 0px hsl(0 0% 0% / 0.00), 0px 4px 6px -1px hsl(0 0% 0% / 0.00);\n  --shadow-xl: 0px 2px 0px 0px hsl(0 0% 0% / 0.00), 0px 8px 10px -1px hsl(0 0% 0% / 0.00);\n  --shadow-2xl: 0px 2px 0px 0px hsl(0 0% 0% / 0.00);\n\n  /* Fallback for older browsers */\n  --sidebar-primary-border: hsl(var(--sidebar-primary));\n  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --sidebar-accent-border: hsl(var(--sidebar-accent));\n  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --primary-border: hsl(var(--primary));\n  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --secondary-border: hsl(var(--secondary));\n  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --muted-border: hsl(var(--muted));\n  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --accent-border: hsl(var(--accent));\n  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --destructive-border: hsl(var(--destructive));\n  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground;\n  }\n\n  h1, h2, h3, h4, h5, h6 {\n    @apply font-display;\n  }\n}\n\n/**\n * Using the elevate system.\n * Automatic contrast adjustment.\n *\n * <element className=\"hover-elevate\" />\n * <element className=\"active-elevate-2\" />\n *\n * // Using the tailwind utility when a data attribute is \"on\"\n * <element className=\"toggle-elevate data-[state=on]:toggle-elevated\" />\n * // Or manually controlling the toggle state\n * <element className=\"toggle-elevate toggle-elevated\" />\n *\n * Elevation systems have to handle many states.\n * - not-hovered, vs. hovered vs. active  (three mutually exclusive states)\n * - toggled or not\n * - focused or not (this is not handled with these utilities)\n *\n * Even without handling focused or not, this is six possible combinations that\n * need to be distinguished from eachother visually.\n */\n@layer utilities {\n\n  /* Hide ugly search cancel button in Chrome until we can style it properly */\n  input[type=\"search\"]::-webkit-search-cancel-button {\n    @apply hidden;\n  }\n\n  /* Placeholder styling for contentEditable div */\n  [contenteditable][data-placeholder]:empty::before {\n    content: attr(data-placeholder);\n    color: hsl(var(--muted-foreground));\n    pointer-events: none;\n  }\n\n  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of\n   * buttons/badges can remove the automatic brightness adjustment on interactions\n   * and program their own. */\n  .no-default-hover-elevate {}\n\n  .no-default-active-elevate {}\n\n\n  /**\n   * Toggleable backgrounds go behind the content. Hoverable/active goes on top.\n   * This way they can stack/compound. Both will overlap the parent's borders!\n   * So borders will be automatically adjusted both on toggle, and hover/active,\n   * and they will be compounded.\n   */\n  .toggle-elevate::before,\n  .toggle-elevate-2::before {\n    content: \"\";\n    pointer-events: none;\n    position: absolute;\n    inset: 0px;\n    /*border-radius: inherit;   match rounded corners */\n    border-radius: inherit;\n    z-index: -1;\n    /* sits behind content but above backdrop */\n  }\n\n  .toggle-elevate.toggle-elevated::before {\n    background-color: var(--elevate-2);\n  }\n\n  /* If there's a 1px border, adjust the inset so that it covers that parent's border */\n  .border.toggle-elevate::before {\n    inset: -1px;\n  }\n\n  /* Does not work on elements with overflow:hidden! */\n  .hover-elevate:not(.no-default-hover-elevate),\n  .active-elevate:not(.no-default-active-elevate),\n  .hover-elevate-2:not(.no-default-hover-elevate),\n  .active-elevate-2:not(.no-default-active-elevate) {\n    position: relative;\n    z-index: 0;\n  }\n\n  .hover-elevate:not(.no-default-hover-elevate)::after,\n  .active-elevate:not(.no-default-active-elevate)::after,\n  .hover-elevate-2:not(.no-default-hover-elevate)::after,\n  .active-elevate-2:not(.no-default-active-elevate)::after {\n    content: \"\";\n    pointer-events: none;\n    position: absolute;\n    inset: 0px;\n    /*border-radius: inherit;   match rounded corners */\n    border-radius: inherit;\n    z-index: 999;\n    /* sits in front of content */\n  }\n\n  .hover-elevate:hover:not(.no-default-hover-elevate)::after,\n  .active-elevate:active:not(.no-default-active-elevate)::after {\n    background-color: var(--elevate-1);\n  }\n\n  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,\n  .active-elevate-2:active:not(.no-default-active-elevate)::after {\n    background-color: var(--elevate-2);\n  }\n\n  /* If there's a 1px border, adjust the inset so that it covers that parent's border */\n  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,\n  .border.active-elevate:not(.no-active-interaction-elevate)::after,\n  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,\n  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,\n  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {\n    inset: -1px;\n  }\n\n  /* RTL Support */\n  [dir=\"rtl\"] {\n    direction: rtl;\n  }\n\n  [dir=\"rtl\"] .text-left {\n    text-align: right;\n  }\n\n  [dir=\"rtl\"] .text-right {\n    text-align: left;\n  }\n\n  /* Phone shake animation */\n  @keyframes phone-shake {\n    0%, 100% { transform: rotate(0deg); }\n    10%, 30%, 50%, 70%, 90% { transform: rotate(-3deg); }\n    20%, 40%, 60%, 80% { transform: rotate(3deg); }\n  }\n\n  .phone-shake-animation {\n    animation: phone-shake 2s ease-in-out infinite;\n  }\n}","size_bytes":11647},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"replit.md":{"content":"# Dr. Paws Veterinary Clinic Website\n\n## Overview\n\nThis is a single-page web application for Dr. Paws Veterinary Clinic, a veterinary care provider. The application serves as the clinic's primary digital presence, showcasing services, facilitating contact, and establishing the clinic's brand identity. Built with React, TypeScript, and modern web technologies, the site features a responsive design with smooth animations and an image slider hero section.\n\nThe application features a sticky header with the Dr. Paws logo and navigation menu (Home, About, Services, Blog, Contact Us), and implements the home page with eight main sections: hero slider, about/intro, services overview, service packages, our media (video showcase), why choose us, contact form, and footer. The codebase is structured to support future expansion with additional pages and features.\n\n## User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n## System Architecture\n\n### Frontend Architecture\n\n**Technology Stack:**\n- **Framework**: React 18 with TypeScript\n- **Build Tool**: Vite for fast development and optimized production builds\n- **Routing**: Wouter (lightweight client-side routing library)\n- **UI Components**: Shadcn/ui component library with Radix UI primitives\n- **Styling**: Tailwind CSS with custom design tokens\n- **Animations**: Framer Motion for scroll-based and interactive animations\n- **State Management**: TanStack Query (React Query) for server state\n- **Form Handling**: React Hook Form with Zod validation\n\n**Design System:**\nThe application follows a strict brand guideline documented in `design_guidelines.md`:\n- **Colors**: Custom HSL color palette with Pigment Green (primary), Charcoal (text), Saffron and Sandy Brown (accents)\n- **Typography**: Rubik for headings, Poppins for body text (loaded via Google Fonts)\n- **Component Library**: Extensive set of pre-built UI components in `client/src/components/ui/`\n- **Layout**: Responsive grid system with Tailwind spacing scale (4, 6, 8, 12, 16, 20, 24, 32)\n\n**Component Architecture:**\n- Modular section-based components (`AboutSection.tsx`, `ServicesSection.tsx`, etc.)\n- Reusable UI primitives from Shadcn/ui\n- Example components in `client/src/components/examples/` for development reference\n- Path aliases configured for clean imports (`@/`, `@shared/`, `@assets/`)\n\n### Backend Architecture\n\n**Server Framework:**\n- Express.js with TypeScript\n- Minimal API structure currently in place (routes defined in `server/routes.ts`)\n- Custom logging middleware for request tracking\n- Error handling middleware\n\n**Storage Layer:**\n- Interface-based storage design (`IStorage` in `server/storage.ts`)\n- Current implementation uses in-memory storage (`MemStorage`)\n- Structured to support migration to database storage\n- Basic user management operations (create, retrieve by ID/username)\n\n**Build Process:**\n- Development: `tsx` for running TypeScript directly with hot reload\n- Production: Vite builds client, esbuild bundles server into ESM format\n- Static file serving handled by Vite in development, Express in production\n\n### Data Storage\n\n**Database Configuration:**\n- **ORM**: Drizzle ORM configured for PostgreSQL\n- **Provider**: Neon Database serverless driver (`@neondatabase/serverless`)\n- **Schema Location**: `shared/schema.ts` defines database tables\n- **Migrations**: Managed via Drizzle Kit, output to `./migrations`\n\n**Current Schema:**\n- Users table with UUID primary keys, username, and password fields\n- Zod schemas for validation using `drizzle-zod`\n- Schema is minimal and ready for expansion with clinic-specific entities (appointments, pets, medical records, etc.)\n\n**Note**: While Drizzle and PostgreSQL infrastructure is configured, the application currently uses in-memory storage. Database integration requires running migrations and updating the storage implementation.\n\n### Authentication & Authorization\n\nCurrently not implemented. The user schema exists but authentication flow (login, session management, JWT, etc.) is not built out. The storage interface includes basic user CRUD operations as foundation for future auth implementation.\n\n## External Dependencies\n\n### Third-Party Services\n\n**Google Fonts CDN:**\n- Rubik (weights: 400, 500, 600)\n- Poppins (weights: 300, 400, 600, 700)\n- Loaded in `client/index.html` header\n\n**Database:**\n- Neon Database (PostgreSQL-compatible serverless database)\n- Connection via `DATABASE_URL` environment variable\n- WebSocket-based connection using Neon's serverless driver\n\n### Key NPM Packages\n\n**UI & Styling:**\n- `@radix-ui/*` - Unstyled, accessible component primitives (20+ components)\n- `tailwindcss` - Utility-first CSS framework\n- `class-variance-authority` - Utility for creating variant-based component APIs\n- `framer-motion` - Animation library\n- `embla-carousel-react` - Carousel/slider functionality\n\n**Data & Forms:**\n- `@tanstack/react-query` - Server state management\n- `react-hook-form` - Form state and validation\n- `@hookform/resolvers` - Validation resolver for react-hook-form\n- `zod` - TypeScript-first schema validation\n- `drizzle-orm` & `drizzle-zod` - Database ORM and schema integration\n\n**Backend:**\n- `express` - Web server framework\n- `connect-pg-simple` - PostgreSQL session store for Express\n- `date-fns` - Date utility library\n\n**Email Services:**\n- `@microsoft/microsoft-graph-client` - Microsoft Graph API client for sending emails\n- `@azure/identity` - Azure authentication for Microsoft 365 integration\n- `nodemailer` - Email sending library (legacy, replaced by Graph API)\n\n**Development Tools:**\n- `@replit/*` plugins - Vite plugins for Replit environment (error overlay, dev banner, cartographer)\n- `tsx` - TypeScript execution for development\n- `esbuild` - Fast JavaScript bundler for production builds\n\n### Asset Management\n\nStatic assets (images) are stored in `attached_assets/` directory and accessed via the `@assets` path alias configured in Vite. The application currently uses generated veterinary-themed images for the hero slider and about section.\n\n## Recent Changes\n\n- **2025-10-15**: Email confirmation system implemented using Microsoft Graph API:\n  - Sends bilingual (Arabic/English) discount confirmation emails from info@drpaws-sa.com\n  - Beautiful HTML email template with gradient design matching brand colors\n  - Displays discount code (user's phone number) prominently in email\n  - Email includes offer details: 20% discount for 6 months, available at all Jeddah branches\n  - Azure App Registration configured with Mail.Send permission\n  - Automatic email sending upon successful registration\n  - Error handling: registration succeeds even if email fails\n- **2025-10-15**: Email field added to promotional modal:\n  - Required field with 50-character limit and live counter\n  - Email format validation\n  - Real-time duplicate email detection via debounced API check\n  - Saved to database with unique constraint\n- **2025-10-14**: Promotional modal enhancements: removed close button, made modal non-closable (no outside click/escape), added phone number exact length validation (must be 10 digits), character limits with live counters (firstName: 20, lastName: 20, phone: 10), real-time duplicate phone detection, in-modal language switcher with Globe icon\n- **2025-10-04**: Full homepage implementation with sticky header, hero slider, about section, services section, service packages, why choose us section, contact form, and footer\n- **2025-10-04**: All animations updated to trigger on every scroll (up/down) using framer-motion with once:false\n- **2025-10-04**: Dr. Paws logo downloaded and integrated into header\n- **2025-10-04**: Enhanced animations and hover effects across all sections\n- **2025-10-04**: Service Packages section completed with three tiers (Basic Care 299 SAR, Complete Care 599 SAR \"Most Popular\", Premium Care 999 SAR)\n- **2025-10-04**: \"Our Media\" section added below Service Packages with two clinic videos in professional frames with hover animations\n- **2025-10-04**: Animated paw icon added inline to the left of Service Packages heading using Lord Icon library - 90px size with loop animation every 1.5 seconds in brand colors\n- **2025-10-04**: Animated video/media icon added inline to the left of Our Media heading using Lord Icon library - 90px size with loop animation every 1.5 seconds in brand colors","size_bytes":8344},"client/src/custom-elements.d.ts":{"content":"declare namespace JSX {\n  interface IntrinsicElements {\n    'lord-icon': {\n      src?: string;\n      trigger?: string;\n      delay?: string;\n      state?: string;\n      stroke?: string;\n      colors?: string;\n      style?: React.CSSProperties;\n      'data-testid'?: string;\n      children?: React.ReactNode;\n    };\n  }\n}\n","size_bytes":321},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/examples/AboutSection.tsx":{"content":"import AboutSection from '../AboutSection';\n\nexport default function AboutSectionExample() {\n  return <AboutSection />;\n}\n","size_bytes":122},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/HeartbeatDivider.tsx":{"content":"export default function HeartbeatDivider() {\n  return (\n    <div className=\"my-10 w-full overflow-hidden\">\n      <div className=\"relative h-32 md:h-36 flex items-center justify-center\">\n        {/* Full-width heartbeat line background */}\n        <svg\n          className=\"w-full h-full absolute inset-0\"\n          viewBox=\"0 0 1200 140\"\n          preserveAspectRatio=\"xMidYMid meet\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <defs>\n            <pattern\n              id=\"ecg-pattern\"\n              x=\"0\"\n              y=\"0\"\n              width=\"400\"\n              height=\"140\"\n              patternUnits=\"userSpaceOnUse\"\n            >\n              <animateTransform\n                attributeName=\"patternTransform\"\n                type=\"translate\"\n                from=\"0 0\"\n                to=\"400 0\"\n                dur=\"12s\"\n                repeatCount=\"indefinite\"\n              />\n              <path\n                className=\"ecg-path\"\n                d=\"M0,70 L60,70 L65,65 L70,70 L75,70 L80,70 L85,50 L90,90 L95,70 L100,70 L105,75 L110,70 L115,70 L400,70\"\n                fill=\"none\"\n                stroke=\"#18ac61\"\n                strokeWidth=\"4\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              />\n            </pattern>\n          </defs>\n          \n          <rect\n            x=\"-400\"\n            y=\"0\"\n            width=\"2000\"\n            height=\"140\"\n            fill=\"url(#ecg-pattern)\"\n          />\n        </svg>\n      </div>\n      \n      <style>{`\n        @media (min-width: 768px) {\n          .ecg-path {\n            stroke-width: 2.5;\n          }\n        }\n      `}</style>\n    </div>\n  );\n}\n","size_bytes":1681},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"shadcn-card rounded-xl border bg-card border-card-border text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n));\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n));\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n));\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardDescription,\n  CardContent,\n}\n","size_bytes":1904},"client/src/components/examples/ServicesSection.tsx":{"content":"import ServicesSection from '../ServicesSection';\n\nexport default function ServicesSectionExample() {\n  return <ServicesSection />;\n}\n","size_bytes":134},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/WhyChooseUsSection.tsx":{"content":"import { HeartHandshake, Award, Building2, ClipboardCheck } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { motion } from 'framer-motion';\nimport { useInView } from 'framer-motion';\nimport { useRef } from 'react';\nimport { useLanguage } from '@/contexts/LanguageContext';\nimport { Link } from 'wouter';\n\nconst container = {\n  hidden: { opacity: 0 },\n  show: {\n    opacity: 1,\n    transition: {\n      staggerChildren: 0.15\n    }\n  }\n};\n\nconst item = {\n  hidden: { opacity: 0, x: -30 },\n  show: { opacity: 1, x: 0 }\n};\n\nexport default function WhyChooseUsSection() {\n  const ref = useRef(null);\n  const isInView = useInView(ref, { once: false, amount: 0.3 });\n  const { t } = useLanguage();\n\n  const features = [\n    {\n      icon: HeartHandshake,\n      title: t('why.reason1.title'),\n      description: t('why.reason1.description'),\n    },\n    {\n      icon: Award,\n      title: t('why.reason2.title'),\n      description: t('why.reason2.description'),\n    },\n    {\n      icon: Building2,\n      title: t('why.reason3.title'),\n      description: t('why.reason3.description'),\n    },\n    {\n      icon: ClipboardCheck,\n      title: t('why.reason4.title'),\n      description: t('why.reason4.description'),\n    },\n  ];\n\n  return (\n    <section ref={ref} className=\"py-20 bg-background\">\n      <div className=\"max-w-7xl mx-auto px-6\">\n        <motion.h2 \n          initial={{ opacity: 0, y: 30 }}\n          animate={isInView ? { opacity: 1, y: 0 } : {}}\n          transition={{ duration: 0.6 }}\n          className=\"font-display text-4xl font-medium text-foreground text-center mb-16\" \n          data-testid=\"text-why-choose-headline\"\n        >\n          {t('why.headline')}\n        </motion.h2>\n\n        <motion.div \n          variants={container}\n          initial=\"hidden\"\n          animate={isInView ? \"show\" : \"hidden\"}\n          className=\"grid md:grid-cols-2 gap-12 mb-12\"\n        >\n          {features.map((feature, index) => (\n            <motion.div \n              key={index} \n              variants={item}\n              whileHover={{ x: 10 }}\n              transition={{ duration: 0.3 }}\n              className=\"flex gap-6\" \n              data-testid={`feature-${index}`}\n            >\n              <div className=\"flex-shrink-0\">\n                <motion.div \n                  whileHover={{ rotate: 360, scale: 1.1 }}\n                  transition={{ duration: 0.6 }}\n                  className=\"w-16 h-16 rounded-lg bg-primary/10 flex items-center justify-center\"\n                >\n                  <feature.icon className=\"w-8 h-8 text-primary\" />\n                </motion.div>\n              </div>\n              <div>\n                <h3 className=\"text-xl font-semibold text-foreground mb-3\">{feature.title}</h3>\n                <p className=\"text-foreground/70 leading-relaxed\">{feature.description}</p>\n              </div>\n            </motion.div>\n          ))}\n        </motion.div>\n\n        <motion.div \n          initial={{ opacity: 0, y: 20 }}\n          animate={isInView ? { opacity: 1, y: 0 } : {}}\n          transition={{ duration: 0.6, delay: 0.6 }}\n          className=\"text-center\"\n        >\n          <Link href=\"/about\">\n            <motion.div\n              whileHover={{ scale: 1.05 }}\n              whileTap={{ scale: 0.95 }}\n            >\n              <Button variant=\"outline\" size=\"lg\" data-testid=\"button-read-more-why\">\n                {t('why.readMore')}\n              </Button>\n            </motion.div>\n          </Link>\n        </motion.div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":3547},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport { LanguageProvider } from \"@/contexts/LanguageContext\";\nimport AnimatedServicesBackground from \"@/components/AnimatedServicesBackground\";\nimport Home from \"@/pages/Home\";\nimport About from \"@/pages/About\";\nimport Services from \"@/pages/Services\";\nimport Blog from \"@/pages/Blog\";\nimport BookNow from \"@/pages/BookNow\";\nimport LoginAdmin from \"@/pages/LoginAdmin\";\nimport AdminDashboard from \"@/pages/AdminDashboard\";\nimport AdminServicePackages from \"@/pages/AdminServicePackages\";\nimport AdminCustomersReviews from \"@/pages/AdminCustomersReviews\";\nimport AdminOurDoctors from \"@/pages/AdminOurDoctors\";\nimport AdminOurPartners from \"@/pages/AdminOurPartners\";\nimport NotFound from \"@/pages/not-found\";\n\nfunction Router() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={Home} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/services\" component={Services} />\n      <Route path=\"/blog\" component={Blog} />\n      <Route path=\"/book-now\" component={BookNow} />\n      <Route path=\"/login-admin\" component={LoginAdmin} />\n      <Route path=\"/admin-dashboard\" component={AdminDashboard} />\n      <Route path=\"/admin/service-packages\" component={AdminServicePackages} />\n      <Route path=\"/admin/customers-reviews\" component={AdminCustomersReviews} />\n      <Route path=\"/admin/about/our-doctors\" component={AdminOurDoctors} />\n      <Route path=\"/admin/about/our-partners\" component={AdminOurPartners} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <LanguageProvider>\n        <TooltipProvider>\n          <AnimatedServicesBackground />\n          <Toaster />\n          <Router />\n        </TooltipProvider>\n      </LanguageProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":2077},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/examples/WhyChooseUsSection.tsx":{"content":"import WhyChooseUsSection from '../WhyChooseUsSection';\n\nexport default function WhyChooseUsSectionExample() {\n  return <WhyChooseUsSection />;\n}\n","size_bytes":146},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/examples/ServicePackagesSection.tsx":{"content":"import ServicePackagesSection from '../ServicePackagesSection';\n\nexport default function ServicePackagesSectionExample() {\n  return <ServicePackagesSection />;\n}\n","size_bytes":162},"client/src/components/ReviewsSection.tsx":{"content":"import { motion } from 'framer-motion';\nimport { useInView } from 'framer-motion';\nimport { useRef, useState } from 'react';\nimport { useQuery } from '@tanstack/react-query';\nimport { useLanguage } from '@/contexts/LanguageContext';\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';\nimport { Star } from 'lucide-react';\nimport { type CustomerReview } from '@shared/schema';\n\nexport default function ReviewsSection() {\n  const ref = useRef(null);\n  const isInView = useInView(ref, { once: false, amount: 0.2 });\n  const { t, language } = useLanguage();\n  const [isPaused, setIsPaused] = useState(false);\n\n  const { data: dbReviews = [], isLoading } = useQuery<CustomerReview[]>({\n    queryKey: [\"/api/customer-reviews\"],\n  });\n\n  const reviews = dbReviews.map(review => ({\n    id: review.id,\n    name: review.name,\n    avatar: `https://api.dicebear.com/7.x/avataaars/svg?seed=${review.name}`,\n    rating: review.rating,\n    text: review.message,\n  }));\n\n  const duplicatedReviews = reviews.length >= 4 ? [...reviews, ...reviews] : reviews;\n\n  const ReviewCard = ({ review }: { review: typeof reviews[0] }) => (\n    <div\n      className=\"p-6 rounded-lg border border-border bg-background hover-elevate flex-shrink-0 w-[300px]\"\n      data-testid={`review-card-${review.id}`}\n    >\n      <div className={`flex items-center gap-3 mb-4 ${language === 'ar' ? 'flex-row-reverse' : ''}`}>\n        <Avatar data-testid={`avatar-${review.id}`}>\n          <AvatarImage src={review.avatar} alt={review.name} />\n          <AvatarFallback>{review.name.split(' ').map(n => n[0]).join('')}</AvatarFallback>\n        </Avatar>\n        <div className={language === 'ar' ? 'text-right' : ''}>\n          <h3 className=\"font-semibold text-foreground\" data-testid={`name-${review.id}`}>\n            {review.name}\n          </h3>\n          <div className={`flex gap-0.5 ${language === 'ar' ? 'flex-row-reverse' : ''}`}>\n            {Array.from({ length: 5 }).map((_, i) => (\n              <Star\n                key={i}\n                className={`w-4 h-4 ${\n                  i < review.rating\n                    ? 'fill-[#e9c46a] text-[#e9c46a]'\n                    : 'fill-muted text-muted'\n                }`}\n                data-testid={`star-${review.id}-${i}`}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n      <p className={`text-foreground/80 text-sm leading-relaxed ${language === 'ar' ? 'text-right' : 'text-left'}`} data-testid={`text-${review.id}`}>\n        {review.text}\n      </p>\n    </div>\n  );\n\n  if (isLoading) {\n    return (\n      <section ref={ref} className=\"py-20 bg-card overflow-hidden\">\n        <div className=\"max-w-7xl mx-auto px-6\">\n          <h2 className=\"font-display text-4xl font-medium text-foreground text-center mb-16\">\n            {t('reviews.headline')}\n          </h2>\n          <p className=\"text-center text-muted-foreground\">Loading reviews...</p>\n        </div>\n      </section>\n    );\n  }\n\n  if (reviews.length === 0) {\n    return null;\n  }\n\n  return (\n    <section ref={ref} className=\"py-20 bg-card overflow-hidden\">\n      <div className=\"max-w-7xl mx-auto px-6\">\n        <motion.h2 \n          initial={{ opacity: 0, y: 30 }}\n          animate={isInView ? { opacity: 1, y: 0 } : {}}\n          transition={{ duration: 0.6 }}\n          className=\"font-display text-4xl font-medium text-foreground text-center mb-16\"\n          data-testid=\"text-reviews-headline\"\n        >\n          {t('reviews.headline')}\n        </motion.h2>\n        \n        <div \n          className=\"relative\"\n          onMouseEnter={() => setIsPaused(true)}\n          onMouseLeave={() => setIsPaused(false)}\n        >\n          {reviews.length >= 4 ? (\n            <motion.div\n              key={language}\n              className=\"flex gap-6\"\n              animate={{\n                x: isPaused ? undefined : [0, -((300 + 24) * duplicatedReviews.length / 2)],\n              }}\n              transition={{\n                x: {\n                  repeat: Infinity,\n                  repeatType: \"loop\",\n                  duration: 40,\n                  ease: \"linear\",\n                },\n              }}\n            >\n              {duplicatedReviews.map((review, index) => (\n                <ReviewCard key={`${review.id}-${index}`} review={review} />\n              ))}\n            </motion.div>\n          ) : (\n            <div className=\"flex gap-6 justify-center flex-wrap\">\n              {duplicatedReviews.map((review, index) => (\n                <ReviewCard key={`${review.id}-${index}`} review={review} />\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":4667},"client/src/components/ServicesSection.tsx":{"content":"import { Stethoscope, Heart, Syringe, Scissors, ClipboardList, Activity } from 'lucide-react';\nimport { Card, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { motion } from 'framer-motion';\nimport { useInView } from 'framer-motion';\nimport { useRef } from 'react';\nimport { useLanguage } from '@/contexts/LanguageContext';\nimport { Link } from 'wouter';\n\nconst container = {\n  hidden: { opacity: 0 },\n  show: {\n    opacity: 1,\n    transition: {\n      staggerChildren: 0.1\n    }\n  }\n};\n\nconst item = {\n  hidden: { opacity: 0, y: 20 },\n  show: { opacity: 1, y: 0 }\n};\n\nexport default function ServicesSection() {\n  const ref = useRef(null);\n  const isInView = useInView(ref, { once: false, amount: 0.2 });\n  const { t } = useLanguage();\n\n  const services = [\n    {\n      icon: Stethoscope,\n      title: t('services.wellness.title'),\n      description: t('services.wellness.description'),\n    },\n    {\n      icon: Heart,\n      title: t('services.emergency.title'),\n      description: t('services.emergency.description'),\n    },\n    {\n      icon: Syringe,\n      title: t('services.vaccinations.title'),\n      description: t('services.vaccinations.description'),\n    },\n    {\n      icon: Scissors,\n      title: t('services.surgery.title'),\n      description: t('services.surgery.description'),\n    },\n    {\n      icon: Activity,\n      title: t('services.diagnostics.title'),\n      description: t('services.diagnostics.description'),\n    },\n    {\n      icon: ClipboardList,\n      title: t('services.dental.title'),\n      description: t('services.dental.description'),\n    },\n  ];\n\n  return (\n    <section ref={ref} className=\"py-20 bg-[hsl(43,75%,66%)]/5\">\n      <div className=\"max-w-7xl mx-auto px-6\">\n        <motion.div \n          initial={{ opacity: 0, y: 30 }}\n          animate={isInView ? { opacity: 1, y: 0 } : {}}\n          transition={{ duration: 0.6 }}\n          className=\"text-center mb-16\"\n        >\n          <h2 className=\"font-display text-4xl font-medium text-foreground mb-4\" data-testid=\"text-services-headline\">\n            {t('services.headline')}\n          </h2>\n          <p className=\"text-lg text-foreground/80 max-w-3xl mx-auto\" data-testid=\"text-services-description\">\n            {t('services.description')}\n          </p>\n        </motion.div>\n\n        <motion.div \n          variants={container}\n          initial=\"hidden\"\n          animate={isInView ? \"show\" : \"hidden\"}\n          className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8 mb-12\"\n        >\n          {services.map((service, index) => (\n            <motion.div key={index} variants={item}>\n              <motion.div\n                whileHover={{ y: -8, transition: { duration: 0.3 } }}\n              >\n                <Card className=\"h-full hover-elevate\" data-testid={`card-service-${index}`}>\n                  <CardHeader>\n                    <motion.div \n                      className=\"mb-4\"\n                      whileHover={{ rotate: 360, scale: 1.1 }}\n                      transition={{ duration: 0.6 }}\n                    >\n                      <service.icon className=\"w-12 h-12 text-[hsl(27,87%,67%)]\" />\n                    </motion.div>\n                    <CardTitle className=\"text-xl mb-2\">{service.title}</CardTitle>\n                    <CardDescription className=\"text-base\">{service.description}</CardDescription>\n                  </CardHeader>\n                </Card>\n              </motion.div>\n            </motion.div>\n          ))}\n        </motion.div>\n\n        <motion.div \n          initial={{ opacity: 0, y: 20 }}\n          animate={isInView ? { opacity: 1, y: 0 } : {}}\n          transition={{ duration: 0.6, delay: 0.6 }}\n          className=\"text-center\"\n        >\n          <Link href=\"/services\">\n            <motion.div\n              whileHover={{ scale: 1.05 }}\n              whileTap={{ scale: 0.95 }}\n            >\n              <Button size=\"lg\" data-testid=\"button-read-more-services\">\n                {t('services.readMore')}\n              </Button>\n            </motion.div>\n          </Link>\n        </motion.div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":4162},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/pages/Home.tsx":{"content":"import { useState, useEffect } from 'react';\nimport Header from '@/components/Header';\nimport ECGAnimation from '@/components/ECGAnimation';\nimport HeroSlider from '@/components/HeroSlider';\nimport AboutSection from '@/components/AboutSection';\nimport ServicesSection from '@/components/ServicesSection';\nimport ServicePackagesSection from '@/components/ServicePackagesSection';\nimport MediaSection from '@/components/MediaSection';\nimport WhyChooseUsSection from '@/components/WhyChooseUsSection';\nimport ReviewsSection from '@/components/ReviewsSection';\nimport ContactSection from '@/components/ContactSection';\nimport HeartbeatDivider from '@/components/HeartbeatDivider';\nimport Footer from '@/components/Footer';\nimport PromotionalModal from '@/components/PromotionalModal';\n\nexport default function Home() {\n  const [showPromoModal, setShowPromoModal] = useState(false);\n\n  useEffect(() => {\n    const hasSeenModal = localStorage.getItem('hasSeenPromoModal');\n    \n    if (!hasSeenModal) {\n      const timer = setTimeout(() => {\n        setShowPromoModal(true);\n      }, 1500);\n      return () => clearTimeout(timer);\n    }\n  }, []);\n\n  const handleClosePromo = () => {\n    setShowPromoModal(false);\n  };\n\n  return (\n    <div className=\"min-h-screen\">\n      <Header />\n      <ECGAnimation />\n      <HeroSlider />\n      <div id=\"about\">\n        <AboutSection />\n      </div>\n      <div id=\"services\">\n        <ServicesSection />\n        <ServicePackagesSection />\n      </div>\n      <MediaSection />\n      <WhyChooseUsSection />\n      <ReviewsSection />\n      <ContactSection />\n      <HeartbeatDivider />\n      <Footer />\n      \n      <PromotionalModal open={showPromoModal} onClose={handleClosePromo} />\n    </div>\n  );\n}\n","size_bytes":1730},"server/storage.ts":{"content":"import { type User, type InsertUser, type ServicePackage, type InsertServicePackage, type CustomerReview, type InsertCustomerReview, type Partner, type InsertPartner, type OpeningDiscount, type InsertOpeningDiscount } from \"@shared/schema\";\nimport { randomUUID } from \"crypto\";\n\n// modify the interface with any CRUD methods\n// you might need\n\nexport interface IStorage {\n  getUser(id: string): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n  \n  // Service Packages\n  getAllServicePackages(): Promise<ServicePackage[]>;\n  getServicePackage(id: number): Promise<ServicePackage | undefined>;\n  createServicePackage(pkg: InsertServicePackage): Promise<ServicePackage>;\n  updateServicePackage(id: number, pkg: Partial<InsertServicePackage>): Promise<ServicePackage | undefined>;\n  deleteServicePackage(id: number): Promise<boolean>;\n\n  // Customer Reviews\n  getAllCustomerReviews(): Promise<CustomerReview[]>;\n  getCustomerReview(id: number): Promise<CustomerReview | undefined>;\n  createCustomerReview(review: InsertCustomerReview): Promise<CustomerReview>;\n  updateCustomerReview(id: number, review: Partial<InsertCustomerReview>): Promise<CustomerReview | undefined>;\n  deleteCustomerReview(id: number): Promise<boolean>;\n\n  // Partners\n  getAllPartners(): Promise<Partner[]>;\n  getPartner(id: number): Promise<Partner | undefined>;\n  createPartner(partner: InsertPartner): Promise<Partner>;\n  updatePartner(id: number, partner: Partial<InsertPartner>): Promise<Partner | undefined>;\n  deletePartner(id: number): Promise<boolean>;\n\n  // Opening Discount\n  createOpeningDiscount(discount: InsertOpeningDiscount): Promise<OpeningDiscount>;\n  checkPhoneNumberExists(phoneNumber: string): Promise<boolean>;\n  checkEmailExists(email: string): Promise<boolean>;\n}\n\nexport class MemStorage implements IStorage {\n  private users: Map<string, User>;\n  private packages: Map<number, ServicePackage>;\n  private nextPackageId: number;\n\n  constructor() {\n    this.users = new Map();\n    this.packages = new Map();\n    this.nextPackageId = 1;\n  }\n\n  async getUser(id: string): Promise<User | undefined> {\n    return this.users.get(id);\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(\n      (user) => user.username === username,\n    );\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const id = randomUUID();\n    const user: User = { ...insertUser, id };\n    this.users.set(id, user);\n    return user;\n  }\n\n  async getAllServicePackages(): Promise<ServicePackage[]> {\n    return Array.from(this.packages.values());\n  }\n\n  async getServicePackage(id: number): Promise<ServicePackage | undefined> {\n    return this.packages.get(id);\n  }\n\n  async createServicePackage(pkg: InsertServicePackage): Promise<ServicePackage> {\n    const id = this.nextPackageId++;\n    const servicePackage: ServicePackage = { \n      ...pkg, \n      id,\n      popular: pkg.popular ?? false \n    };\n    this.packages.set(id, servicePackage);\n    return servicePackage;\n  }\n\n  async updateServicePackage(id: number, pkg: Partial<InsertServicePackage>): Promise<ServicePackage | undefined> {\n    const existing = this.packages.get(id);\n    if (!existing) return undefined;\n    const updated = { ...existing, ...pkg };\n    this.packages.set(id, updated);\n    return updated;\n  }\n\n  async deleteServicePackage(id: number): Promise<boolean> {\n    return this.packages.delete(id);\n  }\n\n  async getAllCustomerReviews(): Promise<CustomerReview[]> {\n    throw new Error(\"Not implemented\");\n  }\n\n  async getCustomerReview(id: number): Promise<CustomerReview | undefined> {\n    throw new Error(\"Not implemented\");\n  }\n\n  async createCustomerReview(review: InsertCustomerReview): Promise<CustomerReview> {\n    throw new Error(\"Not implemented\");\n  }\n\n  async updateCustomerReview(id: number, review: Partial<InsertCustomerReview>): Promise<CustomerReview | undefined> {\n    throw new Error(\"Not implemented\");\n  }\n\n  async deleteCustomerReview(id: number): Promise<boolean> {\n    throw new Error(\"Not implemented\");\n  }\n\n  async getAllPartners(): Promise<Partner[]> {\n    throw new Error(\"Not implemented\");\n  }\n\n  async getPartner(id: number): Promise<Partner | undefined> {\n    throw new Error(\"Not implemented\");\n  }\n\n  async createPartner(partner: InsertPartner): Promise<Partner> {\n    throw new Error(\"Not implemented\");\n  }\n\n  async updatePartner(id: number, partner: Partial<InsertPartner>): Promise<Partner | undefined> {\n    throw new Error(\"Not implemented\");\n  }\n\n  async deletePartner(id: number): Promise<boolean> {\n    throw new Error(\"Not implemented\");\n  }\n\n  async createOpeningDiscount(discount: InsertOpeningDiscount): Promise<OpeningDiscount> {\n    throw new Error(\"Not implemented\");\n  }\n\n  async checkPhoneNumberExists(phoneNumber: string): Promise<boolean> {\n    throw new Error(\"Not implemented\");\n  }\n\n  async checkEmailExists(email: string): Promise<boolean> {\n    throw new Error(\"Not implemented\");\n  }\n}\n\n// Use database storage\nimport { storage as dbStorage } from \"./db-storage\";\nexport const storage = dbStorage;\n","size_bytes":5184},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(`\n      after:content-[''] after:block after:absolute after:inset-0 after:rounded-full after:pointer-events-none after:border after:border-black/10 dark:after:border-white/10\n      relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full`,\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1592},"client/src/components/HeroSlider.tsx":{"content":"import { useState, useEffect } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { useLanguage } from '@/contexts/LanguageContext';\nimport { useLocation } from 'wouter';\nimport heroImage1 from '@assets/generated_images/Vet_examining_golden_retriever_19654044.png';\nimport heroImage2 from '@assets/generated_images/Vet_consultation_with_cat_owner_7978144f.png';\nimport heroImage3 from '@assets/generated_images/Modern_veterinary_equipment_room_49dc6345.png';\n\nconst slides = [\n  { image: heroImage1, alt: 'Veterinarian examining golden retriever' },\n  { image: heroImage2, alt: 'Vet consultation with cat owner' },\n  { image: heroImage3, alt: 'Modern veterinary equipment' },\n];\n\nexport default function HeroSlider() {\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const { t } = useLanguage();\n  const [, setLocation] = useLocation();\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCurrentSlide((prev) => (prev + 1) % slides.length);\n    }, 6000);\n    return () => clearInterval(timer);\n  }, []);\n\n  return (\n    <div className=\"relative h-[85vh] overflow-hidden\">\n      <AnimatePresence mode=\"wait\">\n        {slides.map((slide, index) => (\n          index === currentSlide && (\n            <motion.div\n              key={index}\n              initial={{ opacity: 0, scale: 1.1 }}\n              animate={{ opacity: 1, scale: 1 }}\n              exit={{ opacity: 0, scale: 0.95 }}\n              transition={{ duration: 1, ease: \"easeInOut\" }}\n              className=\"absolute inset-0\"\n            >\n              <img\n                src={slide.image}\n                alt={slide.alt}\n                className=\"w-full h-full object-cover\"\n              />\n              <div className=\"absolute inset-0 bg-gradient-to-r from-[hsl(199,37%,24%)]/70 to-[hsl(199,37%,24%)]/40\" />\n            </motion.div>\n          )\n        ))}\n      </AnimatePresence>\n\n      <div className=\"absolute inset-0 flex items-center justify-center\">\n        <div className=\"max-w-4xl mx-auto px-6 text-center text-white\">\n          <motion.h1 \n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8, delay: 0.2 }}\n            className=\"font-display text-5xl md:text-6xl font-medium mb-4\" \n            data-testid=\"text-hero-headline\"\n          >\n            {t('hero.headline')}\n          </motion.h1>\n          <motion.p \n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8, delay: 0.4 }}\n            className=\"text-2xl md:text-3xl mb-3 opacity-90\" \n            data-testid=\"text-hero-subheadline\"\n          >\n            {t('hero.tagline')}\n          </motion.p>\n          <motion.p \n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8, delay: 0.6 }}\n            className=\"text-lg md:text-xl mb-8 opacity-80\" \n            data-testid=\"text-hero-subtext\"\n          >\n            {t('hero.subheadline')}\n          </motion.p>\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8, delay: 0.8 }}\n          >\n            <Button\n              size=\"lg\"\n              className=\"px-8 py-6 text-lg transition-transform hover:scale-105\"\n              onClick={() => setLocation('/book-now')}\n              data-testid=\"button-book-appointment\"\n            >\n              {t('hero.cta')}\n            </Button>\n          </motion.div>\n        </div>\n      </div>\n\n      <div className=\"absolute bottom-8 left-1/2 -translate-x-1/2 flex gap-2\">\n        {slides.map((_, index) => (\n          <motion.button\n            key={index}\n            whileHover={{ scale: 1.2 }}\n            whileTap={{ scale: 0.9 }}\n            onClick={() => setCurrentSlide(index)}\n            className={`h-3 rounded-full transition-all duration-500 ${\n              index === currentSlide ? 'bg-white w-8' : 'bg-white/50 w-3'\n            }`}\n            data-testid={`button-slide-indicator-${index}`}\n            aria-label={`Go to slide ${index + 1}`}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n","size_bytes":4283},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \".5625rem\", /* 9px */\n        md: \".375rem\", /* 6px */\n        sm: \".1875rem\", /* 3px */\n      },\n      colors: {\n        // Flat / base colors (regular buttons)\n        background: \"hsl(var(--background) / <alpha-value>)\",\n        foreground: \"hsl(var(--foreground) / <alpha-value>)\",\n        border: \"hsl(var(--border) / <alpha-value>)\",\n        input: \"hsl(var(--input) / <alpha-value>)\",\n        card: {\n          DEFAULT: \"hsl(var(--card) / <alpha-value>)\",\n          foreground: \"hsl(var(--card-foreground) / <alpha-value>)\",\n          border: \"hsl(var(--card-border) / <alpha-value>)\",\n        },\n        popover: {\n          DEFAULT: \"hsl(var(--popover) / <alpha-value>)\",\n          foreground: \"hsl(var(--popover-foreground) / <alpha-value>)\",\n          border: \"hsl(var(--popover-border) / <alpha-value>)\",\n        },\n        primary: {\n          DEFAULT: \"hsl(var(--primary) / <alpha-value>)\",\n          foreground: \"hsl(var(--primary-foreground) / <alpha-value>)\",\n          border: \"var(--primary-border)\",\n        },\n        secondary: {\n          DEFAULT: \"hsl(var(--secondary) / <alpha-value>)\",\n          foreground: \"hsl(var(--secondary-foreground) / <alpha-value>)\",\n          border: \"var(--secondary-border)\",\n        },\n        muted: {\n          DEFAULT: \"hsl(var(--muted) / <alpha-value>)\",\n          foreground: \"hsl(var(--muted-foreground) / <alpha-value>)\",\n          border: \"var(--muted-border)\",\n        },\n        accent: {\n          DEFAULT: \"hsl(var(--accent) / <alpha-value>)\",\n          foreground: \"hsl(var(--accent-foreground) / <alpha-value>)\",\n          border: \"var(--accent-border)\",\n        },\n        destructive: {\n          DEFAULT: \"hsl(var(--destructive) / <alpha-value>)\",\n          foreground: \"hsl(var(--destructive-foreground) / <alpha-value>)\",\n          border: \"var(--destructive-border)\",\n        },\n        ring: \"hsl(var(--ring) / <alpha-value>)\",\n        chart: {\n          \"1\": \"hsl(var(--chart-1) / <alpha-value>)\",\n          \"2\": \"hsl(var(--chart-2) / <alpha-value>)\",\n          \"3\": \"hsl(var(--chart-3) / <alpha-value>)\",\n          \"4\": \"hsl(var(--chart-4) / <alpha-value>)\",\n          \"5\": \"hsl(var(--chart-5) / <alpha-value>)\",\n        },\n        sidebar: {\n          ring: \"hsl(var(--sidebar-ring) / <alpha-value>)\",\n          DEFAULT: \"hsl(var(--sidebar) / <alpha-value>)\",\n          foreground: \"hsl(var(--sidebar-foreground) / <alpha-value>)\",\n          border: \"hsl(var(--sidebar-border) / <alpha-value>)\",\n        },\n        \"sidebar-primary\": {\n          DEFAULT: \"hsl(var(--sidebar-primary) / <alpha-value>)\",\n          foreground: \"hsl(var(--sidebar-primary-foreground) / <alpha-value>)\",\n          border: \"var(--sidebar-primary-border)\",\n        },\n        \"sidebar-accent\": {\n          DEFAULT: \"hsl(var(--sidebar-accent) / <alpha-value>)\",\n          foreground: \"hsl(var(--sidebar-accent-foreground) / <alpha-value>)\",\n          border: \"var(--sidebar-accent-border)\"\n        },\n        status: {\n          online: \"rgb(34 197 94)\",\n          away: \"rgb(245 158 11)\",\n          busy: \"rgb(239 68 68)\",\n          offline: \"rgb(156 163 175)\",\n        },\n      },\n      fontFamily: {\n        sans: [\"var(--font-sans)\"],\n        serif: [\"var(--font-serif)\"],\n        mono: [\"var(--font-mono)\"],\n        display: [\"var(--font-display)\"],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: { height: \"0\" },\n          to: { height: \"var(--radix-accordion-content-height)\" },\n        },\n        \"accordion-up\": {\n          from: { height: \"var(--radix-accordion-content-height)\" },\n          to: { height: \"0\" },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":4092},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    // h-9 to match icon buttons and default buttons.\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":844},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/examples/Header.tsx":{"content":"import Header from '../Header';\n\nexport default function HeaderExample() {\n  return <Header />;\n}\n","size_bytes":98},"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json({ limit: '10mb' }));\napp.use(express.urlencoded({ extended: false, limit: '10mb' }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2098},"client/src/components/MediaSection.tsx":{"content":"import { motion } from 'framer-motion';\nimport { useInView } from 'framer-motion';\nimport { useRef, useState, useCallback, useEffect } from 'react';\nimport { useLanguage } from '@/contexts/LanguageContext';\nimport { Play, Pause } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport useEmblaCarousel from 'embla-carousel-react';\n\nconst container = {\n  hidden: { opacity: 0 },\n  show: {\n    opacity: 1,\n    transition: {\n      staggerChildren: 0.2\n    }\n  }\n};\n\nconst tiktokVideos = [\n  { id: '7552593633812303122', title: 'Dr. Paws TikTok Video 1' },\n  { id: '7557361343527963911', title: 'Dr. Paws TikTok Video 2' },\n  { id: '7552940508834811143', title: 'Dr. Paws TikTok Video 3' },\n  { id: '7553295576721263879', title: 'Dr. Paws TikTok Video 4' },\n  { id: '7556635120439233810', title: 'Dr. Paws TikTok Video 5' },\n  { id: '7559220822280310024', title: 'Dr. Paws TikTok Video 6' },\n  { id: '7558145357599739144', title: 'Dr. Paws TikTok Video 7' },\n  { id: '7557789738485288210', title: 'Dr. Paws TikTok Video 8' },\n  { id: '7554400143768898834', title: 'Dr. Paws TikTok Video 9' }\n];\n\nexport default function MediaSection() {\n  const ref = useRef(null);\n  const tiktokIframeRefs = useRef<(HTMLIFrameElement | null)[]>([]);\n  const [isPlaying, setIsPlaying] = useState<boolean[]>(tiktokVideos.map(() => false));\n  const [emblaRef, emblaApi] = useEmblaCarousel({ loop: true });\n  const [selectedIndex, setSelectedIndex] = useState(0);\n  const isInView = useInView(ref, { once: false, amount: 0.2 });\n  const { t } = useLanguage();\n\n  const pauseAllVideos = useCallback(() => {\n    tiktokIframeRefs.current.forEach((iframe) => {\n      if (iframe) {\n        iframe.contentWindow?.postMessage({\n          'x-tiktok-player': true,\n          'type': 'pause'\n        }, '*');\n      }\n    });\n    setIsPlaying(tiktokVideos.map(() => false));\n  }, []);\n\n  const onSelect = useCallback(() => {\n    if (!emblaApi) return;\n    const newIndex = emblaApi.selectedScrollSnap();\n    if (newIndex !== selectedIndex) {\n      pauseAllVideos();\n    }\n    setSelectedIndex(newIndex);\n  }, [emblaApi, selectedIndex, pauseAllVideos]);\n\n  useEffect(() => {\n    if (!emblaApi) return;\n    onSelect();\n    emblaApi.on('select', onSelect);\n    return () => {\n      emblaApi.off('select', onSelect);\n    };\n  }, [emblaApi, onSelect]);\n\n  const handlePlayPause = (index: number) => {\n    const iframe = tiktokIframeRefs.current[index];\n    if (iframe) {\n      const newPlayingState = !isPlaying[index];\n      \n      if (newPlayingState) {\n        pauseAllVideos();\n      }\n      \n      const message = {\n        'x-tiktok-player': true,\n        'type': newPlayingState ? 'play' : 'pause'\n      };\n      iframe.contentWindow?.postMessage(message, '*');\n      \n      setIsPlaying(prev => {\n        const newState = [...prev];\n        newState[index] = newPlayingState;\n        return newState;\n      });\n    }\n  };\n\n  return (\n    <section ref={ref} className=\"py-20 bg-[hsl(43,75%,66%)]/5\">\n      <div className=\"max-w-7xl mx-auto px-6\">\n        <motion.div \n          initial={{ opacity: 0, y: 30 }}\n          animate={isInView ? { opacity: 1, y: 0 } : {}}\n          transition={{ duration: 0.6 }}\n          className=\"text-center mb-16\"\n        >\n          <div className=\"flex items-center justify-center gap-4 mb-4\">\n            <lord-icon\n              src=\"https://cdn.lordicon.com/ldyubhgs.json\"\n              trigger=\"loop\"\n              delay=\"1500\"\n              colors=\"primary:#18ac61,secondary:#264653\"\n              style={{width: '90px', height: '90px'}}\n              data-testid=\"icon-media-animated\">\n            </lord-icon>\n            <h2 className=\"font-display text-4xl font-medium text-foreground\" data-testid=\"text-media-headline\">\n              {t('media.headline')}\n            </h2>\n          </div>\n          <p className=\"text-lg text-foreground/80 max-w-3xl mx-auto\" data-testid=\"text-media-description\">\n            {t('media.description')}\n          </p>\n        </motion.div>\n\n        <motion.div \n          variants={container}\n          initial=\"hidden\"\n          animate={isInView ? \"show\" : \"hidden\"}\n          className=\"flex justify-center\"\n        >\n          <div className=\"relative mx-auto w-80\">\n            <div className=\"overflow-hidden rounded-xl cursor-grab active:cursor-grabbing\" ref={emblaRef}>\n              <div className=\"flex\" style={{ touchAction: 'pan-y pinch-zoom' }}>\n                {tiktokVideos.map((video, index) => (\n                  <div key={video.id} className=\"flex-[0_0_100%] min-w-0\">\n                    <div className=\"relative group px-2\">\n                      <div className=\"relative rounded-xl overflow-hidden shadow-lg bg-card border border-border\">\n                        <div className=\"w-full h-[500px] overflow-hidden\">\n                          <iframe\n                            ref={(el) => (tiktokIframeRefs.current[index] = el)}\n                            src={`https://www.tiktok.com/player/v1/${video.id}?controls=1`}\n                            className=\"w-full h-full pointer-events-none\"\n                            frameBorder=\"0\"\n                            scrolling=\"no\"\n                            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                            allowFullScreen\n                            title={video.title}\n                            data-testid={`video-tiktok-${index + 1}`}\n                            style={{ overflow: 'hidden' }}\n                          />\n                        </div>\n                        <div className=\"absolute bottom-4 left-1/2 transform -translate-x-1/2 z-10\">\n                          <Button\n                            size=\"icon\"\n                            variant=\"default\"\n                            onClick={() => handlePlayPause(index)}\n                            className=\"rounded-full shadow-lg pointer-events-auto\"\n                            data-testid={`button-tiktok-play-pause-${index + 1}`}\n                          >\n                            {isPlaying[index] ? <Pause className=\"w-5 h-5\" /> : <Play className=\"w-5 h-5\" />}\n                          </Button>\n                        </div>\n                        <div className=\"absolute inset-0 bg-gradient-to-t from-black/20 to-transparent pointer-events-none opacity-0 group-hover:opacity-100 transition-opacity duration-300\"></div>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            <div className=\"flex justify-center gap-2 mt-4\">\n              {tiktokVideos.map((_, index) => (\n                <button\n                  key={index}\n                  onClick={() => {\n                    pauseAllVideos();\n                    emblaApi?.scrollTo(index);\n                  }}\n                  className={`w-2 h-2 rounded-full transition-all ${\n                    index === selectedIndex\n                      ? 'bg-primary w-6'\n                      : 'bg-primary/30'\n                  }`}\n                  data-testid={`button-carousel-dot-${index + 1}`}\n                />\n              ))}\n            </div>\n          </div>\n        </motion.div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":7292},"client/src/components/ContactSection.tsx":{"content":"import { useState, useRef } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\nimport { useToast } from '@/hooks/use-toast';\nimport { useLanguage } from '@/contexts/LanguageContext';\nimport { motion, useInView } from 'framer-motion';\n\nconst container = {\n  hidden: { opacity: 0 },\n  show: {\n    opacity: 1,\n    transition: {\n      staggerChildren: 0.1\n    }\n  }\n};\n\nconst item = {\n  hidden: { opacity: 0, y: 20 },\n  show: { opacity: 1, y: 0 }\n};\n\nexport default function ContactSection() {\n  const { toast } = useToast();\n  const { t } = useLanguage();\n  const ref = useRef(null);\n  const isInView = useInView(ref, { once: false, amount: 0.2 });\n  const [formData, setFormData] = useState({\n    name: '',\n    phone: '',\n    email: '',\n    message: '',\n  });\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    console.log('Form submitted:', formData);\n    toast({\n      title: t('contact.success'),\n      description: '',\n    });\n    setFormData({ name: '', phone: '', email: '', message: '' });\n  };\n\n  return (\n    <section ref={ref} id=\"contact\" className=\"py-20 bg-[hsl(199,37%,24%)]\">\n      <div className=\"max-w-7xl mx-auto px-6\">\n        <motion.h2 \n          initial={{ opacity: 0, y: 30 }}\n          animate={isInView ? { opacity: 1, y: 0 } : {}}\n          transition={{ duration: 0.6 }}\n          className=\"font-display text-4xl font-medium text-white text-center mb-16\" \n          data-testid=\"text-contact-headline\"\n        >\n          {t('contact.subheadline')}\n        </motion.h2>\n\n        <div className=\"max-w-2xl mx-auto\">\n          <motion.form \n            variants={container}\n            initial=\"hidden\"\n            animate={isInView ? \"show\" : \"hidden\"}\n            onSubmit={handleSubmit} \n            className=\"space-y-6\"\n          >\n            <motion.div variants={item}>\n              <label className=\"block text-white/90 mb-2 font-medium\" htmlFor=\"name\">\n                {t('contact.name')}\n              </label>\n              <Input\n                id=\"name\"\n                type=\"text\"\n                value={formData.name}\n                onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n                className=\"bg-white transition-all focus:scale-[1.01]\"\n                required\n                data-testid=\"input-name\"\n              />\n            </motion.div>\n\n            <motion.div variants={item}>\n              <label className=\"block text-white/90 mb-2 font-medium\" htmlFor=\"phone\">\n                {t('contact.phone')}\n              </label>\n              <Input\n                id=\"phone\"\n                type=\"tel\"\n                value={formData.phone}\n                onChange={(e) => setFormData({ ...formData, phone: e.target.value })}\n                className=\"bg-white transition-all focus:scale-[1.01]\"\n                required\n                data-testid=\"input-phone\"\n              />\n            </motion.div>\n\n            <motion.div variants={item}>\n              <label className=\"block text-white/90 mb-2 font-medium\" htmlFor=\"email\">\n                {t('contact.email')}\n              </label>\n              <Input\n                id=\"email\"\n                type=\"email\"\n                value={formData.email}\n                onChange={(e) => setFormData({ ...formData, email: e.target.value })}\n                className=\"bg-white transition-all focus:scale-[1.01]\"\n                required\n                data-testid=\"input-email\"\n              />\n            </motion.div>\n\n            <motion.div variants={item}>\n              <label className=\"block text-white/90 mb-2 font-medium\" htmlFor=\"message\">\n                {t('contact.message')}\n              </label>\n              <Textarea\n                id=\"message\"\n                value={formData.message}\n                onChange={(e) => setFormData({ ...formData, message: e.target.value })}\n                className=\"bg-white min-h-32 transition-all focus:scale-[1.01]\"\n                required\n                data-testid=\"input-message\"\n              />\n            </motion.div>\n\n            <motion.div \n              variants={item}\n              whileHover={{ scale: 1.02 }}\n              whileTap={{ scale: 0.98 }}\n            >\n              <Button type=\"submit\" size=\"lg\" className=\"w-full\" data-testid=\"button-submit\">\n                {t('contact.submit')}\n              </Button>\n            </motion.div>\n          </motion.form>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":4584},"client/src/components/AboutSection.tsx":{"content":"import { Button } from '@/components/ui/button';\nimport { motion } from 'framer-motion';\nimport { useInView } from 'framer-motion';\nimport { useRef } from 'react';\nimport { useLanguage } from '@/contexts/LanguageContext';\nimport { useLocation } from 'wouter';\nimport teamImage from '@assets/generated_images/Veterinary_team_professional_photo_a4845f6b.png';\n\nexport default function AboutSection() {\n  const ref = useRef(null);\n  const isInView = useInView(ref, { once: false, amount: 0.3 });\n  const { t, language } = useLanguage();\n  const [, setLocation] = useLocation();\n\n  return (\n    <section ref={ref} className=\"py-20 bg-background\">\n      <div className=\"max-w-7xl mx-auto px-6\">\n        <div className=\"grid md:grid-cols-2 gap-12 items-center\">\n          <motion.div\n            initial={{ opacity: 0, x: -50 }}\n            animate={isInView ? { opacity: 1, x: 0 } : {}}\n            transition={{ duration: 0.8 }}\n          >\n            <motion.img\n              whileHover={{ scale: 1.02 }}\n              transition={{ duration: 0.3 }}\n              src={teamImage}\n              alt=\"Dr. Paws veterinary team\"\n              className=\"rounded-xl w-full h-auto object-cover shadow-md\"\n              data-testid=\"img-about-team\"\n            />\n          </motion.div>\n          <motion.div\n            initial={{ opacity: 0, x: 50 }}\n            animate={isInView ? { opacity: 1, x: 0 } : {}}\n            transition={{ duration: 0.8, delay: 0.2 }}\n          >\n            <h2 className=\"font-display text-4xl font-medium text-foreground mb-6\" data-testid=\"text-about-headline\">\n              {language === 'ar' ? (\n                <>\n                  {t('about.headline').split(':')[0]}:\n                  <br />\n                  {t('about.headline').split(':')[1]}\n                </>\n              ) : (\n                <>\n                  Committed to Your Pet's <span className=\"whitespace-nowrap\">Well-being,</span>\n                  <br />\n                  Every Step of the Way\n                </>\n              )}\n            </h2>\n            <p className=\"text-lg text-foreground/80 leading-relaxed mb-8\" data-testid=\"text-about-paragraph\">\n              {t('about.description')}\n            </p>\n            <motion.div\n              whileHover={{ scale: 1.05 }}\n              whileTap={{ scale: 0.95 }}\n            >\n              <Button \n                variant=\"outline\" \n                size=\"lg\" \n                onClick={() => setLocation('/about')}\n                data-testid=\"button-read-more-about\"\n              >\n                {t('about.readMore')}\n              </Button>\n            </motion.div>\n          </motion.div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":2715},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/AdminSidebar.tsx":{"content":"import { useState, useEffect } from 'react';\nimport { Home, ChevronDown, Package, MessageSquare, FileText, Users, Handshake } from 'lucide-react';\nimport { Link, useLocation } from 'wouter';\nimport {\n  Sidebar,\n  SidebarContent,\n  SidebarGroup,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarMenu,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSub,\n  SidebarMenuSubItem,\n  SidebarMenuSubButton,\n} from '@/components/ui/sidebar';\nimport { Collapsible, CollapsibleContent, CollapsibleTrigger } from '@/components/ui/collapsible';\n\nconst dropdownItems = [\n  {\n    title: 'Service Packages',\n    url: '/admin/service-packages',\n    icon: Package,\n  },\n  {\n    title: 'Customers Reviews',\n    url: '/admin/customers-reviews',\n    icon: MessageSquare,\n  }\n];\n\nexport function AdminSidebar() {\n  const [location] = useLocation();\n  const [homePageOpen, setHomePageOpen] = useState(false);\n  const [aboutPageOpen, setAboutPageOpen] = useState(false);\n\n  useEffect(() => {\n    if (location === '/admin/service-packages' || location === '/admin/customers-reviews') {\n      setHomePageOpen(true);\n    }\n    if (location === '/admin/about/our-doctors' || location === '/admin/about/our-partners') {\n      setAboutPageOpen(true);\n    }\n  }, [location]);\n\n  return (\n    <Sidebar>\n      <SidebarContent className=\"bg-[#264653]\">\n        <SidebarGroup>\n          <SidebarGroupLabel className=\"text-white/80\">Admin Menu</SidebarGroupLabel>\n          <SidebarGroupContent>\n            <SidebarMenu>\n              <Collapsible open={homePageOpen} onOpenChange={setHomePageOpen} className=\"group/collapsible\">\n                <SidebarMenuItem>\n                  <CollapsibleTrigger asChild>\n                    <SidebarMenuButton className=\"text-white/90 hover:bg-[#18ac61] hover:text-white\" data-testid=\"button-dropdown-home\">\n                      <Home />\n                      <span>Home Page</span>\n                      <ChevronDown className=\"ml-auto transition-transform group-data-[state=open]/collapsible:rotate-180\" />\n                    </SidebarMenuButton>\n                  </CollapsibleTrigger>\n                  <CollapsibleContent>\n                    <SidebarMenuSub>\n                      <div className=\"px-3 py-1.5 text-xs font-medium text-white/60\">Management</div>\n                      {dropdownItems.map((subItem) => (\n                        <SidebarMenuSubItem key={subItem.title}>\n                          <SidebarMenuSubButton\n                            asChild\n                            className={`${\n                              location === subItem.url\n                                ? 'bg-yellow-400 text-gray-900'\n                                : 'text-white/80 hover:bg-[#18ac61] hover:text-white'\n                            }`}\n                            data-testid={`link-admin-${subItem.title.toLowerCase().replace(/\\s+/g, '-')}`}\n                          >\n                            <Link to={subItem.url}>\n                              <subItem.icon className=\"w-4 h-4\" />\n                              <span>{subItem.title}</span>\n                            </Link>\n                          </SidebarMenuSubButton>\n                        </SidebarMenuSubItem>\n                      ))}\n                    </SidebarMenuSub>\n                  </CollapsibleContent>\n                </SidebarMenuItem>\n              </Collapsible>\n\n              <Collapsible open={aboutPageOpen} onOpenChange={setAboutPageOpen} className=\"group/collapsible\">\n                <SidebarMenuItem>\n                  <CollapsibleTrigger asChild>\n                    <SidebarMenuButton className=\"text-white/90 hover:bg-[#18ac61] hover:text-white\" data-testid=\"button-dropdown-about\">\n                      <FileText />\n                      <span>About Page</span>\n                      <ChevronDown className=\"ml-auto transition-transform group-data-[state=open]/collapsible:rotate-180\" />\n                    </SidebarMenuButton>\n                  </CollapsibleTrigger>\n                  <CollapsibleContent>\n                    <SidebarMenuSub>\n                      <div className=\"px-3 py-1.5 text-xs font-medium text-white/60\">Management</div>\n                      <SidebarMenuSubItem>\n                        <SidebarMenuSubButton\n                          asChild\n                          className={`${\n                            location === '/admin/about/our-doctors'\n                              ? 'bg-yellow-400 text-gray-900'\n                              : 'text-white/80 hover:bg-[#18ac61] hover:text-white'\n                          }`}\n                          data-testid=\"link-admin-our-doctors\"\n                        >\n                          <Link to=\"/admin/about/our-doctors\">\n                            <Users className=\"w-4 h-4\" />\n                            <span>Our Doctors</span>\n                          </Link>\n                        </SidebarMenuSubButton>\n                      </SidebarMenuSubItem>\n                      <SidebarMenuSubItem>\n                        <SidebarMenuSubButton\n                          asChild\n                          className={`${\n                            location === '/admin/about/our-partners'\n                              ? 'bg-yellow-400 text-gray-900'\n                              : 'text-white/80 hover:bg-[#18ac61] hover:text-white'\n                          }`}\n                          data-testid=\"link-admin-our-partners\"\n                        >\n                          <Link to=\"/admin/about/our-partners\">\n                            <Handshake className=\"w-4 h-4\" />\n                            <span>Our Partners</span>\n                          </Link>\n                        </SidebarMenuSubButton>\n                      </SidebarMenuSubItem>\n                    </SidebarMenuSub>\n                  </CollapsibleContent>\n                </SidebarMenuItem>\n              </Collapsible>\n            </SidebarMenu>\n          </SidebarGroupContent>\n        </SidebarGroup>\n      </SidebarContent>\n    </Sidebar>\n  );\n}\n","size_bytes":6052},"client/src/pages/AdminDashboard.tsx":{"content":"import { useEffect } from 'react';\nimport { useLocation } from 'wouter';\nimport { SidebarProvider, SidebarTrigger } from '@/components/ui/sidebar';\nimport { AdminSidebar } from '@/components/AdminSidebar';\nimport ECGAnimation from '@/components/ECGAnimation';\n\nexport default function AdminDashboard() {\n  const [, setLocation] = useLocation();\n\n  useEffect(() => {\n    const isAuthenticated = localStorage.getItem('adminAuthenticated') === 'true';\n    if (!isAuthenticated) {\n      setLocation('/login-admin');\n    }\n  }, [setLocation]);\n\n  const style = {\n    '--sidebar-width': '16rem',\n    '--sidebar-width-icon': '3rem',\n  };\n\n  return (\n    <SidebarProvider style={style as React.CSSProperties}>\n      <div className=\"flex h-screen w-full\">\n        <AdminSidebar />\n        <div className=\"flex flex-col flex-1\">\n          <header className=\"flex items-center gap-4 p-4 border-b bg-[#264653]\">\n            <SidebarTrigger className=\"text-white\" data-testid=\"button-sidebar-toggle\" />\n            <h1 className=\"text-xl font-display text-white\" data-testid=\"text-dashboard-title\">\n              Admin Dashboard\n            </h1>\n          </header>\n          <ECGAnimation />\n          <main className=\"flex-1 overflow-auto p-6 bg-background\">\n            <div className=\"max-w-7xl mx-auto\">\n              <h2 className=\"text-2xl font-display mb-4\" data-testid=\"text-welcome\">\n                Welcome to Admin Dashboard\n              </h2>\n              <p className=\"text-muted-foreground\" data-testid=\"text-dashboard-description\">\n                Use the sidebar to navigate through the admin panel.\n              </p>\n            </div>\n          </main>\n        </div>\n      </div>\n    </SidebarProvider>\n  );\n}\n","size_bytes":1721},"client/src/pages/LoginAdmin.tsx":{"content":"import { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from '@/components/ui/form';\nimport { useLocation } from 'wouter';\nimport { useToast } from '@/hooks/use-toast';\nimport { Lock } from 'lucide-react';\nimport ECGAnimation from '@/components/ECGAnimation';\n\nconst loginSchema = z.object({\n  username: z.string().min(1, 'Username is required'),\n  password: z.string().min(1, 'Password is required')\n});\n\ntype LoginFormData = z.infer<typeof loginSchema>;\n\nexport default function LoginAdmin() {\n  const [, setLocation] = useLocation();\n  const { toast } = useToast();\n\n  const form = useForm<LoginFormData>({\n    resolver: zodResolver(loginSchema),\n    defaultValues: {\n      username: '',\n      password: ''\n    }\n  });\n\n  const onSubmit = (data: LoginFormData) => {\n    if (data.username === 'admin' && data.password === 'admin123') {\n      localStorage.setItem('adminAuthenticated', 'true');\n      toast({\n        title: 'Login Successful',\n        description: 'Welcome to Admin Dashboard',\n      });\n      setLocation('/admin-dashboard');\n    } else {\n      toast({\n        title: 'Login Failed',\n        description: 'Invalid username or password',\n        variant: 'destructive',\n      });\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen\">\n      <ECGAnimation />\n      <div className=\"flex items-center justify-center bg-gradient-to-br from-[#264653] to-[#18ac61] p-4 min-h-[calc(100vh-5rem)]\">\n        <Card className=\"w-full max-w-md\">\n          <CardHeader className=\"space-y-1\">\n            <div className=\"flex items-center justify-center mb-4\">\n              <div className=\"rounded-full bg-primary/10 p-3\">\n                <Lock className=\"w-8 h-8 text-primary\" />\n              </div>\n            </div>\n            <CardTitle className=\"text-2xl font-display text-center\" data-testid=\"text-login-title\">\n              Admin Login\n            </CardTitle>\n            <CardDescription className=\"text-center\" data-testid=\"text-login-description\">\n              Enter your credentials to access the dashboard\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <Form {...form}>\n              <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n                <FormField\n                  control={form.control}\n                  name=\"username\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Username</FormLabel>\n                      <FormControl>\n                        <Input\n                          placeholder=\"Enter username\"\n                          {...field}\n                          data-testid=\"input-username\"\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n                <FormField\n                  control={form.control}\n                  name=\"password\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Password</FormLabel>\n                      <FormControl>\n                        <Input\n                          type=\"password\"\n                          placeholder=\"Enter password\"\n                          {...field}\n                          data-testid=\"input-password\"\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n                <Button\n                  type=\"submit\"\n                  className=\"w-full\"\n                  disabled={form.formState.isSubmitting}\n                  data-testid=\"button-login\"\n                >\n                  Sign In\n                </Button>\n              </form>\n            </Form>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}\n","size_bytes":4214},"client/src/pages/AdminServicePackages.tsx":{"content":"import { useState } from \"react\";\nimport { z } from \"zod\";\nimport { Pencil, Trash2 } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { insertServicePackageSchema, type ServicePackage } from \"@shared/schema\";\nimport { AdminManagement } from \"@/components/AdminManagement\";\nimport { UseFormReturn } from \"react-hook-form\";\n\nconst formSchema = insertServicePackageSchema.extend({\n  features: z.string().min(1, \"At least one feature is required\"),\n  featuresAr: z.string().optional(),\n});\n\ntype FormData = z.infer<typeof formSchema>;\n\nexport default function AdminServicePackages() {\n  const [featuresState, setFeaturesState] = useState<{\n    features: string;\n    featuresAr: string;\n  }>({ features: \"\", featuresAr: \"\" });\n\n  return (\n    <AdminManagement\n      entityName=\"Package\"\n      entityNamePlural=\"Service Packages\"\n      apiEndpoint=\"/api/service-packages\"\n      formSchema={formSchema}\n      defaultValues={{\n        name: \"\",\n        nameAr: \"\",\n        price: \"\",\n        period: \"\",\n        periodAr: \"\",\n        popular: false,\n        features: \"\",\n        featuresAr: \"\",\n      }}\n      description=\"Manage service packages that appear on the website\"\n      transformDataForSubmit={(data) => {\n        const featuresArray = data.features.split(\"\\n\").filter((f: string) => f.trim());\n        const featuresArArray = data.featuresAr ? data.featuresAr.split(\"\\n\").filter((f: string) => f.trim()) : [];\n        return {\n          ...data,\n          features: featuresArray,\n          featuresAr: featuresArArray.length > 0 ? featuresArArray : null,\n        };\n      }}\n      transformDataForEdit={(pkg) => {\n        const featuresText = pkg.features.join(\"\\n\");\n        const featuresArText = pkg.featuresAr ? pkg.featuresAr.join(\"\\n\") : \"\";\n        setFeaturesState({ features: featuresText, featuresAr: featuresArText });\n        return {\n          name: pkg.name,\n          nameAr: pkg.nameAr || \"\",\n          price: pkg.price,\n          period: pkg.period,\n          periodAr: pkg.periodAr || \"\",\n          popular: pkg.popular,\n          features: featuresText,\n          featuresAr: featuresArText,\n        };\n      }}\n      customState={featuresState}\n      onCustomStateChange={(state) => setFeaturesState(state || { features: \"\", featuresAr: \"\" })}\n      renderFormFields={(form: UseFormReturn<FormData>, editingId, customState) => (\n        <>\n          <FormField\n            control={form.control}\n            name=\"name\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Package Name (English)</FormLabel>\n                <FormControl>\n                  <Input\n                    placeholder=\"e.g., Basic Care\"\n                    data-testid=\"input-package-name\"\n                    {...field}\n                  />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n\n          <FormField\n            control={form.control}\n            name=\"nameAr\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Package Name (Arabic)</FormLabel>\n                <FormControl>\n                  <Input\n                    placeholder=\"e.g., الرعاية الأساسية\"\n                    data-testid=\"input-package-name-ar\"\n                    {...field}\n                    value={field.value || \"\"}\n                  />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n\n          <div className=\"grid grid-cols-2 gap-4\">\n            <FormField\n              control={form.control}\n              name=\"price\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Price</FormLabel>\n                  <FormControl>\n                    <Input\n                      placeholder=\"e.g., 100 SAR\"\n                      data-testid=\"input-package-price\"\n                      {...field}\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={form.control}\n              name=\"period\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Period (English)</FormLabel>\n                  <FormControl>\n                    <Input\n                      placeholder=\"e.g., /month\"\n                      data-testid=\"input-package-period\"\n                      {...field}\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n          </div>\n\n          <FormField\n            control={form.control}\n            name=\"periodAr\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Period (Arabic)</FormLabel>\n                <FormControl>\n                  <Input\n                    placeholder=\"e.g., /شهرياً\"\n                    data-testid=\"input-package-period-ar\"\n                    {...field}\n                    value={field.value || \"\"}\n                  />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n\n          <FormField\n            control={form.control}\n            name=\"features\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Features (English - one per line)</FormLabel>\n                <FormControl>\n                  <textarea\n                    className=\"flex min-h-[120px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\"\n                    placeholder=\"Feature 1&#10;Feature 2&#10;Feature 3\"\n                    data-testid=\"input-package-features\"\n                    value={customState?.features || \"\"}\n                    onChange={(e) => {\n                      setFeaturesState(prev => ({ ...prev, features: e.target.value }));\n                      field.onChange(e.target.value);\n                    }}\n                  />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n\n          <FormField\n            control={form.control}\n            name=\"featuresAr\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Features (Arabic - one per line)</FormLabel>\n                <FormControl>\n                  <textarea\n                    className=\"flex min-h-[120px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\"\n                    placeholder=\"ميزة 1&#10;ميزة 2&#10;ميزة 3\"\n                    data-testid=\"input-package-features-ar\"\n                    value={customState?.featuresAr || \"\"}\n                    onChange={(e) => {\n                      setFeaturesState(prev => ({ ...prev, featuresAr: e.target.value }));\n                      field.onChange(e.target.value);\n                    }}\n                  />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n\n          <FormField\n            control={form.control}\n            name=\"popular\"\n            render={({ field }) => (\n              <FormItem className=\"flex flex-row items-start space-x-3 space-y-0\">\n                <FormControl>\n                  <Checkbox\n                    checked={field.value}\n                    onCheckedChange={field.onChange}\n                    data-testid=\"checkbox-package-popular\"\n                  />\n                </FormControl>\n                <div className=\"space-y-1 leading-none\">\n                  <FormLabel>Mark as popular</FormLabel>\n                </div>\n              </FormItem>\n            )}\n          />\n        </>\n      )}\n      renderTableColumns={() => [\n        { header: \"Package\", width: \"60%\" },\n        { header: \"Actions\", width: \"40%\" },\n      ]}\n      renderTableRow={(pkg, onEdit, onDelete) => (\n        <tr key={pkg.id} className=\"border-b\" data-testid={`package-item-${pkg.id}`}>\n          <td className=\"py-3 px-2\">\n            <div className=\"flex items-center gap-2\">\n              <h3 className=\"font-semibold text-foreground\">{pkg.name}</h3>\n              {pkg.popular && (\n                <span className=\"text-xs bg-primary/10 text-primary px-2 py-0.5 rounded-full\">\n                  Popular\n                </span>\n              )}\n            </div>\n            <p className=\"text-sm text-muted-foreground mt-1\">\n              {pkg.price} {pkg.period}\n            </p>\n            <ul className=\"mt-2 space-y-1\">\n              {pkg.features.slice(0, 2).map((feature: string, idx: number) => (\n                <li key={idx} className=\"text-xs text-muted-foreground\">\n                  • {feature}\n                </li>\n              ))}\n              {pkg.features.length > 2 && (\n                <li className=\"text-xs text-muted-foreground\">\n                  +{pkg.features.length - 2} more\n                </li>\n              )}\n            </ul>\n          </td>\n          <td className=\"py-3 px-2\">\n            <div className=\"flex gap-2\">\n              <Button\n                size=\"icon\"\n                variant=\"outline\"\n                onClick={() => onEdit(pkg)}\n                data-testid={`button-edit-${pkg.id}`}\n              >\n                <Pencil className=\"w-4 h-4\" />\n              </Button>\n              <Button\n                size=\"icon\"\n                variant=\"outline\"\n                onClick={() => onDelete(pkg.id)}\n                data-testid={`button-delete-${pkg.id}`}\n              >\n                <Trash2 className=\"w-4 h-4\" />\n              </Button>\n            </div>\n          </td>\n        </tr>\n      )}\n    />\n  );\n}\n","size_bytes":10418},"server/db-storage.ts":{"content":"import { db } from \"./db\";\nimport { users, servicePackages, customerReviews, partners, openingDiscount, type User, type InsertUser, type ServicePackage, type InsertServicePackage, type CustomerReview, type InsertCustomerReview, type Partner, type InsertPartner, type OpeningDiscount, type InsertOpeningDiscount } from \"@shared/schema\";\nimport { eq } from \"drizzle-orm\";\nimport { IStorage } from \"./storage\";\n\nexport class DbStorage implements IStorage {\n  async getUser(id: string): Promise<User | undefined> {\n    const result = await db.select().from(users).where(eq(users.id, id));\n    return result[0];\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    const result = await db.select().from(users).where(eq(users.username, username));\n    return result[0];\n  }\n\n  async createUser(user: InsertUser): Promise<User> {\n    const result = await db.insert(users).values(user).returning();\n    return result[0];\n  }\n\n  async getAllServicePackages(): Promise<ServicePackage[]> {\n    return await db.select().from(servicePackages);\n  }\n\n  async getServicePackage(id: number): Promise<ServicePackage | undefined> {\n    const result = await db.select().from(servicePackages).where(eq(servicePackages.id, id));\n    return result[0];\n  }\n\n  async createServicePackage(pkg: InsertServicePackage): Promise<ServicePackage> {\n    const result = await db.insert(servicePackages).values(pkg).returning();\n    return result[0];\n  }\n\n  async updateServicePackage(id: number, pkg: Partial<InsertServicePackage>): Promise<ServicePackage | undefined> {\n    const result = await db.update(servicePackages)\n      .set(pkg)\n      .where(eq(servicePackages.id, id))\n      .returning();\n    return result[0];\n  }\n\n  async deleteServicePackage(id: number): Promise<boolean> {\n    const result = await db.delete(servicePackages).where(eq(servicePackages.id, id)).returning();\n    return result.length > 0;\n  }\n\n  async getAllCustomerReviews(): Promise<CustomerReview[]> {\n    return await db.select().from(customerReviews);\n  }\n\n  async getCustomerReview(id: number): Promise<CustomerReview | undefined> {\n    const result = await db.select().from(customerReviews).where(eq(customerReviews.id, id));\n    return result[0];\n  }\n\n  async createCustomerReview(review: InsertCustomerReview): Promise<CustomerReview> {\n    const result = await db.insert(customerReviews).values(review).returning();\n    return result[0];\n  }\n\n  async updateCustomerReview(id: number, review: Partial<InsertCustomerReview>): Promise<CustomerReview | undefined> {\n    const result = await db.update(customerReviews)\n      .set(review)\n      .where(eq(customerReviews.id, id))\n      .returning();\n    return result[0];\n  }\n\n  async deleteCustomerReview(id: number): Promise<boolean> {\n    const result = await db.delete(customerReviews).where(eq(customerReviews.id, id)).returning();\n    return result.length > 0;\n  }\n\n  async getAllPartners(): Promise<Partner[]> {\n    return await db.select().from(partners);\n  }\n\n  async getPartner(id: number): Promise<Partner | undefined> {\n    const result = await db.select().from(partners).where(eq(partners.id, id));\n    return result[0];\n  }\n\n  async createPartner(partner: InsertPartner): Promise<Partner> {\n    const result = await db.insert(partners).values(partner).returning();\n    return result[0];\n  }\n\n  async updatePartner(id: number, partner: Partial<InsertPartner>): Promise<Partner | undefined> {\n    const result = await db.update(partners)\n      .set(partner)\n      .where(eq(partners.id, id))\n      .returning();\n    return result[0];\n  }\n\n  async deletePartner(id: number): Promise<boolean> {\n    const result = await db.delete(partners).where(eq(partners.id, id)).returning();\n    return result.length > 0;\n  }\n\n  async createOpeningDiscount(discount: InsertOpeningDiscount): Promise<OpeningDiscount> {\n    const result = await db.insert(openingDiscount).values(discount).returning();\n    return result[0];\n  }\n\n  async checkPhoneNumberExists(phoneNumber: string): Promise<boolean> {\n    const result = await db.select().from(openingDiscount).where(eq(openingDiscount.phoneNumber, phoneNumber));\n    return result.length > 0;\n  }\n\n  async checkEmailExists(email: string): Promise<boolean> {\n    const result = await db.select().from(openingDiscount).where(eq(openingDiscount.emailAddress, email));\n    return result.length > 0;\n  }\n}\n\nexport const storage = new DbStorage();\n","size_bytes":4415},"server/db.ts":{"content":"import { drizzle } from \"drizzle-orm/node-postgres\";\nimport { Pool } from \"pg\";\nimport * as schema from \"@shared/schema\";\n\n// Use NEON_DATABASE_URL if available, otherwise fall back to DATABASE_URL\nconst connectionString = process.env.NEON_DATABASE_URL || process.env.DATABASE_URL;\n\nif (!connectionString) {\n  throw new Error(\"NEON_DATABASE_URL or DATABASE_URL must be set\");\n}\n\n// Create a PostgreSQL connection pool with SSL for Neon\nconst pool = new Pool({\n  connectionString,\n  ssl: {\n    rejectUnauthorized: false\n  }\n});\n\nexport const db = drizzle(pool, { schema });\n","size_bytes":573},"client/src/components/CustomerReviewsDisplay.tsx":{"content":"import { useRef } from 'react';\nimport { useQuery } from '@tanstack/react-query';\nimport { motion } from 'framer-motion';\nimport { useInView } from 'framer-motion';\nimport { Star, Pencil, Trash2 } from 'lucide-react';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { useLanguage } from '@/contexts/LanguageContext';\nimport { type CustomerReview } from '@shared/schema';\n\nconst container = {\n  hidden: { opacity: 0 },\n  show: {\n    opacity: 1,\n    transition: {\n      staggerChildren: 0.1\n    }\n  }\n};\n\nconst item = {\n  hidden: { opacity: 0, y: 20 },\n  show: { opacity: 1, y: 0 }\n};\n\ninterface CustomerReviewsDisplayProps {\n  showHeader?: boolean;\n  className?: string;\n  asSection?: boolean;\n  onEdit?: (review: CustomerReview) => void;\n  onDelete?: (id: number) => void;\n  showActions?: boolean;\n}\n\nexport default function CustomerReviewsDisplay({\n  showHeader = true,\n  className = \"\",\n  asSection = true,\n  onEdit,\n  onDelete,\n  showActions = false\n}: CustomerReviewsDisplayProps) {\n  const ref = useRef(null);\n  const isInView = useInView(ref, { once: false, amount: 0.2 });\n  const { t, language } = useLanguage();\n\n  const { data: reviews = [], isLoading } = useQuery<CustomerReview[]>({\n    queryKey: [\"/api/customer-reviews\"],\n  });\n\n  const WrapperComponent = asSection ? 'section' : 'div';\n  const wrapperClassName = asSection ? `py-20 bg-card ${className}` : className;\n\n  return (\n    <WrapperComponent ref={ref} className={wrapperClassName}>\n      <div className=\"max-w-7xl mx-auto px-6\">\n        {showHeader && (\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            animate={isInView ? { opacity: 1, y: 0 } : {}}\n            transition={{ duration: 0.6 }}\n            className=\"text-center mb-16\"\n          >\n            <h2 className=\"font-display text-4xl font-medium text-foreground mb-4\" data-testid=\"text-reviews-headline\">\n              {t('reviews.headline')}\n            </h2>\n            <p className=\"text-lg text-foreground/80 max-w-3xl mx-auto\">\n              Customer testimonials and feedback\n            </p>\n          </motion.div>\n        )}\n\n        {isLoading ? (\n          <div className=\"text-center py-12\">\n            <p className=\"text-foreground/60\" data-testid=\"text-loading-reviews\">Loading reviews...</p>\n          </div>\n        ) : reviews.length === 0 ? (\n          <div className=\"text-center py-12\">\n            <p className=\"text-foreground/60\" data-testid=\"text-no-reviews\">No customer reviews yet.</p>\n          </div>\n        ) : (\n          <motion.div\n            variants={container}\n            initial=\"hidden\"\n            animate={isInView ? \"show\" : \"hidden\"}\n            className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6\"\n          >\n            {reviews.map((review) => (\n              <motion.div key={review.id} variants={item}>\n                <Card className=\"h-full hover-elevate\" data-testid={`card-review-${review.id}`}>\n                  <CardContent className=\"pt-6\">\n                    <div className=\"flex justify-between items-start gap-3 mb-4\">\n                      <div className={`flex-1 ${language === 'ar' ? 'text-right' : 'text-left'}`}>\n                        <h3 className=\"font-semibold text-lg text-foreground\" data-testid={`text-name-${review.id}`}>\n                          {language === 'ar' && review.nameAr ? review.nameAr : review.name}\n                        </h3>\n                        <div className={`flex gap-1 mt-1 ${language === 'ar' ? 'flex-row-reverse' : ''}`} data-testid={`rating-${review.id}`}>\n                          {Array.from({ length: 5 }).map((_, i) => (\n                            <Star\n                              key={i}\n                              className={`w-4 h-4 ${\n                                i < review.rating\n                                  ? \"fill-[#e9c46a] text-[#e9c46a]\"\n                                  : \"fill-muted text-muted\"\n                              }`}\n                            />\n                          ))}\n                        </div>\n                      </div>\n                      {showActions && onEdit && onDelete && (\n                        <div className=\"flex gap-2\">\n                          <Button\n                            variant=\"outline\"\n                            size=\"sm\"\n                            onClick={() => onEdit(review)}\n                            data-testid={`button-edit-${review.id}`}\n                          >\n                            <Pencil className=\"w-4 h-4\" />\n                          </Button>\n                          <Button\n                            variant=\"destructive\"\n                            size=\"sm\"\n                            onClick={() => onDelete(review.id)}\n                            data-testid={`button-delete-${review.id}`}\n                          >\n                            <Trash2 className=\"w-4 h-4\" />\n                          </Button>\n                        </div>\n                      )}\n                    </div>\n                    <p className={`text-foreground/80 ${language === 'ar' ? 'text-right' : 'text-left'}`} data-testid={`text-message-${review.id}`}>\n                      {review.message}\n                    </p>\n                  </CardContent>\n                </Card>\n              </motion.div>\n            ))}\n          </motion.div>\n        )}\n      </div>\n    </WrapperComponent>\n  );\n}\n","size_bytes":5464},"client/src/pages/AdminOurPartners.tsx":{"content":"import { useState, useRef } from \"react\";\nimport { Pencil, Trash2, Upload, Check, X } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { insertPartnerSchema, type Partner } from \"@shared/schema\";\nimport { AdminManagement } from \"@/components/AdminManagement\";\nimport { UseFormReturn } from \"react-hook-form\";\nimport { z } from \"zod\";\n\nconst formSchema = insertPartnerSchema;\ntype FormData = z.infer<typeof formSchema>;\n\nexport default function AdminOurPartners() {\n  const { toast } = useToast();\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const [currentForm, setCurrentForm] = useState<UseFormReturn<FormData> | null>(null);\n\n  const handleFileSelect = (event: React.ChangeEvent<HTMLInputElement>, form: UseFormReturn<FormData>) => {\n    const file = event.target.files?.[0];\n    if (!file) return;\n\n    if (!file.type.startsWith('image/')) {\n      toast({\n        title: \"Error\",\n        description: \"Please select an image file\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    if (file.size > 500 * 1024) {\n      toast({\n        title: \"Error\",\n        description: \"Image size must be less than 500KB\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      const base64String = reader.result as string;\n      form.setValue(\"logoUrl\", base64String);\n      toast({\n        title: \"Success\",\n        description: \"Logo uploaded successfully\",\n      });\n    };\n    reader.onerror = () => {\n      toast({\n        title: \"Error\",\n        description: \"Failed to read image file\",\n        variant: \"destructive\",\n      });\n    };\n    reader.readAsDataURL(file);\n  };\n\n  return (\n    <AdminManagement\n      entityName=\"Partner\"\n      entityNamePlural=\"Our Partners\"\n      apiEndpoint=\"/api/partners\"\n      formSchema={formSchema}\n      defaultValues={{\n        name: \"\",\n        nameAr: \"\",\n        logoUrl: \"\",\n      }}\n      description=\"Manage partners that appear on the About page\"\n      customState={(form: UseFormReturn<FormData>) => {\n        setCurrentForm(form);\n      }}\n      renderFormFields={(form: UseFormReturn<FormData>) => (\n        <>\n          <div className=\"grid md:grid-cols-2 gap-4\">\n            <FormField\n              control={form.control}\n              name=\"name\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Partner Name (English)</FormLabel>\n                  <FormControl>\n                    <Input {...field} placeholder=\"Enter partner name\" data-testid=\"input-name\" />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            <FormField\n              control={form.control}\n              name=\"nameAr\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Partner Name (Arabic)</FormLabel>\n                  <FormControl>\n                    <Input {...field} value={field.value || \"\"} placeholder=\"أدخل اسم الشريك\" data-testid=\"input-name-ar\" />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n          </div>\n          <FormField\n            control={form.control}\n            name=\"logoUrl\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Partner Logo</FormLabel>\n                <div className=\"space-y-4\">\n                  {field.value ? (\n                    <div className=\"flex items-center gap-4\">\n                      <img\n                        src={field.value}\n                        alt=\"Partner logo preview\"\n                        className=\"w-32 h-32 object-contain bg-white rounded border p-2\"\n                        data-testid=\"img-logo-preview\"\n                      />\n                      <div className=\"flex flex-col gap-2\">\n                        <div className=\"flex items-center gap-2 text-sm text-muted-foreground\">\n                          <Check className=\"w-4 h-4 text-green-600\" />\n                          Logo uploaded and ready\n                        </div>\n                        <Button\n                          type=\"button\"\n                          variant=\"outline\"\n                          size=\"sm\"\n                          onClick={() => {\n                            form.setValue(\"logoUrl\", \"\");\n                            if (fileInputRef.current) {\n                              fileInputRef.current.value = \"\";\n                            }\n                          }}\n                          data-testid=\"button-remove-logo\"\n                        >\n                          <X className=\"w-4 h-4 mr-2\" />\n                          Remove Logo\n                        </Button>\n                      </div>\n                    </div>\n                  ) : (\n                    <div className=\"flex items-center gap-4\">\n                      <div className=\"w-32 h-32 bg-muted rounded flex items-center justify-center border-2 border-dashed\">\n                        <Upload className=\"w-12 h-12 text-muted-foreground\" />\n                      </div>\n                      <p className=\"text-sm text-muted-foreground\">No logo uploaded yet</p>\n                    </div>\n                  )}\n                  <div>\n                    <input\n                      ref={fileInputRef}\n                      type=\"file\"\n                      accept=\"image/*\"\n                      onChange={(e) => handleFileSelect(e, form)}\n                      className=\"hidden\"\n                      data-testid=\"input-logo-file\"\n                    />\n                    <Button\n                      type=\"button\"\n                      variant={field.value ? \"outline\" : \"default\"}\n                      onClick={() => fileInputRef.current?.click()}\n                      data-testid=\"button-upload-logo\"\n                    >\n                      <Upload className=\"w-4 h-4 mr-2\" />\n                      {field.value ? \"Change Logo\" : \"Upload Logo\"}\n                    </Button>\n                    <p className=\"text-xs text-muted-foreground mt-2\">\n                      Supported formats: PNG, JPG, JPEG. Max size: 500KB\n                    </p>\n                  </div>\n                </div>\n                <FormControl>\n                  <Input {...field} value={field.value || \"\"} type=\"hidden\" />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n        </>\n      )}\n      renderTableColumns={() => [\n        { header: \"Partner\", width: \"60%\" },\n        { header: \"Actions\", width: \"40%\" },\n      ]}\n      renderTableRow={(partner, onEdit, onDelete) => (\n        <tr key={partner.id} className=\"border-b\" data-testid={`partner-row-${partner.id}`}>\n          <td className=\"py-3 px-2\">\n            <div className=\"flex items-center gap-4\">\n              {partner.logoUrl ? (\n                <img\n                  src={partner.logoUrl}\n                  alt={partner.name}\n                  className=\"w-16 h-16 object-contain bg-white rounded p-1 border\"\n                  data-testid={`img-partner-logo-${partner.id}`}\n                />\n              ) : (\n                <div className=\"w-16 h-16 bg-muted rounded flex items-center justify-center border\" data-testid={`placeholder-logo-${partner.id}`}>\n                  <Upload className=\"w-8 h-8 text-muted-foreground\" />\n                </div>\n              )}\n              <div>\n                <h3 className=\"font-semibold\" data-testid={`text-partner-name-${partner.id}`}>{partner.name}</h3>\n                {partner.nameAr && (\n                  <p className=\"text-sm text-muted-foreground\" data-testid={`text-partner-name-ar-${partner.id}`}>{partner.nameAr}</p>\n                )}\n              </div>\n            </div>\n          </td>\n          <td className=\"py-3 px-2\">\n            <div className=\"flex gap-2\">\n              <Button\n                size=\"icon\"\n                variant=\"outline\"\n                onClick={() => onEdit(partner)}\n                data-testid={`button-edit-${partner.id}`}\n              >\n                <Pencil className=\"w-4 h-4\" />\n              </Button>\n              <Button\n                size=\"icon\"\n                variant=\"outline\"\n                onClick={() => onDelete(partner.id)}\n                data-testid={`button-delete-${partner.id}`}\n              >\n                <Trash2 className=\"w-4 h-4\" />\n              </Button>\n            </div>\n          </td>\n        </tr>\n      )}\n    />\n  );\n}\n","size_bytes":8836},"client/src/components/ServicePackagesDisplay.tsx":{"content":"import { Check } from 'lucide-react';\nimport { Card, CardHeader, CardTitle, CardContent, CardFooter } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { motion } from 'framer-motion';\nimport { useInView } from 'framer-motion';\nimport { useRef } from 'react';\nimport { useQuery } from '@tanstack/react-query';\nimport { useLanguage } from '@/contexts/LanguageContext';\nimport { useLocation } from 'wouter';\nimport type { ServicePackage } from '@shared/schema';\n\nconst container = {\n  hidden: { opacity: 0 },\n  show: {\n    opacity: 1,\n    transition: {\n      staggerChildren: 0.15\n    }\n  }\n};\n\nconst item = {\n  hidden: { opacity: 0, y: 30 },\n  show: { opacity: 1, y: 0 }\n};\n\ninterface ServicePackagesDisplayProps {\n  showHeader?: boolean;\n  onPackageClick?: () => void;\n  className?: string;\n  asSection?: boolean;\n}\n\nexport default function ServicePackagesDisplay({ \n  showHeader = true, \n  onPackageClick,\n  className = \"\",\n  asSection = true\n}: ServicePackagesDisplayProps) {\n  const ref = useRef(null);\n  const isInView = useInView(ref, { once: false, amount: 0.2 });\n  const { t, language } = useLanguage();\n  const [, setLocation] = useLocation();\n\n  const { data: packages = [], isLoading } = useQuery<ServicePackage[]>({\n    queryKey: [\"/api/service-packages\"],\n  });\n\n  const handlePackageClick = () => {\n    if (onPackageClick) {\n      onPackageClick();\n    } else {\n      setLocation('/book-now');\n    }\n  };\n\n  const getPackageName = (pkg: ServicePackage) => {\n    return language === 'ar' && pkg.nameAr ? pkg.nameAr : pkg.name;\n  };\n\n  const getPackagePeriod = (pkg: ServicePackage) => {\n    return language === 'ar' && pkg.periodAr ? pkg.periodAr : pkg.period;\n  };\n\n  const getPackageFeatures = (pkg: ServicePackage) => {\n    if (language === 'ar' && pkg.featuresAr && pkg.featuresAr.length > 0) {\n      return pkg.featuresAr;\n    }\n    return pkg.features || [];\n  };\n\n  const WrapperComponent = asSection ? 'section' : 'div';\n  const wrapperClassName = asSection ? `py-20 bg-background ${className}` : className;\n\n  return (\n    <WrapperComponent ref={ref} className={wrapperClassName}>\n      <div className=\"max-w-7xl mx-auto px-6\">\n        {showHeader && (\n          <motion.div \n            initial={{ opacity: 0, y: 30 }}\n            animate={isInView ? { opacity: 1, y: 0 } : {}}\n            transition={{ duration: 0.6 }}\n            className=\"text-center mb-16\"\n          >\n            <div className=\"flex items-center justify-center gap-4 mb-4\">\n              <lord-icon\n                src=\"https://cdn.lordicon.com/qopeqxee.json\"\n                trigger=\"loop\"\n                delay=\"1500\"\n                state=\"in-reveal\"\n                colors=\"primary:#18ac61,secondary:#264653\"\n                style={{width: '90px', height: '90px'}}\n                data-testid=\"icon-paw-animated\">\n              </lord-icon>\n              <h2 className=\"font-display text-4xl font-medium text-foreground\" data-testid=\"text-packages-headline\">\n                {t('packages.headline')}\n              </h2>\n            </div>\n            <p className=\"text-lg text-foreground/80 max-w-3xl mx-auto\" data-testid=\"text-packages-description\">\n              {t('packages.description')}\n            </p>\n          </motion.div>\n        )}\n\n        {isLoading ? (\n          <div className=\"text-center py-12\">\n            <p className=\"text-foreground/60\" data-testid=\"text-loading-packages\">Loading packages...</p>\n          </div>\n        ) : packages.length === 0 ? (\n          <div className=\"text-center py-12\">\n            <p className=\"text-foreground/60\" data-testid=\"text-no-packages\">No packages available at the moment.</p>\n          </div>\n        ) : (\n          <motion.div \n            variants={container}\n            initial=\"hidden\"\n            animate={isInView ? \"show\" : \"hidden\"}\n            className=\"grid md:grid-cols-3 gap-8\"\n          >\n            {packages.map((pkg, index) => (\n              <motion.div key={pkg.id} variants={item}>\n              <motion.div\n                whileHover={{ y: -8, transition: { duration: 0.3 } }}\n                className=\"h-full\"\n              >\n                <Card className={`h-full flex flex-col hover-elevate relative ${pkg.popular ? 'border-primary' : ''}`} data-testid={`card-package-${index}`}>\n                  {pkg.popular && (\n                    <div className=\"absolute -top-3 left-1/2 -translate-x-1/2\">\n                      <Badge className=\"bg-primary text-primary-foreground\" data-testid=\"badge-most-popular\">\n                        {t('packages.popular')}\n                      </Badge>\n                    </div>\n                  )}\n                  <CardHeader className=\"text-center\">\n                    <CardTitle className=\"text-2xl mb-2\" data-testid={`text-package-name-${index}`}>{getPackageName(pkg)}</CardTitle>\n                    <div className=\"mt-4\">\n                      <span className=\"text-4xl font-bold text-primary\" data-testid={`text-package-price-${index}`}>{pkg.price}</span>\n                      <span className=\"text-lg text-foreground/60\"> {getPackagePeriod(pkg)}</span>\n                    </div>\n                  </CardHeader>\n                  <CardContent className=\"flex-1\">\n                    <ul className=\"space-y-3\">\n                      {getPackageFeatures(pkg).map((feature, featureIndex) => (\n                        <li key={featureIndex} className=\"flex items-start gap-2\" data-testid={`feature-${index}-${featureIndex}`}>\n                          <Check className=\"w-5 h-5 text-primary flex-shrink-0 mt-0.5\" />\n                          <span className=\"text-foreground/80\">{feature}</span>\n                        </li>\n                      ))}\n                    </ul>\n                  </CardContent>\n                  <CardFooter>\n                    <motion.div\n                      whileHover={{ scale: 1.05 }}\n                      whileTap={{ scale: 0.95 }}\n                      className=\"w-full\"\n                    >\n                      <Button \n                        className=\"w-full\" \n                        variant={pkg.popular ? 'default' : 'outline'}\n                        size=\"lg\"\n                        onClick={handlePackageClick}\n                        data-testid={`button-book-now-${index}`}\n                      >\n                        {t('packages.bookNow')}\n                      </Button>\n                    </motion.div>\n                  </CardFooter>\n                </Card>\n              </motion.div>\n            </motion.div>\n          ))}\n        </motion.div>\n        )}\n      </div>\n    </WrapperComponent>\n  );\n}\n","size_bytes":6694},"client/src/pages/AdminCustomersReviews.tsx":{"content":"import { Pencil, Trash2, Star } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { insertCustomerReviewSchema, type CustomerReview } from \"@shared/schema\";\nimport { AdminManagement } from \"@/components/AdminManagement\";\nimport { UseFormReturn } from \"react-hook-form\";\n\ntype FormData = typeof insertCustomerReviewSchema._type;\n\nexport default function AdminCustomersReviews() {\n  return (\n    <AdminManagement\n      entityName=\"Review\"\n      entityNamePlural=\"Customers Reviews\"\n      apiEndpoint=\"/api/customer-reviews\"\n      formSchema={insertCustomerReviewSchema}\n      defaultValues={{\n        name: \"\",\n        nameAr: \"\",\n        rating: 5,\n        message: \"\",\n      }}\n      description='Manage customer testimonials that appear in \"What Our Customers Say\" section'\n      renderFormFields={(form: UseFormReturn<FormData>) => (\n        <>\n          <FormField\n            control={form.control}\n            name=\"name\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Customer Name (English)</FormLabel>\n                <FormControl>\n                  <Input\n                    placeholder=\"e.g., John Smith\"\n                    data-testid=\"input-review-name\"\n                    {...field}\n                  />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n\n          <FormField\n            control={form.control}\n            name=\"nameAr\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Customer Name (Arabic)</FormLabel>\n                <FormControl>\n                  <Input\n                    placeholder=\"e.g., جون سميث\"\n                    data-testid=\"input-review-name-ar\"\n                    {...field}\n                    value={field.value || \"\"}\n                  />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n\n          <FormField\n            control={form.control}\n            name=\"rating\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Rating</FormLabel>\n                <Select\n                  onValueChange={(value) => field.onChange(parseInt(value))}\n                  value={field.value?.toString()}\n                >\n                  <FormControl>\n                    <SelectTrigger data-testid=\"select-review-rating\">\n                      <SelectValue placeholder=\"Select rating\" />\n                    </SelectTrigger>\n                  </FormControl>\n                  <SelectContent>\n                    <SelectItem value=\"5\">5 Stars - Excellent</SelectItem>\n                    <SelectItem value=\"4\">4 Stars - Very Good</SelectItem>\n                    <SelectItem value=\"3\">3 Stars - Good</SelectItem>\n                    <SelectItem value=\"2\">2 Stars - Fair</SelectItem>\n                    <SelectItem value=\"1\">1 Star - Poor</SelectItem>\n                  </SelectContent>\n                </Select>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n\n          <FormField\n            control={form.control}\n            name=\"message\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Review Message</FormLabel>\n                <FormControl>\n                  <Textarea\n                    placeholder=\"Write the customer's testimonial here...\"\n                    className=\"min-h-[100px]\"\n                    data-testid=\"input-review-message\"\n                    {...field}\n                  />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n        </>\n      )}\n      renderTableColumns={() => [\n        { header: \"Review\", width: \"60%\" },\n        { header: \"Actions\", width: \"40%\" },\n      ]}\n      renderTableRow={(review, onEdit, onDelete) => (\n        <tr key={review.id} className=\"border-b\" data-testid={`review-item-${review.id}`}>\n          <td className=\"py-3 px-2\">\n            <h3 className=\"font-semibold text-foreground\">{review.name}</h3>\n            <div className=\"flex gap-0.5 my-1\">\n              {[...Array(5)].map((_, i) => (\n                <Star\n                  key={i}\n                  className={`w-3 h-3 ${\n                    i < review.rating\n                      ? \"fill-yellow-400 text-yellow-400\"\n                      : \"text-gray-300\"\n                  }`}\n                />\n              ))}\n            </div>\n            <p className=\"text-xs text-muted-foreground line-clamp-2\">\n              {review.message}\n            </p>\n          </td>\n          <td className=\"py-3 px-2\">\n            <div className=\"flex gap-2\">\n              <Button\n                size=\"icon\"\n                variant=\"outline\"\n                onClick={() => onEdit(review)}\n                data-testid={`button-edit-${review.id}`}\n              >\n                <Pencil className=\"w-4 h-4\" />\n              </Button>\n              <Button\n                size=\"icon\"\n                variant=\"outline\"\n                onClick={() => onDelete(review.id)}\n                data-testid={`button-delete-${review.id}`}\n              >\n                <Trash2 className=\"w-4 h-4\" />\n              </Button>\n            </div>\n          </td>\n        </tr>\n      )}\n    />\n  );\n}\n","size_bytes":5709},"client/src/pages/AdminOurDoctors.tsx":{"content":"import { useEffect } from \"react\";\nimport { useLocation } from \"wouter\";\nimport { SidebarProvider, SidebarTrigger } from \"@/components/ui/sidebar\";\nimport { AdminSidebar } from \"@/components/AdminSidebar\";\n\nexport default function AdminOurDoctors() {\n  const [, setLocation] = useLocation();\n\n  useEffect(() => {\n    const isAuthenticated = localStorage.getItem('adminAuthenticated') === 'true';\n    if (!isAuthenticated) {\n      setLocation('/login-admin');\n    }\n  }, [setLocation]);\n\n  const style = {\n    '--sidebar-width': '16rem',\n    '--sidebar-width-icon': '3rem',\n  };\n\n  return (\n    <SidebarProvider style={style as React.CSSProperties}>\n      <div className=\"flex h-screen w-full\">\n        <AdminSidebar />\n        <div className=\"flex flex-col flex-1\">\n          <header className=\"flex items-center gap-4 p-4 border-b bg-[#264653]\">\n            <SidebarTrigger className=\"text-white\" data-testid=\"button-sidebar-toggle\" />\n            <h1 className=\"text-xl font-display text-white\" data-testid=\"text-page-title\">\n              Our Doctors Management\n            </h1>\n          </header>\n          <main className=\"flex-1 overflow-auto\">\n            <div className=\"p-6 space-y-6\">\n              <div>\n                <h2 className=\"text-3xl font-bold text-foreground\">Our Doctors</h2>\n                <p className=\"text-muted-foreground mt-1\">\n                  Manage doctors that appear on the About page\n                </p>\n              </div>\n              \n              <div className=\"text-center py-12\">\n                <p className=\"text-muted-foreground\">\n                  Our Doctors management interface - Coming soon\n                </p>\n              </div>\n            </div>\n          </main>\n        </div>\n      </div>\n    </SidebarProvider>\n  );\n}\n","size_bytes":1786},"client/src/pages/BookNow.tsx":{"content":"import { motion, useInView } from 'framer-motion';\nimport { useLanguage } from '@/contexts/LanguageContext';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { useRef, useEffect, useState } from 'react';\nimport Header from '@/components/Header';\nimport ECGAnimation from '@/components/ECGAnimation';\nimport HeartbeatDivider from '@/components/HeartbeatDivider';\nimport Footer from '@/components/Footer';\nimport { MapPin, Phone } from 'lucide-react';\nimport { SiWhatsapp } from 'react-icons/si';\nimport vetExamImage from '@assets/generated_images/Vet_examining_golden_retriever_19654044.png';\nimport vetConsultationImage from '@assets/generated_images/Vet_consultation_with_cat_owner_7978144f.png';\nimport vetEquipmentImage from '@assets/generated_images/Modern_veterinary_equipment_room_49dc6345.png';\n\nexport default function BookNow() {\n  const { t, language } = useLanguage();\n  const heroRef = useRef(null);\n  const heroInView = useInView(heroRef, { once: false, amount: 0.3 });\n\n  // Countdown timer state\n  const [countdown, setCountdown] = useState({\n    months: 0,\n    weeks: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  });\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  // Countdown timer logic\n  useEffect(() => {\n    const targetDate = new Date('2026-01-01T00:00:00').getTime();\n\n    const updateCountdown = () => {\n      const now = new Date().getTime();\n      const distance = targetDate - now;\n\n      if (distance < 0) {\n        setCountdown({ months: 0, weeks: 0, days: 0, hours: 0, minutes: 0, seconds: 0 });\n        return;\n      }\n\n      const months = Math.floor(distance / (1000 * 60 * 60 * 24 * 30));\n      const remainingAfterMonths = distance % (1000 * 60 * 60 * 24 * 30);\n      const weeks = Math.floor(remainingAfterMonths / (1000 * 60 * 60 * 24 * 7));\n      const remainingAfterWeeks = remainingAfterMonths % (1000 * 60 * 60 * 24 * 7);\n      const days = Math.floor(remainingAfterWeeks / (1000 * 60 * 60 * 24));\n      const hours = Math.floor((remainingAfterWeeks % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n      const minutes = Math.floor((remainingAfterWeeks % (1000 * 60 * 60)) / (1000 * 60));\n      const seconds = Math.floor((remainingAfterWeeks % (1000 * 60)) / 1000);\n\n      setCountdown({ months, weeks, days, hours, minutes, seconds });\n    };\n\n    updateCountdown();\n    const interval = setInterval(updateCountdown, 1000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  // Convert English numerals to Arabic-Indic numerals\n  const toArabicNumerals = (num: number): string => {\n    const arabicNumerals = ['٠', '١', '٢', '٣', '٤', '٥', '٦', '٧', '٨', '٩'];\n    return num.toString().split('').map(digit => arabicNumerals[parseInt(digit)]).join('');\n  };\n\n  // Format number based on language\n  const formatNumber = (num: number): string => {\n    return language === 'ar' ? toArabicNumerals(num) : num.toString();\n  };\n\n  const riyadhBranches = [\n    {\n      id: 'sahafa',\n      name: t('bookNow.sahafahBranch'),\n      whatsapp: t('bookNow.sahafahWhatsApp'),\n      phone: t('bookNow.sahafahPhone'),\n      bookingUrl: `https://vet.digitail.io/clinics/dr-paws-sahafa-tel-920003045?lang=${language}`,\n    },\n    {\n      id: 'mather',\n      name: t('bookNow.matherBranch'),\n      whatsapp: t('bookNow.matherWhatsApp'),\n      phone: t('bookNow.matherPhone'),\n      bookingUrl: `https://vet.digitail.io/clinics/dr-paws-mathar-phone-920003045?lang=${language}`,\n    },\n  ];\n\n  return (\n    <div className=\"min-h-screen\">\n      <Header />\n      <ECGAnimation />\n\n      <motion.section\n        ref={heroRef}\n        initial={{ opacity: 0 }}\n        animate={heroInView ? { opacity: 1 } : { opacity: 0 }}\n        transition={{ duration: 0.6 }}\n        className=\"relative py-32 bg-gradient-to-br from-primary/5 to-accent/5 overflow-hidden\"\n      >\n        <div \n          className=\"absolute inset-0 bg-cover bg-center opacity-20\"\n          style={{ backgroundImage: `url(${vetExamImage})` }}\n        />\n        <div className=\"absolute inset-0 bg-gradient-to-b from-background/80 via-background/70 to-background/90\" />\n        \n        <div className=\"max-w-7xl mx-auto px-6 relative z-10\">\n          <motion.div\n            initial={{ y: 30, opacity: 0 }}\n            animate={heroInView ? { y: 0, opacity: 1 } : { y: 30, opacity: 0 }}\n            transition={{ duration: 0.6, delay: 0.2 }}\n            className=\"text-center\"\n          >\n            <h1 className=\"text-4xl md:text-5xl font-bold text-primary mb-6\" data-testid=\"text-booknow-title\">\n              {t('bookNow.title')}\n            </h1>\n            <p className=\"text-xl text-foreground/80 mb-8\" data-testid=\"text-booknow-welcome\">\n              {t('bookNow.welcome')}\n            </p>\n          </motion.div>\n        </div>\n      </motion.section>\n\n      {/* Quick Booking & Contact Section */}\n      <section className=\"py-12 bg-primary/5\">\n        <div className=\"max-w-7xl mx-auto px-6\">\n          <motion.div\n            initial={{ y: 30, opacity: 0 }}\n            whileInView={{ y: 0, opacity: 1 }}\n            viewport={{ once: false, amount: 0.3 }}\n            transition={{ duration: 0.6 }}\n          >\n            <h2 className=\"text-2xl font-bold text-primary text-center mb-8\" data-testid=\"text-quick-booking-title\">\n              {t('bookNow.bookingMethods')}\n            </h2>\n            \n            <div className={`${language === 'ar' ? 'flex justify-start' : ''}`}>\n              <h3 className={`text-2xl font-semibold text-primary mb-6 flex items-center gap-2 ${language === 'ar' ? 'text-right' : ''}`} data-testid=\"text-riyadh-branches\">\n                <lord-icon\n                  src=\"https://cdn.lordicon.com/dfwzmvnc.json\"\n                  trigger=\"loop\"\n                  delay=\"1500\"\n                  colors=\"primary:#18ac61,secondary:#264653\"\n                  style={{ width: '90px', height: '90px' }}\n                />\n                {t('bookNow.riyadhBranches')}\n              </h3>\n            </div>\n            \n            <div className=\"grid md:grid-cols-3 gap-6 mb-8\">\n              {/* WhatsApp Quick Access */}\n              <Card className=\"text-center hover-elevate\" data-testid=\"card-quick-whatsapp\">\n                <CardContent className=\"p-6\">\n                  <SiWhatsapp className=\"w-10 h-10 text-primary mx-auto mb-4\" />\n                  <h3 className=\"font-semibold text-lg mb-4\" data-testid=\"text-quick-whatsapp-title\">{t('bookNow.whatsappBooking')}</h3>\n                  <div className=\"space-y-3 flex flex-col items-center\">\n                    {riyadhBranches.map((branch) => (\n                      <div key={`quick-wa-${branch.id}`} className=\"flex items-center gap-2\">\n                        <a\n                          href={branch.bookingUrl}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          className=\"text-sm text-foreground/70 hover:text-primary hover:underline transition-colors\"\n                          data-testid={`link-branch-${branch.id}`}\n                        >\n                          {branch.name}\n                        </a>\n                        <a\n                          href={`https://wa.me/966${branch.whatsapp.replace(/^0/, '').replace(/\\s/g, '')}`}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          className=\"hover-elevate rounded-lg\"\n                          data-testid={`link-quick-whatsapp-${branch.id}`}\n                        >\n                          <SiWhatsapp className=\"w-5 h-5 text-primary\" />\n                        </a>\n                      </div>\n                    ))}\n                  </div>\n                </CardContent>\n              </Card>\n\n              {/* Phone Quick Access */}\n              <Card className=\"text-center hover-elevate\" data-testid=\"card-quick-phone\">\n                <CardContent className=\"p-6 flex flex-col items-center\">\n                  <Phone className=\"w-10 h-10 text-primary mb-4\" />\n                  <h3 className=\"font-semibold text-lg mb-4\" data-testid=\"text-quick-phone-title\">\n                    {t('bookNow.phoneBooking')}\n                  </h3>\n                  <div className=\"space-y-2 text-sm flex flex-col items-center\">\n                    {riyadhBranches.map((branch) => (\n                      <div key={`quick-phone-${branch.id}`} className=\"flex items-center gap-3\">\n                        <a\n                          href={branch.bookingUrl}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          className={`text-foreground/70 hover:text-primary hover:underline transition-colors ${language === 'ar' ? 'pl-[10px]' : ''}`}\n                        >\n                          {branch.name}\n                        </a>\n                        <span className=\"text-foreground/70\">:</span>\n                        <a\n                          href={`tel:${branch.phone.replace(/\\s/g, '')}`}\n                          className=\"text-primary hover:underline font-semibold font-mono tracking-wide\"\n                          data-testid={`link-quick-phone-${branch.id}`}\n                          dir=\"ltr\"\n                        >\n                          {branch.phone.replace(/(\\d{2})\\s(\\d{4})\\s(\\d{4})/, '$1\\u00A0$2\\u00A0$3')}\n                        </a>\n                      </div>\n                    ))}\n                  </div>\n                </CardContent>\n              </Card>\n\n              {/* Online Program Quick Access */}\n              <Card className=\"text-center hover-elevate\" data-testid=\"card-quick-program\">\n                <CardContent className=\"p-6\">\n                  <MapPin className=\"w-10 h-10 text-primary mx-auto mb-4\" />\n                  <h3 className=\"font-semibold text-lg mb-4\" data-testid=\"text-quick-program-title\">{t('bookNow.programBooking')}</h3>\n                  <div className=\"flex flex-col gap-2\">\n                    {riyadhBranches.map((branch) => (\n                      <a\n                        key={`quick-program-${branch.id}`}\n                        href={branch.bookingUrl}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"text-primary hover:underline text-sm\"\n                        data-testid={`link-quick-program-${branch.id}`}\n                      >\n                        {branch.name}\n                      </a>\n                    ))}\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Visual Section with Images */}\n      <section className=\"py-12 bg-background\">\n        <div className=\"max-w-7xl mx-auto px-6\">\n          <div className=\"grid md:grid-cols-2 gap-8\">\n            <motion.div\n              initial={{ opacity: 0, x: -30 }}\n              whileInView={{ opacity: 1, x: 0 }}\n              viewport={{ once: false, amount: 0.3 }}\n              transition={{ duration: 0.6 }}\n            >\n              <img \n                src={vetConsultationImage} \n                alt=\"Veterinary consultation\" \n                className=\"rounded-xl w-full h-full object-cover shadow-md\"\n                data-testid=\"img-vet-consultation\"\n              />\n            </motion.div>\n            <motion.div\n              initial={{ opacity: 0, x: 30 }}\n              whileInView={{ opacity: 1, x: 0 }}\n              viewport={{ once: false, amount: 0.3 }}\n              transition={{ duration: 0.6 }}\n            >\n              <img \n                src={vetEquipmentImage} \n                alt=\"Modern veterinary equipment\" \n                className=\"rounded-xl w-full h-full object-cover shadow-md\"\n                data-testid=\"img-vet-equipment\"\n              />\n            </motion.div>\n          </div>\n        </div>\n      </section>\n\n      {/* Jeddah Branches - Coming Soon */}\n      <section className=\"py-16 bg-background\">\n        <div className=\"max-w-7xl mx-auto px-6\">\n          <motion.div\n            initial={{ y: 30, opacity: 0 }}\n            whileInView={{ y: 0, opacity: 1 }}\n            viewport={{ once: false, amount: 0.2 }}\n            transition={{ duration: 0.6 }}\n          >\n            <div className={`${language === 'ar' ? 'flex justify-start' : ''}`}>\n              <h3 className={`text-2xl font-semibold text-primary mb-6 flex items-center gap-2 ${language === 'ar' ? 'text-right' : ''}`} data-testid=\"text-jeddah-branches\">\n                <lord-icon\n                  src=\"https://cdn.lordicon.com/dfwzmvnc.json\"\n                  trigger=\"loop\"\n                  delay=\"1500\"\n                  colors=\"primary:#18ac61,secondary:#264653\"\n                  style={{ width: '90px', height: '90px' }}\n                />\n                {t('bookNow.jeddahBranches')}\n              </h3>\n            </div>\n            \n            <Card className=\"text-center py-12\" data-testid=\"card-jeddah-coming-soon\">\n              <CardContent>\n                <div className=\"flex justify-center mb-6\">\n                  <lord-icon\n                    src=\"https://cdn.lordicon.com/mmsmhvsw.json\"\n                    trigger=\"loop\"\n                    delay=\"1000\"\n                    colors=\"primary:#18ac61,secondary:#264653\"\n                    style={{ width: '90px', height: '90px' }}\n                  />\n                </div>\n                <p className=\"text-2xl font-semibold text-foreground mb-6\" data-testid=\"text-coming-soon\">\n                  {t('bookNow.comingSoon')}\n                </p>\n                \n                {/* Countdown Timer */}\n                <div className=\"grid grid-cols-3 md:grid-cols-6 gap-4 max-w-3xl mx-auto\">\n                  <div className=\"flex flex-col items-center p-3 bg-primary/5 rounded-lg\">\n                    <span className=\"text-3xl font-bold text-primary\" data-testid=\"countdown-months\">{formatNumber(countdown.months)}</span>\n                    <span className=\"text-sm text-foreground/60 mt-1\">{language === 'ar' ? 'شهور' : 'Months'}</span>\n                  </div>\n                  <div className=\"flex flex-col items-center p-3 bg-primary/5 rounded-lg\">\n                    <span className=\"text-3xl font-bold text-primary\" data-testid=\"countdown-weeks\">{formatNumber(countdown.weeks)}</span>\n                    <span className=\"text-sm text-foreground/60 mt-1\">{language === 'ar' ? 'أسابيع' : 'Weeks'}</span>\n                  </div>\n                  <div className=\"flex flex-col items-center p-3 bg-primary/5 rounded-lg\">\n                    <span className=\"text-3xl font-bold text-primary\" data-testid=\"countdown-days\">{formatNumber(countdown.days)}</span>\n                    <span className=\"text-sm text-foreground/60 mt-1\">{language === 'ar' ? 'أيام' : 'Days'}</span>\n                  </div>\n                  <div className=\"flex flex-col items-center p-3 bg-primary/5 rounded-lg\">\n                    <span className=\"text-3xl font-bold text-primary\" data-testid=\"countdown-hours\">{formatNumber(countdown.hours)}</span>\n                    <span className=\"text-sm text-foreground/60 mt-1\">{language === 'ar' ? 'ساعات' : 'Hours'}</span>\n                  </div>\n                  <div className=\"flex flex-col items-center p-3 bg-primary/5 rounded-lg\">\n                    <span className=\"text-3xl font-bold text-primary\" data-testid=\"countdown-minutes\">{formatNumber(countdown.minutes)}</span>\n                    <span className=\"text-sm text-foreground/60 mt-1\">{language === 'ar' ? 'دقائق' : 'Minutes'}</span>\n                  </div>\n                  <div className=\"flex flex-col items-center p-3 bg-primary/5 rounded-lg\">\n                    <span className=\"text-3xl font-bold text-primary\" data-testid=\"countdown-seconds\">{formatNumber(countdown.seconds)}</span>\n                    <span className=\"text-sm text-foreground/60 mt-1\">{language === 'ar' ? 'ثواني' : 'Seconds'}</span>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </motion.div>\n        </div>\n      </section>\n\n      <HeartbeatDivider />\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":16274},"server/objectStorage.ts":{"content":"import { Storage, File } from \"@google-cloud/storage\";\nimport { Response } from \"express\";\nimport { randomUUID } from \"crypto\";\nimport {\n  ObjectAclPolicy,\n  ObjectPermission,\n  canAccessObject,\n  getObjectAclPolicy,\n  setObjectAclPolicy,\n} from \"./objectAcl\";\n\nconst REPLIT_SIDECAR_ENDPOINT = \"http://127.0.0.1:1106\";\n\nexport const objectStorageClient = new Storage({\n  credentials: {\n    audience: \"replit\",\n    subject_token_type: \"access_token\",\n    token_url: `${REPLIT_SIDECAR_ENDPOINT}/token`,\n    type: \"external_account\",\n    credential_source: {\n      url: `${REPLIT_SIDECAR_ENDPOINT}/credential`,\n      format: {\n        type: \"json\",\n        subject_token_field_name: \"access_token\",\n      },\n    },\n    universe_domain: \"googleapis.com\",\n  },\n  projectId: \"\",\n});\n\nexport class ObjectNotFoundError extends Error {\n  constructor() {\n    super(\"Object not found\");\n    this.name = \"ObjectNotFoundError\";\n    Object.setPrototypeOf(this, ObjectNotFoundError.prototype);\n  }\n}\n\nexport class ObjectStorageService {\n  constructor() {}\n\n  getPublicObjectSearchPaths(): Array<string> {\n    const pathsStr = process.env.PUBLIC_OBJECT_SEARCH_PATHS || \"\";\n    const paths = Array.from(\n      new Set(\n        pathsStr\n          .split(\",\")\n          .map((path) => path.trim())\n          .filter((path) => path.length > 0)\n      )\n    );\n    if (paths.length === 0) {\n      throw new Error(\n        \"PUBLIC_OBJECT_SEARCH_PATHS not set. Create a bucket in 'Object Storage' \" +\n          \"tool and set PUBLIC_OBJECT_SEARCH_PATHS env var (comma-separated paths).\"\n      );\n    }\n    return paths;\n  }\n\n  getPrivateObjectDir(): string {\n    const dir = process.env.PRIVATE_OBJECT_DIR || \"\";\n    if (!dir) {\n      throw new Error(\n        \"PRIVATE_OBJECT_DIR not set. Create a bucket in 'Object Storage' \" +\n          \"tool and set PRIVATE_OBJECT_DIR env var.\"\n      );\n    }\n    return dir;\n  }\n\n  async searchPublicObject(filePath: string): Promise<File | null> {\n    for (const searchPath of this.getPublicObjectSearchPaths()) {\n      const fullPath = `${searchPath}/${filePath}`;\n      const { bucketName, objectName } = parseObjectPath(fullPath);\n      const bucket = objectStorageClient.bucket(bucketName);\n      const file = bucket.file(objectName);\n      const [exists] = await file.exists();\n      if (exists) {\n        return file;\n      }\n    }\n    return null;\n  }\n\n  async downloadObject(file: File, res: Response, cacheTtlSec: number = 3600) {\n    try {\n      const [metadata] = await file.getMetadata();\n      const aclPolicy = await getObjectAclPolicy(file);\n      const isPublic = aclPolicy?.visibility === \"public\";\n      res.set({\n        \"Content-Type\": metadata.contentType || \"application/octet-stream\",\n        \"Content-Length\": metadata.size,\n        \"Cache-Control\": `${\n          isPublic ? \"public\" : \"private\"\n        }, max-age=${cacheTtlSec}`,\n      });\n      const stream = file.createReadStream();\n      stream.on(\"error\", (err) => {\n        console.error(\"Stream error:\", err);\n        if (!res.headersSent) {\n          res.status(500).json({ error: \"Error streaming file\" });\n        }\n      });\n      stream.pipe(res);\n    } catch (error) {\n      console.error(\"Error downloading file:\", error);\n      if (!res.headersSent) {\n        res.status(500).json({ error: \"Error downloading file\" });\n      }\n    }\n  }\n\n  async getObjectEntityUploadURL(): Promise<string> {\n    const privateObjectDir = this.getPrivateObjectDir();\n    if (!privateObjectDir) {\n      throw new Error(\n        \"PRIVATE_OBJECT_DIR not set. Create a bucket in 'Object Storage' \" +\n          \"tool and set PRIVATE_OBJECT_DIR env var.\"\n      );\n    }\n\n    const objectId = randomUUID();\n    const fullPath = `${privateObjectDir}/uploads/${objectId}`;\n    const { bucketName, objectName } = parseObjectPath(fullPath);\n    return signObjectURL({\n      bucketName,\n      objectName,\n      method: \"PUT\",\n      ttlSec: 900,\n    });\n  }\n\n  async getObjectEntityFile(objectPath: string): Promise<File> {\n    if (!objectPath.startsWith(\"/objects/\")) {\n      throw new ObjectNotFoundError();\n    }\n    const parts = objectPath.slice(1).split(\"/\");\n    if (parts.length < 2) {\n      throw new ObjectNotFoundError();\n    }\n    const entityId = parts.slice(1).join(\"/\");\n    let entityDir = this.getPrivateObjectDir();\n    if (!entityDir.endsWith(\"/\")) {\n      entityDir = `${entityDir}/`;\n    }\n    const objectEntityPath = `${entityDir}${entityId}`;\n    const { bucketName, objectName } = parseObjectPath(objectEntityPath);\n    const bucket = objectStorageClient.bucket(bucketName);\n    const objectFile = bucket.file(objectName);\n    const [exists] = await objectFile.exists();\n    if (!exists) {\n      throw new ObjectNotFoundError();\n    }\n    return objectFile;\n  }\n\n  normalizeObjectEntityPath(rawPath: string): string {\n    if (!rawPath.startsWith(\"https://storage.googleapis.com/\")) {\n      return rawPath;\n    }\n    const url = new URL(rawPath);\n    const rawObjectPath = url.pathname;\n    let objectEntityDir = this.getPrivateObjectDir();\n    if (!objectEntityDir.endsWith(\"/\")) {\n      objectEntityDir = `${objectEntityDir}/`;\n    }\n    if (!rawObjectPath.startsWith(objectEntityDir)) {\n      return rawObjectPath;\n    }\n    const entityId = rawObjectPath.slice(objectEntityDir.length);\n    return `/objects/${entityId}`;\n  }\n\n  async trySetObjectEntityAclPolicy(\n    rawPath: string,\n    aclPolicy: ObjectAclPolicy\n  ): Promise<string> {\n    const normalizedPath = this.normalizeObjectEntityPath(rawPath);\n    if (!normalizedPath.startsWith(\"/\")) {\n      return normalizedPath;\n    }\n    const objectFile = await this.getObjectEntityFile(normalizedPath);\n    await setObjectAclPolicy(objectFile, aclPolicy);\n    return normalizedPath;\n  }\n\n  async canAccessObjectEntity({\n    objectFile,\n    requestedPermission,\n  }: {\n    objectFile: File;\n    requestedPermission?: ObjectPermission;\n  }): Promise<boolean> {\n    return canAccessObject({\n      objectFile,\n      requestedPermission: requestedPermission ?? ObjectPermission.READ,\n    });\n  }\n}\n\nfunction parseObjectPath(path: string): {\n  bucketName: string;\n  objectName: string;\n} {\n  if (!path.startsWith(\"/\")) {\n    path = `/${path}`;\n  }\n  const pathParts = path.split(\"/\");\n  if (pathParts.length < 3) {\n    throw new Error(\"Invalid path: must contain at least a bucket name\");\n  }\n  const bucketName = pathParts[1];\n  const objectName = pathParts.slice(2).join(\"/\");\n  return {\n    bucketName,\n    objectName,\n  };\n}\n\nasync function signObjectURL({\n  bucketName,\n  objectName,\n  method,\n  ttlSec,\n}: {\n  bucketName: string;\n  objectName: string;\n  method: \"GET\" | \"PUT\" | \"DELETE\" | \"HEAD\";\n  ttlSec: number;\n}): Promise<string> {\n  const request = {\n    bucket_name: bucketName,\n    object_name: objectName,\n    method,\n    expires_at: new Date(Date.now() + ttlSec * 1000).toISOString(),\n  };\n  const response = await fetch(\n    `${REPLIT_SIDECAR_ENDPOINT}/object-storage/signed-object-url`,\n    {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(request),\n    }\n  );\n  if (!response.ok) {\n    throw new Error(\n      `Failed to sign object URL, errorcode: ${response.status}, ` +\n        `make sure you're running on Replit`\n    );\n  }\n  const { signed_url: signedURL } = await response.json();\n  return signedURL;\n}\n","size_bytes":7348},"client/src/components/ObjectUploader.tsx":{"content":"import { useState } from \"react\";\nimport type { ReactNode } from \"react\";\nimport Uppy from \"@uppy/core\";\nimport { DashboardModal } from \"@uppy/react\";\nimport AwsS3 from \"@uppy/aws-s3\";\nimport type { UploadResult } from \"@uppy/core\";\nimport { Button } from \"@/components/ui/button\";\n\ninterface ObjectUploaderProps {\n  maxNumberOfFiles?: number;\n  maxFileSize?: number;\n  onGetUploadParameters: () => Promise<{\n    method: \"PUT\";\n    url: string;\n  }>;\n  onComplete?: (\n    result: UploadResult<Record<string, unknown>, Record<string, unknown>>\n  ) => void;\n  buttonClassName?: string;\n  children: ReactNode;\n}\n\nexport function ObjectUploader({\n  maxNumberOfFiles = 1,\n  maxFileSize = 10485760, // 10MB default\n  onGetUploadParameters,\n  onComplete,\n  buttonClassName,\n  children,\n}: ObjectUploaderProps) {\n  const [showModal, setShowModal] = useState(false);\n  const [uppy] = useState(() =>\n    new Uppy({\n      restrictions: {\n        maxNumberOfFiles,\n        maxFileSize,\n      },\n      autoProceed: false,\n    })\n      .use(AwsS3, {\n        shouldUseMultipart: false,\n        getUploadParameters: onGetUploadParameters,\n      })\n      .on(\"complete\", (result) => {\n        onComplete?.(result);\n      })\n  );\n\n  return (\n    <div>\n      <Button onClick={() => setShowModal(true)} className={buttonClassName} data-testid=\"button-upload\">\n        {children}\n      </Button>\n\n      <DashboardModal\n        uppy={uppy}\n        open={showModal}\n        onRequestClose={() => setShowModal(false)}\n        proudlyDisplayPoweredByUppy={false}\n      />\n    </div>\n  );\n}\n","size_bytes":1565},"client/src/components/PromotionalModal.tsx":{"content":"import { useState, useEffect } from 'react';\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogDescription } from '@/components/ui/dialog';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { Gift, Globe } from 'lucide-react';\nimport { useToast } from '@/hooks/use-toast';\nimport { apiRequest, queryClient } from '@/lib/queryClient';\nimport { useLanguage } from '@/contexts/LanguageContext';\nimport confetti from 'canvas-confetti';\n\ninterface PromotionalModalProps {\n  open: boolean;\n  onClose: () => void;\n}\n\nexport default function PromotionalModal({ open, onClose }: PromotionalModalProps) {\n  const { toast } = useToast();\n  const { t, language, setLanguage } = useLanguage();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [phoneError, setPhoneError] = useState<string | null>(null);\n  const [emailError, setEmailError] = useState<string | null>(null);\n  const [isCheckingPhone, setIsCheckingPhone] = useState(false);\n  const [isCheckingEmail, setIsCheckingEmail] = useState(false);\n  const [showSuccess, setShowSuccess] = useState(false);\n  const [submittedPhone, setSubmittedPhone] = useState('');\n  const [doNotShowAgain, setDoNotShowAgain] = useState(false);\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    emailAddress: '',\n    phoneNumber: '',\n  });\n\n  // Debounce phone number validation\n  useEffect(() => {\n    const checkPhone = async () => {\n      if (formData.phoneNumber.length >= 10) {\n        setIsCheckingPhone(true);\n        try {\n          const response = await fetch(`/api/opening-discount/check-phone/${formData.phoneNumber}`);\n          const data = await response.json();\n          if (data.exists) {\n            setPhoneError(t('promo.phoneAlreadyRegistered'));\n          } else {\n            setPhoneError(null);\n          }\n        } catch (error) {\n          console.error('Error checking phone:', error);\n        } finally {\n          setIsCheckingPhone(false);\n        }\n      } else {\n        setPhoneError(null);\n      }\n    };\n\n    const timeoutId = setTimeout(checkPhone, 500);\n    return () => clearTimeout(timeoutId);\n  }, [formData.phoneNumber, t]);\n\n  // Debounce email validation\n  useEffect(() => {\n    const checkEmail = async () => {\n      // Simple email validation regex\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      \n      if (formData.emailAddress.length > 0) {\n        if (!emailRegex.test(formData.emailAddress)) {\n          setEmailError(t('promo.invalidEmail'));\n          return;\n        }\n\n        setIsCheckingEmail(true);\n        try {\n          const response = await fetch(`/api/opening-discount/check-email/${encodeURIComponent(formData.emailAddress)}`);\n          const data = await response.json();\n          if (data.exists) {\n            setEmailError(t('promo.emailAlreadyRegistered'));\n          } else {\n            setEmailError(null);\n          }\n        } catch (error) {\n          console.error('Error checking email:', error);\n        } finally {\n          setIsCheckingEmail(false);\n        }\n      } else {\n        setEmailError(null);\n      }\n    };\n\n    const timeoutId = setTimeout(checkEmail, 500);\n    return () => clearTimeout(timeoutId);\n  }, [formData.emailAddress, t]);\n\n  const handleOkClick = () => {\n    setShowSuccess(false);\n    setSubmittedPhone('');\n    if (doNotShowAgain) {\n      localStorage.setItem('hasSeenPromoModal', 'true');\n    }\n    onClose();\n  };\n\n  const showCelebration = () => {\n    const colors = ['#18ac61', '#f4a261', '#e76f51', '#264653', '#2a9d8f'];\n    \n    // First burst from center\n    confetti({\n      particleCount: 100,\n      spread: 70,\n      origin: { y: 0.6 },\n      colors: colors\n    });\n\n    // Left side burst\n    setTimeout(() => {\n      confetti({\n        particleCount: 50,\n        angle: 60,\n        spread: 55,\n        origin: { x: 0 },\n        colors: colors\n      });\n    }, 100);\n\n    // Right side burst\n    setTimeout(() => {\n      confetti({\n        particleCount: 50,\n        angle: 120,\n        spread: 55,\n        origin: { x: 1 },\n        colors: colors\n      });\n    }, 100);\n\n    // Final center burst\n    setTimeout(() => {\n      confetti({\n        particleCount: 80,\n        spread: 100,\n        origin: { y: 0.6 },\n        colors: colors,\n        ticks: 200\n      });\n    }, 250);\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    // Validate phone number length\n    if (formData.phoneNumber.length !== 10) {\n      setPhoneError(t('promo.phoneNumberMustBe10Digits'));\n      return;\n    }\n    \n    // Prevent submission if phone or email error exists\n    if (phoneError || emailError) {\n      return;\n    }\n    \n    setIsSubmitting(true);\n\n    try {\n      await apiRequest('POST', '/api/opening-discount', {\n        ...formData,\n        language\n      });\n\n      // Store the phone number for success message\n      setSubmittedPhone(formData.phoneNumber);\n\n      // Show celebration effect\n      showCelebration();\n\n      // Show success message after celebration\n      setTimeout(() => {\n        setShowSuccess(true);\n        setFormData({ firstName: '', lastName: '', emailAddress: '', phoneNumber: '' });\n      }, 1000);\n    } catch (error: any) {\n      let errorMessage = t('promo.errorGeneric');\n      \n      if (error instanceof Error) {\n        if (error.message.includes('409') || error.message.includes('Phone number already registered')) {\n          errorMessage = t('promo.errorDuplicate');\n        }\n      }\n      \n      toast({\n        title: t('promo.errorTitle'),\n        description: errorMessage,\n        variant: 'destructive',\n      });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const handleCloseModal = () => {\n    if (doNotShowAgain) {\n      localStorage.setItem('hasSeenPromoModal', 'true');\n    }\n    onClose();\n  };\n\n  return (\n    <Dialog open={open} onOpenChange={handleCloseModal}>\n      <DialogContent className=\"max-w-[95vw] sm:max-w-[500px] p-0 overflow-hidden [&>button]:z-50\" dir={language === 'ar' ? 'rtl' : 'ltr'}>\n        {!showSuccess ? (\n          <>\n            <div className=\"absolute top-4 z-10 w-full px-4\">\n              <div className=\"flex items-center justify-between pt-[15px]\">\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  onClick={() => setLanguage(language === 'en' ? 'ar' : 'en')}\n                  className=\"flex items-center gap-2\"\n                  data-testid=\"button-language-switcher\"\n                >\n                  <Globe className=\"w-4 h-4\" />\n                  {language === 'en' ? 'العربية' : 'English'}\n                </Button>\n                \n                <div className=\"flex items-center gap-2\" dir={language === 'ar' ? 'rtl' : 'ltr'}>\n                  <Checkbox \n                    id=\"doNotShowAgain\" \n                    checked={doNotShowAgain}\n                    onCheckedChange={(checked) => setDoNotShowAgain(checked as boolean)}\n                    data-testid=\"checkbox-do-not-show\"\n                  />\n                  <Label \n                    htmlFor=\"doNotShowAgain\" \n                    className=\"text-sm cursor-pointer\"\n                    data-testid=\"label-do-not-show\"\n                  >\n                    {t('promo.doNotShowAgain')}\n                  </Label>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"bg-gradient-to-br from-primary/10 to-primary/5 p-4 sm:p-8 pt-12 text-center border-b\">\n              <div className=\"mx-auto w-16 h-16 bg-primary/20 rounded-full flex items-center justify-center mb-4\">\n                <Gift className=\"w-8 h-8 text-primary\" />\n              </div>\n              <DialogHeader>\n                <DialogTitle className=\"text-xl sm:text-2xl font-bold text-primary mb-2\">\n                  {t('promo.title')}\n                </DialogTitle>\n                <DialogDescription className=\"text-base sm:text-lg text-foreground/90\">\n                  {t('promo.description')}\n                </DialogDescription>\n              </DialogHeader>\n            </div>\n\n            <form onSubmit={handleSubmit} className=\"p-4 sm:p-6 space-y-4 sm:space-y-6\">\n              <div className=\"space-y-4\">\n                <div className=\"space-y-2\">\n                  <div className=\"flex justify-between items-center\">\n                    <Label htmlFor=\"firstName\" className={language === 'ar' ? 'text-right' : 'text-left'}>\n                      {t('promo.firstName')} <span className=\"text-destructive\">{t('promo.required')}</span>\n                    </Label>\n                    <span className=\"text-xs text-muted-foreground\">\n                      {formData.firstName.length}/20\n                    </span>\n                  </div>\n                  <Input\n                    id=\"firstName\"\n                    value={formData.firstName}\n                    onChange={(e) => setFormData({ ...formData, firstName: e.target.value })}\n                    maxLength={20}\n                    required\n                    dir={language === 'ar' ? 'rtl' : 'ltr'}\n                    placeholder={t('promo.firstNamePlaceholder')}\n                    data-testid=\"input-first-name\"\n                  />\n                </div>\n\n                <div className=\"space-y-2\">\n                  <div className=\"flex justify-between items-center\">\n                    <Label htmlFor=\"lastName\" className={language === 'ar' ? 'text-right' : 'text-left'}>\n                      {t('promo.lastName')} <span className=\"text-destructive\">{t('promo.required')}</span>\n                    </Label>\n                    <span className=\"text-xs text-muted-foreground\">\n                      {formData.lastName.length}/20\n                    </span>\n                  </div>\n                  <Input\n                    id=\"lastName\"\n                    value={formData.lastName}\n                    onChange={(e) => setFormData({ ...formData, lastName: e.target.value })}\n                    maxLength={20}\n                    required\n                    dir={language === 'ar' ? 'rtl' : 'ltr'}\n                    placeholder={t('promo.lastNamePlaceholder')}\n                    data-testid=\"input-last-name\"\n                  />\n                </div>\n\n                <div className=\"space-y-2\">\n                  <div className=\"flex justify-between items-center\">\n                    <Label htmlFor=\"emailAddress\" className={language === 'ar' ? 'text-right' : 'text-left'}>\n                      {t('promo.email')} <span className=\"text-destructive\">{t('promo.required')}</span>\n                    </Label>\n                    <span className=\"text-xs text-muted-foreground\">\n                      {formData.emailAddress.length}/50\n                    </span>\n                  </div>\n                  <Input\n                    id=\"emailAddress\"\n                    type=\"email\"\n                    value={formData.emailAddress}\n                    onChange={(e) => setFormData({ ...formData, emailAddress: e.target.value })}\n                    maxLength={50}\n                    required\n                    dir=\"ltr\"\n                    placeholder={t('promo.emailPlaceholder')}\n                    data-testid=\"input-email\"\n                    className={emailError ? 'border-destructive' : ''}\n                  />\n                  {emailError && (\n                    <p className=\"text-sm text-destructive\" data-testid=\"text-email-error\">\n                      {emailError}\n                    </p>\n                  )}\n                </div>\n\n                <div className=\"space-y-2\">\n                  <div className=\"flex justify-between items-center\">\n                    <Label htmlFor=\"phoneNumber\" className={language === 'ar' ? 'text-right' : 'text-left'}>\n                      {t('promo.phoneNumber')} <span className=\"text-destructive\">{t('promo.required')}</span>\n                    </Label>\n                    <span className=\"text-xs text-muted-foreground\">\n                      {formData.phoneNumber.length}/10\n                    </span>\n                  </div>\n                  <Input\n                    id=\"phoneNumber\"\n                    type=\"tel\"\n                    value={formData.phoneNumber}\n                    onChange={(e) => setFormData({ ...formData, phoneNumber: e.target.value.replace(/\\D/g, '') })}\n                    maxLength={10}\n                    required\n                    dir=\"ltr\"\n                    placeholder={t('promo.phoneNumberPlaceholder')}\n                    data-testid=\"input-phone-number\"\n                    className={phoneError ? 'border-destructive' : ''}\n                  />\n                  {phoneError && (\n                    <p className=\"text-sm text-destructive\" data-testid=\"text-phone-error\">\n                      {phoneError}\n                    </p>\n                  )}\n                </div>\n              </div>\n\n              <Button\n                type=\"submit\"\n                className=\"w-full\"\n                disabled={isSubmitting || !!phoneError || !!emailError}\n                data-testid=\"button-submit-registration\"\n              >\n                {isSubmitting ? t('promo.submitting') : t('promo.submit')}\n              </Button>\n            </form>\n          </>\n        ) : (\n          <div className=\"p-4 sm:p-8 text-center space-y-4 sm:space-y-6\">\n            <div className=\"mx-auto w-20 h-20 bg-primary/20 rounded-full flex items-center justify-center mb-4\">\n              <Gift className=\"w-10 h-10 text-primary\" />\n            </div>\n            \n            <div className=\"space-y-3\">\n              <h3 className=\"text-xl sm:text-2xl font-bold text-primary\">\n                {t('promo.successSubscription')}\n              </h3>\n              <p className=\"text-base sm:text-lg text-foreground/80\">\n                {t('promo.subscriptionCode')}\n              </p>\n              <p className=\"text-xl sm:text-2xl font-bold text-primary\" dir=\"ltr\">\n                {submittedPhone}\n              </p>\n            </div>\n\n            <Button\n              onClick={handleOkClick}\n              className=\"w-full mt-6\"\n              data-testid=\"button-ok-success\"\n            >\n              {t('promo.okButton')}\n            </Button>\n          </div>\n        )}\n      </DialogContent>\n    </Dialog>\n  );\n}\n","size_bytes":14498},"server/objectAcl.ts":{"content":"import { File } from \"@google-cloud/storage\";\n\nconst ACL_POLICY_METADATA_KEY = \"custom:aclPolicy\";\n\nexport enum ObjectPermission {\n  READ = \"read\",\n  WRITE = \"write\",\n}\n\nexport interface ObjectAclPolicy {\n  owner: string;\n  visibility: \"public\" | \"private\";\n}\n\nexport async function setObjectAclPolicy(\n  objectFile: File,\n  aclPolicy: ObjectAclPolicy,\n): Promise<void> {\n  const [exists] = await objectFile.exists();\n  if (!exists) {\n    throw new Error(`Object not found: ${objectFile.name}`);\n  }\n\n  await objectFile.setMetadata({\n    metadata: {\n      [ACL_POLICY_METADATA_KEY]: JSON.stringify(aclPolicy),\n    },\n  });\n}\n\nexport async function getObjectAclPolicy(\n  objectFile: File,\n): Promise<ObjectAclPolicy | null> {\n  const [metadata] = await objectFile.getMetadata();\n  const aclPolicy = metadata?.metadata?.[ACL_POLICY_METADATA_KEY];\n  if (!aclPolicy) {\n    return null;\n  }\n  return JSON.parse(aclPolicy as string);\n}\n\nexport async function canAccessObject({\n  objectFile,\n  requestedPermission,\n}: {\n  objectFile: File;\n  requestedPermission: ObjectPermission;\n}): Promise<boolean> {\n  const aclPolicy = await getObjectAclPolicy(objectFile);\n  if (!aclPolicy) {\n    return false;\n  }\n\n  if (\n    aclPolicy.visibility === \"public\" &&\n    requestedPermission === ObjectPermission.READ\n  ) {\n    return true;\n  }\n\n  return false;\n}\n","size_bytes":1342},"client/src/components/AdminManagement.tsx":{"content":"import { useState, useEffect, ReactNode } from \"react\";\nimport { useQuery, useMutation } from \"@tanstack/react-query\";\nimport { useForm, UseFormReturn } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useLocation } from \"wouter\";\nimport { X } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Form } from \"@/components/ui/form\";\nimport { SidebarProvider, SidebarTrigger } from \"@/components/ui/sidebar\";\nimport { AdminSidebar } from \"@/components/AdminSidebar\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest, queryClient } from \"@/lib/queryClient\";\nimport { ZodSchema } from \"zod\";\nimport ECGAnimation from \"@/components/ECGAnimation\";\n\ninterface AdminManagementProps {\n  entityName: string;\n  entityNamePlural: string;\n  apiEndpoint: string;\n  formSchema: ZodSchema<any>;\n  defaultValues: any;\n  description?: string;\n  transformDataForSubmit?: (data: any) => any;\n  transformDataForEdit?: (entity: any) => any;\n  renderFormFields: (form: UseFormReturn<any>, editingId: number | null, customState?: any) => ReactNode;\n  renderTableColumns: () => { header: string; width?: string }[];\n  renderTableRow: (item: any, onEdit: (item: any) => void, onDelete: (id: number) => void) => ReactNode;\n  customState?: any;\n  onCustomStateChange?: (state: any) => void;\n}\n\nexport function AdminManagement({\n  entityName,\n  entityNamePlural,\n  apiEndpoint,\n  formSchema,\n  defaultValues,\n  description,\n  transformDataForSubmit = (data) => data,\n  transformDataForEdit = (entity) => entity,\n  renderFormFields,\n  renderTableColumns,\n  renderTableRow,\n  customState,\n  onCustomStateChange,\n}: AdminManagementProps) {\n  const { toast } = useToast();\n  const [, setLocation] = useLocation();\n  const [editingId, setEditingId] = useState<number | null>(null);\n\n  useEffect(() => {\n    const isAuthenticated = localStorage.getItem('adminAuthenticated') === 'true';\n    if (!isAuthenticated) {\n      setLocation('/login-admin');\n    }\n  }, [setLocation]);\n\n  const { data: items = [], isLoading } = useQuery<any[]>({\n    queryKey: [apiEndpoint],\n  });\n\n  const form = useForm({\n    resolver: zodResolver(formSchema),\n    defaultValues,\n  });\n\n  const createMutation = useMutation({\n    mutationFn: async (data: any) => {\n      const transformedData = transformDataForSubmit(data);\n      return apiRequest(\"POST\", apiEndpoint, transformedData);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [apiEndpoint] });\n      form.reset();\n      if (onCustomStateChange) {\n        onCustomStateChange(undefined);\n      }\n      toast({\n        title: \"Success\",\n        description: `${entityName} created successfully`,\n      });\n    },\n    onError: () => {\n      toast({\n        title: \"Error\",\n        description: `Failed to create ${entityName.toLowerCase()}`,\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const updateMutation = useMutation({\n    mutationFn: async ({ id, data }: { id: number; data: any }) => {\n      const transformedData = transformDataForSubmit(data);\n      return apiRequest(\"PUT\", `${apiEndpoint}/${id}`, transformedData);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [apiEndpoint] });\n      form.reset();\n      setEditingId(null);\n      if (onCustomStateChange) {\n        onCustomStateChange(undefined);\n      }\n      toast({\n        title: \"Success\",\n        description: `${entityName} updated successfully`,\n      });\n    },\n    onError: () => {\n      toast({\n        title: \"Error\",\n        description: `Failed to update ${entityName.toLowerCase()}`,\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const deleteMutation = useMutation({\n    mutationFn: async (id: number) => {\n      return apiRequest(\"DELETE\", `${apiEndpoint}/${id}`);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [apiEndpoint] });\n      toast({\n        title: \"Success\",\n        description: `${entityName} deleted successfully`,\n      });\n    },\n    onError: () => {\n      toast({\n        title: \"Error\",\n        description: `Failed to delete ${entityName.toLowerCase()}`,\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  function onSubmit(data: any) {\n    if (editingId !== null) {\n      updateMutation.mutate({ id: editingId, data });\n    } else {\n      createMutation.mutate(data);\n    }\n  }\n\n  function handleEdit(item: any) {\n    setEditingId(item.id);\n    const formData = transformDataForEdit(item);\n    form.reset(formData);\n  }\n\n  function handleCancelEdit() {\n    setEditingId(null);\n    form.reset();\n    if (onCustomStateChange) {\n      onCustomStateChange(undefined);\n    }\n  }\n\n  function handleDelete(id: number) {\n    if (confirm(`Are you sure you want to delete this ${entityName.toLowerCase()}?`)) {\n      deleteMutation.mutate(id);\n    }\n  }\n\n  const style = {\n    '--sidebar-width': '16rem',\n    '--sidebar-width-icon': '3rem',\n  };\n\n  const columns = renderTableColumns();\n\n  return (\n    <SidebarProvider style={style as React.CSSProperties}>\n      <div className=\"flex h-screen w-full\">\n        <AdminSidebar />\n        <div className=\"flex flex-col flex-1\">\n          <header className=\"flex items-center gap-4 p-4 border-b bg-[#264653]\">\n            <SidebarTrigger className=\"text-white\" data-testid=\"button-sidebar-toggle\" />\n            <h1 className=\"text-xl font-display text-white\" data-testid=\"text-page-title\">\n              {entityNamePlural} Management\n            </h1>\n          </header>\n          <ECGAnimation />\n          <main className=\"flex-1 overflow-auto\">\n            <div className=\"p-6 space-y-6\">\n              <div>\n                <h2 className=\"text-3xl font-bold text-foreground\">{entityNamePlural}</h2>\n                {description && (\n                  <p className=\"text-muted-foreground mt-1\">{description}</p>\n                )}\n              </div>\n\n              <div className=\"grid lg:grid-cols-2 gap-6\">\n                <Card>\n                  <CardHeader>\n                    <CardTitle>\n                      {editingId !== null ? `Edit ${entityName}` : `Add New ${entityName}`}\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <Form {...form}>\n                      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n                        {renderFormFields(form, editingId, customState)}\n                        <div className=\"flex gap-2\">\n                          <Button\n                            type=\"submit\"\n                            disabled={createMutation.isPending || updateMutation.isPending}\n                            data-testid=\"button-submit\"\n                          >\n                            {editingId !== null ? \"Update\" : \"Create\"}\n                          </Button>\n                          {editingId !== null && (\n                            <Button\n                              type=\"button\"\n                              variant=\"outline\"\n                              onClick={handleCancelEdit}\n                              data-testid=\"button-cancel\"\n                            >\n                              <X className=\"h-4 w-4 mr-2\" />\n                              Cancel\n                            </Button>\n                          )}\n                        </div>\n                      </form>\n                    </Form>\n                  </CardContent>\n                </Card>\n\n                <Card>\n                  <CardHeader>\n                    <CardTitle>Existing {entityNamePlural}</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    {isLoading ? (\n                      <p className=\"text-muted-foreground\">Loading...</p>\n                    ) : items.length === 0 ? (\n                      <p className=\"text-muted-foreground\">No {entityNamePlural.toLowerCase()} yet</p>\n                    ) : (\n                      <div className=\"overflow-x-auto\">\n                        <table className=\"w-full\" data-testid=\"table-items\">\n                          <thead>\n                            <tr className=\"border-b\">\n                              {columns.map((col, idx) => (\n                                <th\n                                  key={idx}\n                                  className=\"text-left py-2 px-2 text-sm font-semibold\"\n                                  style={col.width ? { width: col.width } : undefined}\n                                >\n                                  {col.header}\n                                </th>\n                              ))}\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {items.map((item) => renderTableRow(item, handleEdit, handleDelete))}\n                          </tbody>\n                        </table>\n                      </div>\n                    )}\n                  </CardContent>\n                </Card>\n              </div>\n            </div>\n          </main>\n        </div>\n      </div>\n    </SidebarProvider>\n  );\n}\n","size_bytes":9217},"client/src/components/ECGAnimation.tsx":{"content":"export default function ECGAnimation() {\n  return (\n    <div className=\"w-full overflow-hidden bg-background\">\n      <div className=\"relative h-20 md:h-24\">\n        <svg\n          className=\"w-full h-full absolute inset-0\"\n          viewBox=\"0 0 1200 140\"\n          preserveAspectRatio=\"xMidYMid meet\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <defs>\n            <pattern\n              id=\"ecg-pattern-header\"\n              x=\"0\"\n              y=\"0\"\n              width=\"400\"\n              height=\"140\"\n              patternUnits=\"userSpaceOnUse\"\n            >\n              <animateTransform\n                attributeName=\"patternTransform\"\n                type=\"translate\"\n                from=\"0 0\"\n                to=\"400 0\"\n                dur=\"12s\"\n                repeatCount=\"indefinite\"\n              />\n              <path\n                className=\"ecg-path\"\n                d=\"M0,70 L60,70 L65,65 L70,70 L75,70 L80,70 L85,50 L90,90 L95,70 L100,70 L105,75 L110,70 L115,70 L400,70\"\n                fill=\"none\"\n                stroke=\"#18ac61\"\n                strokeWidth=\"4\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              />\n            </pattern>\n          </defs>\n          \n          <rect\n            x=\"-400\"\n            y=\"0\"\n            width=\"2000\"\n            height=\"140\"\n            fill=\"url(#ecg-pattern-header)\"\n          />\n        </svg>\n      </div>\n      \n      <style>{`\n        @media (min-width: 768px) {\n          .ecg-path {\n            stroke-width: 2.5;\n          }\n        }\n      `}</style>\n    </div>\n  );\n}\n","size_bytes":1613},"server/email-service.ts":{"content":"import { Client } from '@microsoft/microsoft-graph-client';\nimport { ClientSecretCredential } from '@azure/identity';\n\n// Initialize Azure credentials\nconst credential = new ClientSecretCredential(\n  process.env.AZURE_TENANT_ID!,\n  process.env.AZURE_CLIENT_ID!,\n  process.env.AZURE_CLIENT_SECRET!\n);\n\n// Initialize Graph client\nconst getGraphClient = () => {\n  return Client.initWithMiddleware({\n    authProvider: {\n      getAccessToken: async () => {\n        const token = await credential.getToken('https://graph.microsoft.com/.default');\n        return token.token;\n      }\n    }\n  });\n};\n\ninterface DiscountEmailParams {\n  firstName: string;\n  lastName: string;\n  email: string;\n  discountCode: string;\n  language: 'en' | 'ar';\n}\n\nconst createEmailTemplate = (params: DiscountEmailParams): string => {\n  const { firstName, lastName, discountCode, language } = params;\n  \n  if (language === 'ar') {\n    return `\n<!DOCTYPE html>\n<html lang=\"ar\" dir=\"rtl\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n  <link href=\"https://fonts.googleapis.com/css2?family=Rubik:wght@400;500;600&family=Poppins:wght@300;400;600;700&display=swap\" rel=\"stylesheet\">\n  <title>رمز الخصم الخاص بك</title>\n</head>\n<body style=\"margin: 0; padding: 0; font-family: 'Poppins', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; background-color: #f5f5f5;\">\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" style=\"background-color: #f5f5f5; padding: 40px 20px;\">\n    <tr>\n      <td align=\"center\">\n        <table width=\"600\" cellpadding=\"0\" cellspacing=\"0\" style=\"background-color: #ffffff; border-radius: 12px; overflow: hidden; box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\">\n          <!-- Header -->\n          <tr>\n            <td style=\"background: linear-gradient(135deg, #17a35b 0%, #139049 100%); padding: 40px 30px; text-align: center;\">\n              <h1 style=\"margin: 0; color: #ffffff; font-size: 32px; font-weight: 600; font-family: 'Rubik', sans-serif;\">🎉 مرحباً بك في عائلة د. باوز!</h1>\n            </td>\n          </tr>\n          \n          <!-- Body -->\n          <tr>\n            <td style=\"padding: 40px 30px;\">\n              <p style=\"margin: 0 0 20px; color: #333333; font-size: 18px; line-height: 1.6;\">\n                عزيزي/عزيزتي ${firstName} ${lastName}،\n              </p>\n              \n              <p style=\"margin: 0 0 20px; color: #555555; font-size: 16px; line-height: 1.6;\">\n                شكراً لتسجيلك في عرض افتتاح فرعنا الجديد في جدة! 🎊\n              </p>\n              \n              <p style=\"margin: 0 0 30px; color: #555555; font-size: 16px; line-height: 1.6;\">\n                نحن متحمسون لخدمتك ورعاية حيواناتك الأليفة بأفضل خدمات بيطرية في المنطقة.\n              </p>\n              \n              <!-- Discount Code Box -->\n              <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" style=\"margin: 30px 0;\">\n                <tr>\n                  <td style=\"background: linear-gradient(135deg, #f4a261 0%, #e76f51 100%); border-radius: 8px; padding: 30px; text-align: center;\">\n                    <p style=\"margin: 0 0 10px; color: #ffffff; font-size: 16px; font-weight: 500;\">رمز الخصم الخاص بك (رقم هاتفك)</p>\n                    <p style=\"margin: 0; color: #ffffff; font-size: 36px; font-weight: 700; letter-spacing: 2px; font-family: 'Courier New', monospace;\">${discountCode}</p>\n                  </td>\n                </tr>\n              </table>\n              \n              <!-- Discount Details -->\n              <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" style=\"margin: 30px 0; background-color: #f8f9fa; border-radius: 8px; padding: 20px;\">\n                <tr>\n                  <td>\n                    <h3 style=\"margin: 0 0 15px; color: #17a35b; font-size: 20px; font-family: 'Rubik', sans-serif;\">✨ تفاصيل العرض</h3>\n                    <ul style=\"margin: 0; padding: 0 0 0 25px; color: #555555; line-height: 1.8;\">\n                      <li style=\"margin-bottom: 10px;\">خصم <strong>20%</strong> على جميع خدماتنا</li>\n                      <li style=\"margin-bottom: 10px;\">صالح لمدة <strong>6 أشهر</strong> من تاريخ التسجيل</li>\n                      <li style=\"margin-bottom: 10px;\">يمكن استخدامه في جميع زياراتك</li>\n                      <li>متاح في جميع فروع جدة</li>\n                    </ul>\n                  </td>\n                </tr>\n              </table>\n              \n              <p style=\"margin: 30px 0 0; color: #555555; font-size: 16px; line-height: 1.6;\">\n                احفظ هذا الرمز وأظهره عند زيارتك القادمة للاستفادة من الخصم الحصري!\n              </p>\n              \n              <p style=\"margin: 30px 0 0; color: #555555; font-size: 16px; line-height: 1.6;\">\n                نتطلع لرؤيتك قريباً! 🐾\n              </p>\n              \n              <p style=\"margin: 20px 0 0; color: #555555; font-size: 16px; line-height: 1.6;\">\n                مع أطيب التحيات،<br>\n                <strong style=\"color: #17a35b;\">فريق د. باوز</strong>\n              </p>\n            </td>\n          </tr>\n          \n          <!-- Footer -->\n          <tr>\n            <td style=\"background-color: #264653; padding: 30px; text-align: center;\">\n              <p style=\"margin: 0 0 10px; color: #ffffff; font-size: 16px; font-weight: 500;\">تواصل معنا</p>\n              <p style=\"margin: 0 0 5px; color: #a8dadc; font-size: 14px;\">📍 الرياض - الصحافة: 0552030564</p>\n              <p style=\"margin: 0 0 5px; color: #a8dadc; font-size: 14px;\">📍 الرياض - المطار: 0531353667</p>\n              <p style=\"margin: 0 0 15px; color: #a8dadc; font-size: 14px;\">📧 info@drpaws-sa.com</p>\n              <p style=\"margin: 20px 0 0; color: #a8dadc; font-size: 12px;\">© 2025 د. باوز - جميع الحقوق محفوظة</p>\n            </td>\n          </tr>\n        </table>\n      </td>\n    </tr>\n  </table>\n</body>\n</html>\n    `;\n  } else {\n    return `\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n  <link href=\"https://fonts.googleapis.com/css2?family=Rubik:wght@400;500;600&family=Poppins:wght@300;400;600;700&display=swap\" rel=\"stylesheet\">\n  <title>Your Discount Code</title>\n</head>\n<body style=\"margin: 0; padding: 0; font-family: 'Poppins', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; background-color: #f5f5f5;\">\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" style=\"background-color: #f5f5f5; padding: 40px 20px;\">\n    <tr>\n      <td align=\"center\">\n        <table width=\"600\" cellpadding=\"0\" cellspacing=\"0\" style=\"background-color: #ffffff; border-radius: 12px; overflow: hidden; box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\">\n          <!-- Header -->\n          <tr>\n            <td style=\"background: linear-gradient(135deg, #17a35b 0%, #139049 100%); padding: 40px 30px; text-align: center;\">\n              <h1 style=\"margin: 0; color: #ffffff; font-size: 32px; font-weight: 600; font-family: 'Rubik', sans-serif;\">🎉 Welcome to Dr. Paws Family!</h1>\n            </td>\n          </tr>\n          \n          <!-- Body -->\n          <tr>\n            <td style=\"padding: 40px 30px;\">\n              <p style=\"margin: 0 0 20px; color: #333333; font-size: 18px; line-height: 1.6;\">\n                Dear ${firstName} ${lastName},\n              </p>\n              \n              <p style=\"margin: 0 0 20px; color: #555555; font-size: 16px; line-height: 1.6;\">\n                Thank you for registering for our Jeddah branch opening special offer! 🎊\n              </p>\n              \n              <p style=\"margin: 0 0 30px; color: #555555; font-size: 16px; line-height: 1.6;\">\n                We're excited to serve you and care for your beloved pets with the best veterinary services in the region.\n              </p>\n              \n              <!-- Discount Code Box -->\n              <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" style=\"margin: 30px 0;\">\n                <tr>\n                  <td style=\"background: linear-gradient(135deg, #f4a261 0%, #e76f51 100%); border-radius: 8px; padding: 30px; text-align: center;\">\n                    <p style=\"margin: 0 0 10px; color: #ffffff; font-size: 16px; font-weight: 500;\">Your Discount Code (Your Phone Number)</p>\n                    <p style=\"margin: 0; color: #ffffff; font-size: 36px; font-weight: 700; letter-spacing: 2px; font-family: 'Courier New', monospace;\">${discountCode}</p>\n                  </td>\n                </tr>\n              </table>\n              \n              <!-- Discount Details -->\n              <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" style=\"margin: 30px 0; background-color: #f8f9fa; border-radius: 8px; padding: 20px;\">\n                <tr>\n                  <td>\n                    <h3 style=\"margin: 0 0 15px; color: #17a35b; font-size: 20px; font-family: 'Rubik', sans-serif;\">✨ Offer Details</h3>\n                    <ul style=\"margin: 0; padding: 0 0 0 25px; color: #555555; line-height: 1.8;\">\n                      <li style=\"margin-bottom: 10px;\"><strong>20% discount</strong> on all our services</li>\n                      <li style=\"margin-bottom: 10px;\">Valid for <strong>6 months</strong> from registration date</li>\n                      <li style=\"margin-bottom: 10px;\">Can be used on all your visits</li>\n                      <li>Available at all Jeddah Branches</li>\n                    </ul>\n                  </td>\n                </tr>\n              </table>\n              \n              <p style=\"margin: 30px 0 0; color: #555555; font-size: 16px; line-height: 1.6;\">\n                Save this code and show it during your next visit to enjoy your exclusive discount!\n              </p>\n              \n              <p style=\"margin: 30px 0 0; color: #555555; font-size: 16px; line-height: 1.6;\">\n                We look forward to seeing you soon! 🐾\n              </p>\n              \n              <p style=\"margin: 20px 0 0; color: #555555; font-size: 16px; line-height: 1.6;\">\n                Best regards,<br>\n                <strong style=\"color: #17a35b;\">Dr. Paws Team</strong>\n              </p>\n            </td>\n          </tr>\n          \n          <!-- Footer -->\n          <tr>\n            <td style=\"background-color: #264653; padding: 30px; text-align: center;\">\n              <p style=\"margin: 0 0 10px; color: #ffffff; font-size: 16px; font-weight: 500;\">Contact Us</p>\n              <p style=\"margin: 0 0 5px; color: #a8dadc; font-size: 14px;\">📍 Riyadh - Al-Sahafa: 0552030564</p>\n              <p style=\"margin: 0 0 5px; color: #a8dadc; font-size: 14px;\">📍 Riyadh - Al-Mather: 0531353667</p>\n              <p style=\"margin: 0 0 15px; color: #a8dadc; font-size: 14px;\">📧 info@drpaws-sa.com</p>\n              <p style=\"margin: 20px 0 0; color: #a8dadc; font-size: 12px;\">© 2025 Dr. Paws - All Rights Reserved</p>\n            </td>\n          </tr>\n        </table>\n      </td>\n    </tr>\n  </table>\n</body>\n</html>\n    `;\n  }\n};\n\nexport const sendDiscountConfirmationEmail = async (params: DiscountEmailParams): Promise<void> => {\n  const { email, firstName, language } = params;\n  \n  const subject = language === 'ar' \n    ? `🎉 رمز الخصم الخاص بك - د. باوز`\n    : `🎉 Your Discount Code - Dr. Paws`;\n  \n  const htmlContent = createEmailTemplate(params);\n  \n  try {\n    const client = getGraphClient();\n    \n    const sendMail = {\n      message: {\n        subject: subject,\n        body: {\n          contentType: 'HTML',\n          content: htmlContent\n        },\n        toRecipients: [\n          {\n            emailAddress: {\n              address: email\n            }\n          }\n        ]\n      },\n      saveToSentItems: 'true'\n    };\n\n    await client\n      .api(`/users/${process.env.MICROSOFT365_EMAIL}/sendMail`)\n      .post(sendMail);\n    \n    console.log(`Discount confirmation email sent successfully to ${email}`);\n  } catch (error) {\n    console.error('Error sending email:', error);\n    throw new Error('Failed to send confirmation email');\n  }\n};\n","size_bytes":12661}},"version":2}
=======
{"file_contents":{"client/src/contexts/LanguageContext.tsx":{"content":"import { createContext, useContext, useState, useEffect, ReactNode } from 'react';\n\ntype Language = 'en' | 'ar';\n\ninterface LanguageContextType {\n  language: Language;\n  setLanguage: (lang: Language) => void;\n  t: (key: string) => string;\n}\n\nconst LanguageContext = createContext<LanguageContextType | undefined>(undefined);\n\nconst translations = {\n  en: {\n    // Navigation\n    'nav.home': 'Home',\n    'nav.about': 'About',\n    'nav.services': 'Services',\n    'nav.blog': 'Blog',\n    'nav.contact': 'Contact Us',\n    'nav.book': 'Book an Appointment',\n    \n    // Hero\n    'hero.headline': 'Dr. Paws Veterinary Clinic',\n    'hero.tagline': 'Compassionate Care for Your Beloved Pets',\n    'hero.subheadline': 'Providing the Highest Quality Veterinary Care',\n    'hero.description': \"Dr. Paws Veterinary Clinic offers cutting-edge technology in veterinary care. Through our expert team and advanced diagnostic and treatment equipment, we ensure comprehensive care from routine checkups to precise surgeries.\",\n    'hero.cta': 'Book Your Appointment Today',\n    'hero.readMore': 'Read More',\n    \n    // About\n    'about.headline': 'Committed to Your Pet\\'s Well-being, Every Step of the Way',\n    'about.description': \"At Dr. Paws Veterinary Clinic, we understand the special bond you share with your pets. Our experienced and compassionate team is dedicated to providing comprehensive, high-quality veterinary care to keep your furry companions healthy and happy throughout their lives. We strive to create a comfortable and welcoming environment for both you and your pet.\",\n    'about.readMore': 'Read More',\n    \n    // Services\n    'services.headline': 'What we offer?',\n    'services.description': \"Dr. Paws Veterinary Clinic provides a comprehensive range of services to keep your pets healthy at every stage of life. From routine checkups to advanced diagnostics and surgery, we're here for all your pet's healthcare needs.\",\n    'services.readMore': 'Read more',\n    'services.wellness.title': 'Wellness Exams',\n    'services.wellness.description': 'Comprehensive health checkups to keep your pet in optimal condition.',\n    'services.emergency.title': 'Emergency Care',\n    'services.emergency.description': '24/7 emergency services for urgent medical situations.',\n    'services.vaccinations.title': 'Vaccinations',\n    'services.vaccinations.description': 'Complete vaccination programs to protect your pets from diseases.',\n    'services.surgery.title': 'Surgery',\n    'services.surgery.description': 'Advanced surgical procedures with state-of-the-art equipment.',\n    'services.diagnostics.title': 'Diagnostics',\n    'services.diagnostics.description': 'Advanced diagnostic imaging and laboratory services.',\n    'services.dental.title': 'Dental Care',\n    'services.dental.description': 'Professional dental cleaning and oral health services.',\n    \n    // Service Packages\n    'packages.headline': 'Service Packages',\n    'packages.description': \"Choose the perfect care package for your pet's needs. All packages include comprehensive veterinary care tailored to keep your beloved companion healthy and happy.\",\n    'packages.basic.name': 'Basic Care',\n    'packages.basic.price': '299',\n    'packages.basic.period': 'SAR/year',\n    'packages.basic.feature1': 'Annual Wellness Exam',\n    'packages.basic.feature2': 'Basic Vaccinations',\n    'packages.basic.feature3': 'Parasite Prevention',\n    'packages.basic.feature4': 'Dental Consultation',\n    'packages.basic.feature5': 'Nutrition Guidance',\n    'packages.complete.name': 'Complete Care',\n    'packages.complete.price': '599',\n    'packages.complete.period': 'SAR/year',\n    'packages.complete.feature1': 'Bi-Annual Wellness Exams',\n    'packages.complete.feature2': 'Complete Vaccination Package',\n    'packages.complete.feature3': 'Advanced Parasite Prevention',\n    'packages.complete.feature4': 'Dental Cleaning Included',\n    'packages.complete.feature5': 'Blood Work & Diagnostics',\n    'packages.complete.feature6': 'Emergency Care Discount',\n    'packages.premium.name': 'Premium Care',\n    'packages.premium.price': '999',\n    'packages.premium.period': 'SAR/year',\n    'packages.premium.feature1': 'Quarterly Wellness Exams',\n    'packages.premium.feature2': 'Premium Vaccination Package',\n    'packages.premium.feature3': 'Year-Round Parasite Prevention',\n    'packages.premium.feature4': 'Professional Dental Care',\n    'packages.premium.feature5': 'Comprehensive Lab Work',\n    'packages.premium.feature6': 'Priority Emergency Care',\n    'packages.premium.feature7': '24/7 Vet Consultation',\n    'packages.popular': 'Most Popular',\n    'packages.bookNow': 'Book Now',\n    \n    // Media\n    'media.headline': 'Our Media',\n    'media.description': 'Take a closer look at our state-of-the-art facilities and see how we provide exceptional care for your beloved pets in a warm and welcoming environment.',\n    \n    // Why Choose Us\n    'why.headline': 'Why Choose Dr. Paws Veterinary Clinic?',\n    'why.reason1.title': 'Comprehensive & Affectionate Care',\n    'why.reason1.description': 'We treat every pet as if it were our own, with kindness, respect, and understanding.',\n    'why.reason2.title': 'Experienced Team',\n    'why.reason2.description': 'Our veterinarians and support staff have years of experience and are passionate about animal health.',\n    'why.reason3.title': 'State-of-the-Art Facility',\n    'why.reason3.description': 'We utilize advanced technology and equipment to provide the best possible care.',\n    'why.reason4.title': 'Tailored Plan',\n    'why.reason4.description': 'We tailor our treatment plans to meet the unique needs of each pet.',\n    'why.readMore': 'Read More',\n    \n    // Reviews\n    'reviews.headline': 'What Our Customers Say',\n    'reviews.1.name': 'Ahmed Al-Rashid',\n    'reviews.1.text': 'Excellent service! The staff was very caring and professional with my cat. Highly recommend Dr. Paws!',\n    'reviews.2.name': 'Sarah Johnson',\n    'reviews.2.text': 'My dog received the best care here. The doctors are knowledgeable and the clinic is very clean.',\n    'reviews.3.name': 'Mohammed Hassan',\n    'reviews.3.text': 'Great experience overall. The veterinarian explained everything clearly and my pet feels much better.',\n    'reviews.4.name': 'Emily Rodriguez',\n    'reviews.4.text': 'The emergency service was outstanding. They took care of my rabbit immediately and professionally.',\n    'reviews.5.name': 'Khalid Abdullah',\n    'reviews.5.text': 'Best veterinary clinic in Riyadh! The staff is friendly and they truly care about animals.',\n    'reviews.6.name': 'Jennifer Lee',\n    'reviews.6.text': 'Very impressed with the facilities and the level of care. My parrot received excellent treatment.',\n    'reviews.7.name': 'Omar Saeed',\n    'reviews.7.text': 'Professional team and modern equipment. They made my pet feel comfortable during the visit.',\n    'reviews.8.name': 'Lisa Martinez',\n    'reviews.8.text': 'Wonderful experience! The grooming service was perfect and my dog looks amazing. Thank you!',\n    \n    // Contact\n    'contact.headline': 'Contact Us',\n    'contact.subheadline': 'Contact Dr. Paws Veterinary Clinic & Schedule Your Pet\\'s Appointment Today!',\n    'contact.name': 'Name',\n    'contact.phone': 'Phone Number',\n    'contact.email': 'Email',\n    'contact.message': 'Message',\n    'contact.submit': 'Submit',\n    'contact.success': 'Thank you! We will contact you soon.',\n    \n    // Book Now Page\n    'bookNow.title': 'Book Now',\n    'bookNow.welcome': 'We\\'re happy that you want to book and be part of our family.',\n    'bookNow.chooseBranch': 'Choose from our branches for booking',\n    'bookNow.bookingMethods': 'Choose Your Preferred Booking Method',\n    'bookNow.whatsappBooking': 'Book via WhatsApp',\n    'bookNow.phoneBooking': 'Book by Phone',\n    'bookNow.programBooking': 'Book through our program',\n    'bookNow.riyadh': 'Riyadh',\n    'bookNow.riyadhBranches': 'Riyadh Branches',\n    'bookNow.matherBranch': 'Al-Mather Branch',\n    'bookNow.sahafahBranch': 'Al-Sahafa Branch',\n    'bookNow.sahafahWhatsApp': '0552030564',\n    'bookNow.matherWhatsApp': '0531353667',\n    'bookNow.sahafahPhone': '0552030564',\n    'bookNow.matherPhone': '0531353667',\n    'bookNow.jeddah': 'Jeddah',\n    'bookNow.jeddahBranches': 'Jeddah Branches',\n    'bookNow.comingSoon': 'Coming Soon',\n    \n    // About Page\n    'aboutPage.header': 'Dr. Paws Veterinary Care Center',\n    'aboutPage.subheader': 'Expertise You Can Trust',\n    'aboutPage.whoWeAre.title': 'About Dr. Paws – Who We Are',\n    'aboutPage.whoWeAre.subtitle': 'Dr. Paws Veterinary Clinic: Your Partner in Pet Care',\n    'aboutPage.whoWeAre.para1': 'We believe that every pet deserves a happy and healthy life. More than just a veterinary clinic, we are your partners in caring for your furry friend. Our dedicated team is committed to providing comprehensive, high-quality care, from routine check-ups to complex surgeries.',\n    'aboutPage.whoWeAre.para2': 'With years of experience in veterinary care, Dr. Paws offers a wide range of services to meet all your pet\\'s needs. Using the latest technology and equipment, we diagnose and treat various health conditions, ensuring your pet\\'s health and well-being throughout their life. We are proud to be a trusted clinic for veterinary care in Riyadh.',\n    'aboutPage.whoWeAre.para3': 'We strive to create a welcoming and comfortable environment for both you and your furry companions, making every visit a positive experience. We are proud to be a trusted veterinary care center in the Riyadh community.',\n    'aboutPage.vision.title': 'Our Vision',\n    'aboutPage.vision.content': 'Dr. Paws clinics strive to be the premier destination for pet care, providing the highest quality healthcare for our furry friends.',\n    'aboutPage.mission.title': 'Our Mission',\n    'aboutPage.mission.content': 'Our mission is to deliver compassionate, advanced veterinary care. We are committed to providing the highest quality medical services to pets, from routine check-ups to specialized treatments, all carried out by our experienced team in a caring environment.',\n    'aboutPage.whyChoose.title': 'Why Choose Dr. Paws Veterinary Clinic?',\n    'aboutPage.whyChoose.reason1.title': 'Compassionate Care',\n    'aboutPage.whyChoose.reason1.description': 'We treat every pet as if they were our own, with kindness, respect, and understanding.',\n    'aboutPage.whyChoose.reason2.title': 'Experienced Team',\n    'aboutPage.whyChoose.reason2.description': 'Our veterinarians and support staff have years of experience and are passionate about animal health.',\n    'aboutPage.whyChoose.reason3.title': 'State-of-the-Art Facility',\n    'aboutPage.whyChoose.reason3.description': 'We utilize advanced technology and equipment to provide the best possible care.',\n    'aboutPage.whyChoose.reason4.title': 'Personalized Approach',\n    'aboutPage.whyChoose.reason4.description': 'We tailor our treatment plans to meet the unique needs of each pet.',\n    'aboutPage.doctors.title': 'Our Doctors',\n    'aboutPage.doctors.description': 'Our team of experienced and compassionate veterinarians is the heart of Dr. Paws Veterinary Care Center. They are dedicated to providing the highest standard of care and are passionate about improving the lives of animals. With diverse areas of expertise, our doctors work collaboratively to ensure your pet receives the best possible treatment.',\n    'aboutPage.doctors.noInfo': 'Doctor profiles coming soon',\n    'aboutPage.partners.title': 'Our Partners',\n    'aboutPage.partners.noInfo': 'Partner information coming soon',\n    'aboutPage.careers.title': 'Careers / Join Our Team',\n    'aboutPage.careers.description': 'Looking for a rewarding career in animal health? Dr. Paws Veterinary Care Center offers exciting opportunities for professional growth and development in a dynamic and fast-paced environment.',\n    'aboutPage.careers.personalInfo': 'Personal Information',\n    'aboutPage.careers.fullName': 'Full Name',\n    'aboutPage.careers.email': 'Email Address',\n    'aboutPage.careers.phone': 'Phone Number',\n    'aboutPage.careers.professionalInfo': 'Professional Information',\n    'aboutPage.careers.resume': 'Resume/CV Upload',\n    'aboutPage.careers.coverLetter': 'Cover Letter (Optional)',\n    'aboutPage.careers.position': 'Desired Position (if known)',\n    'aboutPage.careers.startDate': 'Available Start Date',\n    'aboutPage.careers.experience': 'Relevant Experience',\n    'aboutPage.careers.experiencePlaceholder': 'e.g., veterinary technician, veterinary assistant, receptionist',\n    'aboutPage.careers.certifications': 'Veterinary Certifications (if applicable)',\n    'aboutPage.careers.education': 'Education Level and Institution',\n    'aboutPage.careers.interests': 'Areas of Interest',\n    'aboutPage.careers.interestsPlaceholder': 'e.g., surgery, internal medicine, emergency care',\n    'aboutPage.careers.submit': 'Submit Application',\n    \n    // Services Page\n    'servicesPage.header': 'Our Services',\n    'servicesPage.subheader': 'Experience exceptional veterinary services at Dr. Paws. We offer a full range of care for your pets, from routine checkups to advanced treatments.',\n    'servicesPage.bookAppointment': 'Book an appointment',\n    \n    'servicesPage.examinations.title': 'Periodic Medical Examinations',\n    'servicesPage.examinations.description': 'At Dr. Paws, we believe preventative care is essential for a long and healthy life for all pets. Our periodic pet examinations, also known as wellness exams or checkups, are a crucial part of our comprehensive veterinary services. They allow our veterinarians to assess your pet\\'s overall health, detect potential problems early, and provide personalized recommendations.',\n    'servicesPage.examinations.canine': 'Canine Examinations: Vital signs, cardiopulmonary auscultation, ophthalmologic, otoscopic, oral, dermatological, abdominal, and musculoskeletal evaluations.',\n    'servicesPage.examinations.feline': 'Feline Examinations: Gentle checkups covering vital signs, eyes, ears, oral health, abdomen, coat, and skin.',\n    'servicesPage.examinations.avian': 'Avian Examinations: Specialized care including physical examination, feather and beak assessment, weight, gland checks, and abdominal palpation.',\n    \n    'servicesPage.grooming.title': 'Shower & Grooming Services',\n    'servicesPage.grooming.description': 'Maintain your pet\\'s hygiene and comfort with our grooming and cleaning services.',\n    'servicesPage.grooming.feature1': 'Nail clipping',\n    'servicesPage.grooming.feature2': 'Ear cleaning',\n    'servicesPage.grooming.feature3': 'Bath and drying with safe shampoos',\n    'servicesPage.grooming.feature4': 'Hair combing and grooming (breed-specific)',\n    \n    'servicesPage.diagnostics.title': 'Diagnostic Tests',\n    'servicesPage.diagnostics.description': 'We provide accurate, rapid diagnostic testing with advanced technology:',\n    'servicesPage.diagnostics.lab': 'Laboratory Testing: Blood chemistry, CBC, urine analysis, parasite and fungal testing',\n    'servicesPage.diagnostics.imaging': 'Imaging: X-rays, dental X-rays, ultrasound',\n    'servicesPage.diagnostics.advanced': 'Advanced Diagnostics: Microscopy and endoscopy',\n    \n    'servicesPage.surgery.title': 'Medical Surgeries',\n    'servicesPage.surgery.description': 'Our surgical team performs a wide range of operations using modern, safe techniques:',\n    'servicesPage.surgery.feature1': 'Sterilization (spay/neuter)',\n    'servicesPage.surgery.feature2': 'Orthopedic surgery',\n    'servicesPage.surgery.feature3': 'Digestive system operations',\n    'servicesPage.surgery.feature4': 'Rhinoplasty (for brachycephalic breeds)',\n    'servicesPage.surgery.feature5': 'Urinary tract surgery',\n    \n    'servicesPage.dental.title': 'Dental Services',\n    'servicesPage.dental.description': 'Comprehensive dental care to protect your pet\\'s teeth and gums:',\n    'servicesPage.dental.feature1': 'Professional teeth cleaning',\n    'servicesPage.dental.feature2': 'Dental check-ups',\n    'servicesPage.dental.feature3': 'Scaling and root planing',\n    'servicesPage.dental.feature4': 'Tooth extractions and oral surgery',\n    \n    'servicesPage.vaccination.title': 'Periodic Vaccinations',\n    'servicesPage.vaccination.description': 'Protect your pets with essential vaccinations and deworming schedules:',\n    'servicesPage.vaccination.feature1': 'Cat vaccines (Trivalent & Quadrivalent)',\n    'servicesPage.vaccination.feature2': 'Dog vaccines (Pentavalent & Rabies)',\n    'servicesPage.vaccination.feature3': 'Deworming medications',\n    \n    'servicesPage.travel.title': 'Pet Travel Procedures',\n    'servicesPage.travel.description': 'Comprehensive travel assistance for domestic and international trips:',\n    'servicesPage.travel.feature1': 'Health certificates',\n    'servicesPage.travel.feature2': 'Rabies testing and documentation',\n    'servicesPage.travel.feature3': 'Assistance with travel forms and destination requirements',\n    \n    'servicesPage.boarding.title': 'Boarding Services',\n    'servicesPage.boarding.description': 'Comfortable and safe accommodation options for your pets:',\n    'servicesPage.boarding.therapeutic': 'Therapeutic Pet Hotel: Post-surgery care, chronic condition management, and close monitoring',\n    'servicesPage.boarding.fungi': 'Fungi Treatment Hotel: Isolated treatment rooms with specialized disinfection and medication',\n    \n    'servicesPage.intensiveCare.title': 'Intensive Care',\n    'servicesPage.intensiveCare.description': 'Dedicated ICU care for critical pets:',\n    'servicesPage.intensiveCare.feature1': 'Organ failure management (kidney, liver, heart)',\n    'servicesPage.intensiveCare.feature2': 'Metabolic and endocrine disorders',\n    'servicesPage.intensiveCare.feature3': 'Severe injuries and trauma',\n    'servicesPage.intensiveCare.feature4': 'Post-operative care',\n    \n    'servicesPage.emergency.title': 'Emergency Services',\n    'servicesPage.emergency.description': '24/7 emergency care for urgent cases such as:',\n    'servicesPage.emergency.feature1': 'Trauma',\n    'servicesPage.emergency.feature2': 'Breathing difficulties',\n    'servicesPage.emergency.feature3': 'Bleeding or poisoning',\n    'servicesPage.emergency.feature4': 'Seizures and bloat',\n    'servicesPage.emergency.numbers': 'Emergency Numbers:',\n    'servicesPage.emergency.sahafa': 'Al-Sahafa Branch: 05520 30564',\n    'servicesPage.emergency.mather': 'Al-Mather Branch: 05313 53667',\n    \n    'servicesPage.homeCare.title': 'Home Care Services',\n    'servicesPage.homeCare.description': 'Convenient veterinary care at home:',\n    'servicesPage.homeCare.feature1': 'Wellness exams',\n    'servicesPage.homeCare.feature2': 'Vaccinations',\n    'servicesPage.homeCare.feature3': 'Sample collection (blood, urine, fecal)',\n    \n    // Footer\n    'footer.description': 'From wellness exams to advanced treatments, Dr. Paws provides comprehensive veterinary care for your pet\\'s every need.',\n    'footer.contactInfo': 'Contact Information',\n    'footer.call': 'Call',\n    'footer.generalPhone': '920 003 045',\n    'footer.emergency': 'Emergency: 24/7',\n    'footer.mobile': 'Mobile',\n    'footer.sahafahBranch': 'Al-Sahafa Branch',\n    'footer.sahafahAddress': 'Dr.Paws Veterinary Clinic, Al Thoumamah Rd, As Sahafah, Riyadh 13315',\n    'footer.sahafahPhone': '05 5203 0564',\n    'footer.sahafahMapUrl': 'https://www.google.com/maps/search/?api=1&query=Dr.Paws+Veterinary+Clinic,Al+Thoumamah+Rd,As+Sahafah,Riyadh+13315',\n    'footer.matherBranch': 'Al-Mather Branch',\n    'footer.matherAddress': 'Dr.Paws Veterinary Clinic, Prince Sultan Bin Abdulaziz Rd, Al Mathar Ash Shamali, Riyadh 12314',\n    'footer.matherPhone': '05 3135 3667',\n    'footer.matherMapUrl': 'https://maps.app.goo.gl/PzCrrqSLmnCE487c9',\n    'footer.hours': 'Working Hours',\n    'footer.satThu': 'Saturday - Thursday : From 09:00 AM to 11:00 PM',\n    'footer.fri': 'Friday : From 03:00 PM to 11:00 PM',\n    'footer.email': 'info@drpaws-sa.com',\n    'footer.follow': 'Stay in touch',\n    \n    // Promotional Modal\n    'promo.title': 'Jeddah Branch Opening!',\n    'promo.description': 'Coming soon! Register now and get 20% discount for 6 months after opening',\n    'promo.firstName': 'First Name',\n    'promo.lastName': 'Last Name',\n    'promo.email': 'Email Address',\n    'promo.phoneNumber': 'Phone Number',\n    'promo.required': '*',\n    'promo.firstNamePlaceholder': 'Enter your first name',\n    'promo.lastNamePlaceholder': 'Enter your last name',\n    'promo.emailPlaceholder': 'example@email.com',\n    'promo.phoneNumberPlaceholder': '05xxxxxxxx',\n    'promo.submit': 'Register Now and Get Discount',\n    'promo.submitting': 'Registering...',\n    'promo.successTitle': 'Registration Successful!',\n    'promo.successMessage': 'We will contact you soon about the special opening offer',\n    'promo.errorTitle': 'Error',\n    'promo.errorGeneric': 'Registration failed, please try again',\n    'promo.errorDuplicate': 'Phone number already registered',\n    'promo.phoneAlreadyRegistered': 'This number has already been registered before.',\n    'promo.phoneNumberMustBe10Digits': 'The phone number must be 10 digits.',\n    'promo.emailAlreadyRegistered': 'This email has already been registered before.',\n    'promo.invalidEmail': 'Please enter a valid email address.',\n    'promo.close': 'Close',\n    'promo.successSubscription': 'You have successfully subscribed to the offer!',\n    'promo.subscriptionCode': 'Your subscription code is',\n    'promo.okButton': 'OK',\n    'promo.doNotShowAgain': 'Do not show again',\n  },\n  ar: {\n    // Navigation\n    'nav.home': 'الرئيسية',\n    'nav.about': 'من نحن',\n    'nav.services': 'الخدمات',\n    'nav.blog': 'المدونة',\n    'nav.contact': 'تواصل معنا',\n    'nav.book': 'احجز موعد',\n    \n    // Hero\n    'hero.headline': 'عيادات د. باوز البيطرية',\n    'hero.tagline': 'رعاية من القلب لحيواناتكم الأليفة',\n    'hero.subheadline': 'عيادة بيطرية متخصصة تمنحهم أفضل رعاية ممكنة',\n    'hero.description': 'عيادة د. باوز تُقدّم أحدث ما توصلت إليه التكنولوجيا في مجال الرعاية البيطرية. من خلال فريقنا الخبير وباستخدام أحدث الأجهزة والتقنيات التشخيصية والعلاجية، نضمن تقديم رعاية شاملة ومتطورة تشمل جميع الخدمات من الفحوصات الروتينية إلى الجراحات الدقيقة.',\n    'hero.cta': 'احجز موعدك الآن',\n    'hero.readMore': 'اقرأ المزيد',\n    \n    // About\n    'about.headline': 'عيادات د. باوز البيطرية: رعاية متكاملة لصحة حيوانك الأليف',\n    'about.description': 'د. باوز هي عيادة بيطرية تقدّم أحدث ما توصلت إليه التكنولوجيا في مجال الرعاية البيطرية. من خلال فريقنا من الخبراء، وباستخدام أحدث الأجهزة والتقنيات التشخيصية والعلاجية، نضمن توفير رعاية شاملة ومتطورة تشمل كافة الخدمات، من الفحوصات الروتينية وصولاً إلى الجراحات الدقيقة. هدفنا هو الحفاظ على صحة ورفاهية حيواناتكم الأليفة في بيئة مريحة وآمنة.',\n    'about.readMore': 'اقرأ المزيد',\n    \n    // Services\n    'services.headline': 'ماذا نقدم؟',\n    'services.description': 'تقدم عيادات د. باوز البيطرية باقة متكاملة من الخدمات البيطرية الشاملة لتلبية احتياجات حيوانك الأليف في جميع مراحل حياته. من الفحوصات الوقائية إلى التشخيصات المتقدمة والجراحات المتخصصة. نحن هنا لضمان صحة أليفك.',\n    'services.readMore': 'اقرأ المزيد',\n    'services.wellness.title': 'الفحوصات الصحية',\n    'services.wellness.description': 'فحوصات صحية شاملة للحفاظ على حيوانك الأليف في حالة مثالية.',\n    'services.emergency.title': 'الرعاية الطارئة',\n    'services.emergency.description': 'خدمات طوارئ على مدار الساعة للحالات الطبية العاجلة.',\n    'services.vaccinations.title': 'التطعيمات',\n    'services.vaccinations.description': 'برامج تطعيم كاملة لحماية حيواناتك من الأمراض.',\n    'services.surgery.title': 'الجراحة',\n    'services.surgery.description': 'إجراءات جراحية متقدمة بأحدث المعدات.',\n    'services.diagnostics.title': 'التشخيص',\n    'services.diagnostics.description': 'تصوير تشخيصي متقدم وخدمات مخبرية.',\n    'services.dental.title': 'العناية بالأسنان',\n    'services.dental.description': 'تنظيف أسنان احترافي وخدمات صحة الفم.',\n    \n    // Service Packages\n    'packages.headline': 'باقات الخدمات',\n    'packages.description': 'اختر باقة الرعاية المثالية التي تناسب احتياجات حيوانك الأليف. جميع الباقات تشمل رعاية بيطرية شاملة مصممة للحفاظ على صحة وسعادة رفيقك المحبوب.',\n    'packages.basic.name': 'الرعاية الأساسية',\n    'packages.basic.price': '٢٩٩',\n    'packages.basic.period': 'ريال/سنة',\n    'packages.basic.feature1': 'فحص صحي سنوي',\n    'packages.basic.feature2': 'تطعيمات أساسية',\n    'packages.basic.feature3': 'الوقاية من الطفيليات',\n    'packages.basic.feature4': 'استشارة الأسنان',\n    'packages.basic.feature5': 'إرشادات التغذية',\n    'packages.complete.name': 'الرعاية الكاملة',\n    'packages.complete.price': '٥٩٩',\n    'packages.complete.period': 'ريال/سنة',\n    'packages.complete.feature1': 'فحوصات صحية نصف سنوية',\n    'packages.complete.feature2': 'باقة تطعيمات كاملة',\n    'packages.complete.feature3': 'وقاية متقدمة من الطفيليات',\n    'packages.complete.feature4': 'تنظيف الأسنان متضمن',\n    'packages.complete.feature5': 'فحوصات الدم والتشخيص',\n    'packages.complete.feature6': 'خصم على الرعاية الطارئة',\n    'packages.premium.name': 'الرعاية المميزة',\n    'packages.premium.price': '٩٩٩',\n    'packages.premium.period': 'ريال/سنة',\n    'packages.premium.feature1': 'فحوصات صحية ربع سنوية',\n    'packages.premium.feature2': 'باقة تطعيمات مميزة',\n    'packages.premium.feature3': 'وقاية على مدار العام',\n    'packages.premium.feature4': 'رعاية أسنان احترافية',\n    'packages.premium.feature5': 'فحوصات مخبرية شاملة',\n    'packages.premium.feature6': 'رعاية طارئة ذات أولوية',\n    'packages.premium.feature7': 'استشارة بيطرية ٢٤/٧',\n    'packages.popular': 'الأكثر شعبية',\n    'packages.bookNow': 'احجز الآن',\n    \n    // Media\n    'media.headline': 'الوسائط',\n    'media.description': 'ألقِ نظرة فاحصة على مرافقنا الحديثة وشاهد كيف نقدم رعاية استثنائية لحيواناتك الأليفة في بيئة دافئة ومرحبة.',\n    \n    // Why Choose Us\n    'why.headline': 'لماذا تختار عيادات د. باوز البيطرية؟',\n    'why.reason1.title': 'رعاية شاملة وحنونة',\n    'why.reason1.description': 'نعامل كل حيوان أليف كما لو كان ملكنا، بلطف واحترام وتفهّم.',\n    'why.reason2.title': 'فريق ذو خبرة',\n    'why.reason2.description': 'أطباؤنا وطاقمنا لديهم سنوات من الخبرة وشغف بصحة الحيوانات الأليفة.',\n    'why.reason3.title': 'عيادات متطورة وحديثة',\n    'why.reason3.description': 'نستخدم أحدث المعدات والتقنيات لتوفير أفضل رعاية ممكنة.',\n    'why.reason4.title': 'خطة علاجية مخصصة',\n    'why.reason4.description': 'نضع خطة علاج تناسب الاحتياجات الفريدة لكل حيوان أليف.',\n    'why.readMore': 'اقرأ المزيد',\n    \n    // Reviews\n    'reviews.headline': 'آراء عملائنا',\n    'reviews.1.name': 'أحمد الرشيد',\n    'reviews.1.text': 'خدمة ممتازة! الطاقم كان رائعًا ومهنيًا جدًا مع قطتي. أنصح بشدة بعيادة د. باوز!',\n    'reviews.2.name': 'سارة جونسون',\n    'reviews.2.text': 'كلبي حصل على أفضل رعاية هنا. الأطباء ذوو خبرة والعيادة نظيفة جدًا.',\n    'reviews.3.name': 'محمد حسن',\n    'reviews.3.text': 'تجربة رائعة بشكل عام. الطبيب البيطري شرح كل شيء بوضوح وحيواني الأليف يشعر بتحسن كبير.',\n    'reviews.4.name': 'إميلي رودريجيز',\n    'reviews.4.text': 'خدمة الطوارئ كانت مميزة. اهتموا بأرنبي فورًا وبشكل احترافي.',\n    'reviews.5.name': 'خالد عبدالله',\n    'reviews.5.text': 'أفضل عيادة بيطرية في الرياض! الطاقم ودود ويهتمون حقًا بالحيوانات.',\n    'reviews.6.name': 'جينيفر لي',\n    'reviews.6.text': 'معجبة جدًا بالمرافق ومستوى الرعاية. ببغائي حصل على علاج ممتاز.',\n    'reviews.7.name': 'عمر سعيد',\n    'reviews.7.text': 'فريق محترف ومعدات حديثة. جعلوا حيواني الأليف يشعر بالراحة خلال الزيارة.',\n    'reviews.8.name': 'ليزا مارتينيز',\n    'reviews.8.text': 'تجربة رائعة! خدمة التجميل كانت مثالية وكلبي يبدو رائعًا. شكرًا لكم!',\n    \n    // Contact\n    'contact.headline': 'تواصل معنا',\n    'contact.subheadline': 'بادر بحجز موعد لحيوانك الأليف في عيادة د. باوز البيطرية اليوم!',\n    'contact.name': 'الاسم',\n    'contact.phone': 'رقم الهاتف',\n    'contact.email': 'البريد الإلكتروني',\n    'contact.message': 'الرسالة',\n    'contact.submit': 'إرسال',\n    'contact.success': 'شكراً لك! سنتواصل معك قريباً.',\n    \n    // Book Now Page\n    'bookNow.title': 'احجز الآن',\n    'bookNow.welcome': 'نحن سعداء لرغبتك في الحجز وأن تصبح جزءًا من عائلتنا.',\n    'bookNow.chooseBranch': 'اختر من فروعنا للحجز',\n    'bookNow.bookingMethods': 'اختر طريقة الحجز المفضلة لديك',\n    'bookNow.whatsappBooking': 'احجز عبر الواتساب',\n    'bookNow.phoneBooking': 'احجز عبر الهاتف',\n    'bookNow.programBooking': 'احجز عبر برنامجنا',\n    'bookNow.riyadh': 'الرياض',\n    'bookNow.riyadhBranches': 'فروع الرياض',\n    'bookNow.matherBranch': 'فرع المعذر',\n    'bookNow.sahafahBranch': 'فرع الصحافة',\n    'bookNow.sahafahWhatsApp': '0552030564',\n    'bookNow.matherWhatsApp': '0531353667',\n    'bookNow.sahafahPhone': '0552030564',\n    'bookNow.matherPhone': '0531353667',\n    'bookNow.jeddah': 'جدة',\n    'bookNow.jeddahBranches': 'فروع جدة',\n    'bookNow.comingSoon': 'قريباً',\n    \n    // About Page\n    'aboutPage.header': 'عيادات د. باوز البيطرية بالرياض',\n    'aboutPage.subheader': 'خبرة نضعها بين أيديكم بكل ثقة',\n    'aboutPage.whoWeAre.title': 'من نحن؟',\n    'aboutPage.whoWeAre.subtitle': '',\n    'aboutPage.whoWeAre.para1': 'تُقدّم عيادات د. باوز، أفضل عيادة بيطرية بالرياض، رعاية بيطرية استثنائية تجمع بين الخبرة والتقنية الحديثة، مع لمسة حانية تُعبّر عن اهتمامنا العميق بصحة حيواناتكم الأليفة. من الفحوصات الروتينية إلى التشخيصات المتقدمة والعلاجات المتخصصة، نُوفّر رعاية شاملة في بيئة مريحة وودية، لضمان تجربة إيجابية لكم ولحيواناتكم الأليفة في كل زيارة.',\n    'aboutPage.whoWeAre.para2': '',\n    'aboutPage.whoWeAre.para3': '',\n    'aboutPage.vision.title': 'رؤيتنا',\n    'aboutPage.vision.content': 'تسعى عيادات دكتور باوز إلى أن تكون المرجع الأول والأفضل في مجال الرعاية البيطرية، حيث تقدم أعلى مستوى من الرعاية الصحية للحيوانات الأليفة.',\n    'aboutPage.mission.title': 'مهمتنا',\n    'aboutPage.mission.content': 'توفير رعاية بيطرية شاملة وعالية الجودة للحيوانات الأليفة، مع التركيز على صحة ورفاهية الحيوان، وتقديم أفضل الخدمات الطبية للحيوانات الأليفة، بدءًا من الفحوصات الروتينية وحتى الجراحات المعقدة، وذلك من خلال فريق عمل متخصص وبيئة مريحة لأليفك.',\n    'aboutPage.whyChoose.title': 'لماذا تختار عيادات د. باوز البيطرية؟',\n    'aboutPage.whyChoose.reason1.title': 'رعاية شاملة وحنونة',\n    'aboutPage.whyChoose.reason1.description': 'نعامل كل حيوان أليف كما لو كان حيواننا الأليف، باللطف والاحترام والتفهّم.',\n    'aboutPage.whyChoose.reason2.title': 'فريق ذو خبرة',\n    'aboutPage.whyChoose.reason2.description': 'يتمتع أطباؤنا البيطريون وطاقم الدعم لدينا بخبرة سنوات عديدة وشغف تجاه الحيوانات الأليفة.',\n    'aboutPage.whyChoose.reason3.title': 'عيادات متطورة وحديثة',\n    'aboutPage.whyChoose.reason3.description': 'حيث نستخدم أحدث التقنيات والمعدات لتوفير أفضل رعاية ممكنة.',\n    'aboutPage.whyChoose.reason4.title': 'خطة علاجية تناسب أليفك',\n    'aboutPage.whyChoose.reason4.description': 'نُعدل خطط العلاج لتلبية الاحتياجات الفريدة لكل حيوان أليف.',\n    'aboutPage.doctors.title': 'فريق العمل',\n    'aboutPage.doctors.description': 'في عيادات د. باوز، أفضل عيادة بيطرية بالرياض، يجمع فريقنا من الأطباء البيطريين بين الخبرة العالية والتعاطف العميق لتقديم رعاية شاملة ومتخصصة. ملتزمون بتطبيق أعلى معايير الجودة في كل جوانب الرعاية، وشغفهم بصحة الحيوانات هو الدافع الأساسي لعملهم. خبراتهم المتنوعة تُمكّنهم من توفير أفضل الحلول العلاجية لحيوانكم الأليف.',\n    'aboutPage.doctors.noInfo': 'ملفات تعريف الأطباء قريباً',\n    'aboutPage.partners.title': 'شركاؤنا',\n    'aboutPage.partners.noInfo': 'معلومات الشركاء قريباً',\n    'aboutPage.careers.title': 'الوظائف',\n    'aboutPage.careers.description': 'عيادة د. باوز، أفضل عيادة بيطرية بالرياض، تدعوك للانضمام إلى فريقها المتميز. نوفر لك بيئة عمل داعمة ومُحفّزة تُساعدك على التطور المهني واكتساب الخبرات القيمة في مجال صحة الحيوان.',\n    'aboutPage.careers.personalInfo': 'المعلومات الشخصية',\n    'aboutPage.careers.fullName': 'الاسم الكامل',\n    'aboutPage.careers.email': 'البريد الإلكتروني',\n    'aboutPage.careers.phone': 'رقم الهاتف',\n    'aboutPage.careers.professionalInfo': 'المعلومات المهنية',\n    'aboutPage.careers.resume': 'تحميل السيرة الذاتية',\n    'aboutPage.careers.coverLetter': 'الخطاب التعريفي (اختياري)',\n    'aboutPage.careers.position': 'الوظيفة المطلوبة (إن وجدت)',\n    'aboutPage.careers.startDate': 'تاريخ البدء المتاح',\n    'aboutPage.careers.experience': 'الخبرة ذات الصلة',\n    'aboutPage.careers.experiencePlaceholder': 'مثلاً: فني بيطري، مساعد بيطري، موظف استقبال',\n    'aboutPage.careers.certifications': 'الشهادات البيطرية (إن وجدت)',\n    'aboutPage.careers.education': 'المستوى التعليمي والمؤسسة',\n    'aboutPage.careers.interests': 'مجالات الاهتمام',\n    'aboutPage.careers.interestsPlaceholder': 'مثلاً: الجراحة، الطب الباطني، رعاية الطوارئ',\n    'aboutPage.careers.submit': 'إرسال الطلب',\n    \n    // Services Page\n    'servicesPage.header': 'خدماتنا',\n    'servicesPage.subheader': 'اختبر خدمات بيطرية استثنائية في د. باوز. نقدم مجموعة كاملة من الرعاية لحيواناتك الأليفة، من الفحوصات الروتينية إلى العلاجات المتقدمة.',\n    'servicesPage.bookAppointment': 'احجز موعد',\n    \n    'servicesPage.examinations.title': 'الفحوصات الطبية الدورية',\n    'servicesPage.examinations.description': 'في د. باوز، نؤمن بأن الرعاية الوقائية ضرورية لحياة طويلة وصحية لجميع الحيوانات الأليفة. فحوصاتنا الدورية للحيوانات الأليفة، والمعروفة أيضًا باسم فحوصات الصحة أو الفحوصات، هي جزء أساسي من خدماتنا البيطرية الشاملة. فهي تسمح لأطبائنا البيطريين بتقييم الصحة العامة لحيوانك الأليف، واكتشاف المشاكل المحتملة مبكرًا، وتقديم توصيات شخصية.',\n    'servicesPage.examinations.canine': 'فحوصات الكلاب: العلامات الحيوية، تسمع القلب والرئتين، فحوصات العيون، الأذن، الفم، الجلد، البطن، والعضلات والعظام.',\n    'servicesPage.examinations.feline': 'فحوصات القطط: فحوصات لطيفة تغطي العلامات الحيوية، العيون، الأذنين، صحة الفم، البطن، الفراء، والجلد.',\n    'servicesPage.examinations.avian': 'فحوصات الطيور: رعاية متخصصة تشمل الفحص البدني، تقييم الريش والمنقار، الوزن، فحص الغدد، وجس البطن.',\n    \n    'servicesPage.grooming.title': 'خدمات الاستحمام والتجميل',\n    'servicesPage.grooming.description': 'حافظ على نظافة وراحة حيوانك الأليف مع خدمات التجميل والتنظيف لدينا.',\n    'servicesPage.grooming.feature1': 'قص الأظافر',\n    'servicesPage.grooming.feature2': 'تنظيف الأذنين',\n    'servicesPage.grooming.feature3': 'الاستحمام والتجفيف بشامبو آمن',\n    'servicesPage.grooming.feature4': 'تمشيط وتجميل الشعر (حسب السلالة)',\n    \n    'servicesPage.diagnostics.title': 'الفحوصات التشخيصية',\n    'servicesPage.diagnostics.description': 'نوفر اختبارات تشخيصية دقيقة وسريعة بتقنية متقدمة:',\n    'servicesPage.diagnostics.lab': 'الفحوصات المخبرية: كيمياء الدم، تعداد الدم الكامل، تحليل البول، فحوصات الطفيليات والفطريات',\n    'servicesPage.diagnostics.imaging': 'التصوير: الأشعة السينية، الأشعة السينية للأسنان، الموجات فوق الصوتية',\n    'servicesPage.diagnostics.advanced': 'التشخيصات المتقدمة: الفحص المجهري والتنظير الداخلي',\n    \n    'servicesPage.surgery.title': 'العمليات الجراحية الطبية',\n    'servicesPage.surgery.description': 'يقوم فريقنا الجراحي بإجراء مجموعة واسعة من العمليات باستخدام تقنيات حديثة وآمنة:',\n    'servicesPage.surgery.feature1': 'التعقيم (الإخصاء)',\n    'servicesPage.surgery.feature2': 'جراحة العظام',\n    'servicesPage.surgery.feature3': 'عمليات الجهاز الهضمي',\n    'servicesPage.surgery.feature4': 'تجميل الأنف (للسلالات قصيرة الأنف)',\n    'servicesPage.surgery.feature5': 'جراحة المسالك البولية',\n    \n    'servicesPage.dental.title': 'خدمات الأسنان',\n    'servicesPage.dental.description': 'رعاية شاملة للأسنان لحماية أسنان ولثة حيوانك الأليف:',\n    'servicesPage.dental.feature1': 'تنظيف أسنان احترافي',\n    'servicesPage.dental.feature2': 'فحوصات الأسنان',\n    'servicesPage.dental.feature3': 'تقليح وتخطيط الجذور',\n    'servicesPage.dental.feature4': 'خلع الأسنان وجراحة الفم',\n    \n    'servicesPage.vaccination.title': 'التطعيمات الدورية',\n    'servicesPage.vaccination.description': 'احمِ حيواناتك الأليفة بالتطعيمات الأساسية وجداول التخلص من الديدان:',\n    'servicesPage.vaccination.feature1': 'لقاحات القطط (الثلاثي والرباعي)',\n    'servicesPage.vaccination.feature2': 'لقاحات الكلاب (الخماسي وداء الكلب)',\n    'servicesPage.vaccination.feature3': 'أدوية التخلص من الديدان',\n    \n    'servicesPage.travel.title': 'إجراءات سفر الحيوانات الأليفة',\n    'servicesPage.travel.description': 'مساعدة شاملة للسفر المحلي والدولي:',\n    'servicesPage.travel.feature1': 'شهادات صحية',\n    'servicesPage.travel.feature2': 'فحص داء الكلب والوثائق',\n    'servicesPage.travel.feature3': 'المساعدة في نماذج السفر ومتطلبات الوجهة',\n    \n    'servicesPage.boarding.title': 'خدمات الإيواء',\n    'servicesPage.boarding.description': 'خيارات إقامة مريحة وآمنة لحيواناتك الأليفة:',\n    'servicesPage.boarding.therapeutic': 'فندق الحيوانات العلاجي: رعاية ما بعد الجراحة، إدارة الحالات المزمنة، ومراقبة عن كثب',\n    'servicesPage.boarding.fungi': 'فندق علاج الفطريات: غرف علاج معزولة مع تعقيم متخصص وأدوية',\n    \n    'servicesPage.intensiveCare.title': 'الرعاية المركزة',\n    'servicesPage.intensiveCare.description': 'رعاية وحدة العناية المركزة المخصصة للحيوانات الأليفة الحرجة:',\n    'servicesPage.intensiveCare.feature1': 'إدارة فشل الأعضاء (الكلى، الكبد، القلب)',\n    'servicesPage.intensiveCare.feature2': 'اضطرابات التمثيل الغذائي والغدد الصماء',\n    'servicesPage.intensiveCare.feature3': 'الإصابات والصدمات الشديدة',\n    'servicesPage.intensiveCare.feature4': 'رعاية ما بعد الجراحة',\n    \n    'servicesPage.emergency.title': 'خدمات الطوارئ',\n    'servicesPage.emergency.description': 'رعاية طوارئ على مدار الساعة طوال أيام الأسبوع للحالات العاجلة مثل:',\n    'servicesPage.emergency.feature1': 'الصدمات',\n    'servicesPage.emergency.feature2': 'صعوبات التنفس',\n    'servicesPage.emergency.feature3': 'النزيف أو التسمم',\n    'servicesPage.emergency.feature4': 'النوبات والانتفاخ',\n    'servicesPage.emergency.numbers': 'أرقام الطوارئ:',\n    'servicesPage.emergency.sahafa': 'فرع الصحافة: 0552030564',\n    'servicesPage.emergency.mather': 'فرع المعذر: 0531353667',\n    \n    'servicesPage.homeCare.title': 'خدمات الرعاية المنزلية',\n    'servicesPage.homeCare.description': 'رعاية بيطرية مريحة في المنزل:',\n    'servicesPage.homeCare.feature1': 'فحوصات صحية',\n    'servicesPage.homeCare.feature2': 'التطعيمات',\n    'servicesPage.homeCare.feature3': 'جمع العينات (الدم، البول، البراز)',\n    \n    // Footer\n    'footer.description': 'من الفحوصات الروتينية إلى الجراحات المتقدمة، تقدم د. باوز رعاية بيطرية متكاملة لجميع احتياجات حيوانك الأليف.',\n    'footer.contactInfo': 'معلومات التواصل',\n    'footer.call': 'الاتصال',\n    'footer.generalPhone': '920003045',\n    'footer.emergency': 'الطوارئ: متوفرون لخدمتكم على مدار الساعة طوال أيام الأسبوع',\n    'footer.mobile': 'جوال',\n    'footer.sahafahBranch': 'فرع الصحافة',\n    'footer.sahafahAddress': 'عيادة د. باوز البيطرية، طريق الثمامة، حي الصحافة، الرياض 13315',\n    'footer.sahafahPhone': '05 5203 0564',\n    'footer.sahafahMapUrl': 'https://www.google.com/maps/search/?api=1&query=Dr.Paws+Veterinary+Clinic,Al+Thoumamah+Rd,As+Sahafah,Riyadh+13315',\n    'footer.matherBranch': 'فرع المعذر',\n    'footer.matherAddress': 'عيادة د. باوز البيطرية، طريق الأمير سلطان بن عبدالعزيز، المعذر الشمالية، الرياض 12314',\n    'footer.matherPhone': '05 3135 3667',\n    'footer.matherMapUrl': 'https://maps.app.goo.gl/PzCrrqSLmnCE487c9',\n    'footer.hours': 'ساعات العمل',\n    'footer.satThu': 'من السبت إلى الخميس : من 9:00 صباحًا حتى 11:00 مساءً',\n    'footer.fri': 'يوم الجمعة من 3:00 مساءً حتى 11:00 مساءً',\n    'footer.email': 'info@drpaws-sa.com',\n    'footer.follow': 'تابعنا',\n    \n    // Promotional Modal\n    'promo.title': 'عرض افتتاح فرع جدة!',\n    'promo.description': 'ترقبوا افتتاح فرعنا في جدة! سجل بياناتك الآن واحصل على خصم 20% لمدة 6 أشهر بعد الافتتاح',\n    'promo.firstName': 'الاسم الأول',\n    'promo.lastName': 'الاسم الأخير',\n    'promo.email': 'البريد الإلكتروني',\n    'promo.phoneNumber': 'رقم الهاتف',\n    'promo.required': '*',\n    'promo.firstNamePlaceholder': 'أدخل الاسم الأول',\n    'promo.lastNamePlaceholder': 'أدخل الاسم الأخير',\n    'promo.emailPlaceholder': 'example@email.com',\n    'promo.phoneNumberPlaceholder': '05xxxxxxxx',\n    'promo.submit': 'سجل الآن واحصل على الخصم',\n    'promo.submitting': 'جاري التسجيل...',\n    'promo.successTitle': 'تم التسجيل بنجاح!',\n    'promo.successMessage': 'سنتواصل معك قريباً بشأن عرض الافتتاح الخاص',\n    'promo.errorTitle': 'خطأ',\n    'promo.errorGeneric': 'حدث خطأ أثناء التسجيل، يرجى المحاولة مرة أخرى',\n    'promo.errorDuplicate': 'رقم الهاتف مسجل مسبقاً',\n    'promo.phoneAlreadyRegistered': 'هذا الرقم تم تسجيله من قبل.',\n    'promo.phoneNumberMustBe10Digits': 'رقم الهاتف يجب أن يكون 10 أرقام.',\n    'promo.emailAlreadyRegistered': 'هذا البريد الإلكتروني تم تسجيله من قبل.',\n    'promo.invalidEmail': 'الرجاء إدخال بريد إلكتروني صحيح.',\n    'promo.close': 'إغلاق',\n    'promo.successSubscription': 'تم الاشتراك في العرض بنجاح!',\n    'promo.subscriptionCode': 'رمز الاشتراك الخاص بك هو',\n    'promo.okButton': 'تم',\n    'promo.doNotShowAgain': 'لا تظهر مرة أخرى',\n  },\n};\n\nexport function LanguageProvider({ children }: { children: ReactNode }) {\n  const [language, setLanguage] = useState<Language>('en');\n\n  useEffect(() => {\n    // Set RTL direction and lang attribute when language changes\n    if (language === 'ar') {\n      document.documentElement.setAttribute('dir', 'rtl');\n      document.documentElement.setAttribute('lang', 'ar');\n    } else {\n      document.documentElement.setAttribute('dir', 'ltr');\n      document.documentElement.setAttribute('lang', 'en');\n    }\n  }, [language]);\n\n  const t = (key: string): string => {\n    const translationKey = key as keyof typeof translations['en'];\n    if (translationKey in translations[language]) {\n      return translations[language][translationKey] as string;\n    }\n    if (translationKey in translations.en) {\n      return translations.en[translationKey] as string;\n    }\n    return key;\n  };\n\n  return (\n    <LanguageContext.Provider value={{ language, setLanguage, t }}>\n      {children}\n    </LanguageContext.Provider>\n  );\n}\n\nexport function useLanguage() {\n  const context = useContext(LanguageContext);\n  if (context === undefined) {\n    throw new Error('useLanguage must be used within a LanguageProvider');\n  }\n  return context;\n}\n","size_bytes":49866},"design_guidelines.md":{"content":"# DR PAWS VETERINARY CLINIC - HOMEPAGE DESIGN GUIDELINES\n\n## Design Approach\n**Reference-Based**: Veterinary clinic with established brand identity requiring exact adherence to provided brand guidelines. Drawing inspiration from healthcare/wellness sites like Zocdoc and modern service providers with warm, trustworthy aesthetics.\n\n## Brand Colors (Exact HSL Format)\n**Primary Colors:**\n- Pigment Green: 143 76% 38% (rgb(24, 172, 97) / #18ac61)\n- Charcoal: 199 37% 24% (rgb(38, 70, 83) / #264653)\n\n**Accent Colors:**\n- Saffron: 43 75% 66% (rgb(233, 196, 106) / #e9c46a)\n- Sandy Brown: 27 87% 67% (rgb(244, 162, 97) / #f4a261)\n\n**Usage:**\n- Primary CTA buttons: Pigment Green backgrounds with white text\n- Headings: Charcoal for strong contrast\n- Warm accents: Saffron and Sandy Brown for highlights, icons, and decorative elements\n- Light backgrounds: Off-white (#fdfcfb) with subtle warmth\n- Dark mode not required for this veterinary clinic site\n\n## Typography\n**Primary (Headlines):** Rubik\n- H1: 3.5rem (56px) / font-medium\n- H2: 2.25rem (36px) / font-medium\n- H3: 1.5rem (24px) / font-normal\n\n**Secondary (Body):** Poppins\n- Body large: 1.125rem (18px) / font-normal / line-height relaxed\n- Body regular: 1rem (16px) / font-normal\n- Small text: 0.875rem (14px) / font-light\n\n**Font Loading:** Via Google Fonts CDN\n- Rubik: weights 400, 500\n- Poppins: weights 300, 400, 600, 700\n\n## Layout System\n**Spacing Scale:** Tailwind units of 4, 6, 8, 12, 16, 20, 24, 32\n- Section padding: py-20 (desktop), py-12 (mobile)\n- Container max-width: max-w-7xl\n- Content sections: max-w-6xl\n- Card spacing: gap-8 (desktop), gap-6 (mobile)\n\n## Component Library\n\n### Hero Section with Slider\n- Full-width background slider with veterinary clinic imagery\n- Overlay: Charcoal gradient (from 199 37% 24% / 0.7 to 199 37% 24% / 0.4)\n- Centered content with max-w-4xl\n- Headline: Rubik 3.5rem white\n- Subheadline: Poppins 1.5rem white/90% opacity\n- Subtext: Poppins 1.125rem white/80% opacity\n- CTA: Large button (px-8 py-4) Pigment Green background, white text, rounded-lg\n- Height: 85vh with flex centering\n\n### Introduction/About Section\n- Two-column grid (image left, content right on desktop, stacked mobile)\n- Headline: Rubik 2.25rem Charcoal\n- Body text: Poppins 1.125rem Charcoal/80%\n- Background: White\n- Image: Warm, professional veterinary care photo with rounded-xl corners\n- CTA: Outline button with Pigment Green border\n\n### Service Categories Section\n- Background: Subtle warm gradient (Saffron at 5% opacity)\n- Headline: Rubik 2.25rem Charcoal, centered\n- Intro paragraph: Poppins 1.125rem, centered, max-w-3xl\n- Service cards: 3-column grid (2-col tablet, 1-col mobile)\n- Card design: White background, rounded-xl, shadow-md, hover:shadow-lg transition\n- Card icons: Sandy Brown colored, 48px size\n- Card titles: Poppins 1.25rem Charcoal bold\n- Card descriptions: Poppins 1rem Charcoal/70%\n\n### Why Choose Us Section\n- Background: White\n- Headline: Rubik 2.25rem Charcoal, centered\n- 2x2 grid of feature cards (desktop), 1-column (mobile)\n- Feature cards: Icon (Pigment Green), title (Poppins 1.125rem bold), description\n- Icons: Use Heroicons for consistent style\n- Spacing: gap-12 between cards\n\n### Contact Form Section\n- Background: Charcoal dark\n- Two-column layout (form left, info right on desktop)\n- Headline: Rubik 2.25rem white\n- Form styling:\n  - Input fields: White backgrounds, border border-gray-300, rounded-lg, px-4 py-3\n  - Labels: Poppins white/90%\n  - Textarea: min-h-32\n  - Submit button: Pigment Green background, white text, full-width, py-4\n- Right column: Contact information in white text with icons\n\n### Footer\n- Background: Charcoal\n- Three-column grid (logo/tagline, contact info, hours)\n- Logo: White version\n- Text: Poppins 0.875rem white/80%\n- Section headings: Poppins 1rem white bold\n- Contact details with icons (Heroicons)\n- Social media: Icon row with hover:opacity-80 transition\n- Bottom copyright bar: Charcoal darker shade, centered text\n\n## Images\n**Hero Slider (3 images):**\n1. Veterinarian examining a happy golden retriever in bright, modern clinic\n2. Compassionate vet with cat owner consultation in warm, welcoming room\n3. State-of-the-art veterinary equipment and clean examination room\n\n**About Section Image:**\nProfessional veterinary team photo with diverse staff showing warmth and expertise\n\n**Service Cards:**\nUse Heroicons for service category icons (stethoscope, heart, clipboard, etc.)\n\n## Animations\nMinimal, professional animations:\n- Hero slider: 6-second fade transitions\n- Buttons: hover:scale-105 subtle lift\n- Service cards: hover:shadow-lg smooth transition\n- Scroll-triggered fade-ins for sections (opacity 0 to 1, 0.6s ease)\n\n## Accessibility\n- Maintain WCAG AA contrast ratios (all combinations pass)\n- Focus states: 2px Pigment Green outline with offset\n- Touch targets: minimum 44px height for mobile\n- Alt text for all images describing veterinary context\n- Semantic HTML structure with proper heading hierarchy","size_bytes":4980},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/Header.tsx":{"content":"import { Menu, X, Globe } from 'lucide-react';\nimport { useState } from 'react';\nimport { Link, useLocation } from 'wouter';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { useLanguage } from '@/contexts/LanguageContext';\nimport { Button } from '@/components/ui/button';\nimport logo from '@assets/dr-paws-logo.svg';\n\nexport default function Header() {\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const [location] = useLocation();\n  const { language, setLanguage, t } = useLanguage();\n\n  const mainNavItems = [\n    { name: t('nav.home'), path: '/' },\n    { name: t('nav.about'), path: '/about' },\n    { name: t('nav.services'), path: '/services' },\n    { name: t('nav.blog'), path: '/blog' },\n    { name: t('bookNow.title'), path: '/book-now' },\n  ];\n\n  const contactNavItem = { name: t('nav.contact'), path: '#contact' };\n  \n  // For mobile menu - include all items including Contact Us\n  const navItems = [...mainNavItems, contactNavItem];\n\n  const handleNavClick = (path: string) => {\n    if (path.startsWith('#')) {\n      if (path === '#contact') {\n        const footer = document.querySelector('footer');\n        footer?.scrollIntoView({ behavior: 'smooth' });\n      } else {\n        const element = document.getElementById(path.substring(1));\n        element?.scrollIntoView({ behavior: 'smooth' });\n      }\n      setIsMobileMenuOpen(false);\n    } else {\n      setIsMobileMenuOpen(false);\n    }\n  };\n\n  return (\n    <header className=\"sticky top-0 z-50 bg-white border-b border-border/40 backdrop-blur-sm\">\n      <nav className=\"max-w-7xl mx-auto px-6\">\n        <div className=\"flex items-center justify-between h-20\">\n          <Link href=\"/\" data-testid=\"link-logo\">\n            <motion.div\n              whileHover={{ scale: 1.02 }}\n              className=\"flex items-center\"\n            >\n              <img src={logo} alt=\"Dr. Paws Logo\" className=\"h-12 md:h-14\" data-testid=\"img-logo\" />\n            </motion.div>\n          </Link>\n\n          <div className=\"hidden md:flex items-center gap-8\">\n            {/* Main navigation items */}\n            {mainNavItems.map((item) => (\n              <Link key={item.name} href={item.path}>\n                <motion.span\n                  whileHover={{ y: -2 }}\n                  className={`inline-block text-foreground/80 hover:text-primary font-medium transition-colors relative group ${\n                    location === item.path ? 'text-primary' : ''\n                  }`}\n                  data-testid={`link-${item.name.toLowerCase().replace(' ', '-')}`}\n                >\n                  {item.name}\n                  <span className={`absolute -bottom-1 left-0 h-0.5 bg-primary transition-all duration-300 ${\n                    location === item.path ? 'w-full' : 'w-0 group-hover:w-full'\n                  }`}></span>\n                </motion.span>\n              </Link>\n            ))}\n            \n            {/* Visual separator */}\n            <div className=\"h-6 w-px bg-border\"></div>\n            \n            {/* Contact section - grouped with phone */}\n            <motion.button\n              onClick={() => handleNavClick(contactNavItem.path)}\n              whileHover={{ y: -2 }}\n              className=\"text-foreground/80 hover:text-primary font-medium transition-colors relative group\"\n              data-testid=\"link-contact-us\"\n            >\n              {contactNavItem.name}\n              <span className=\"absolute -bottom-1 left-0 w-0 h-0.5 bg-primary transition-all duration-300 group-hover:w-full\"></span>\n            </motion.button>\n            \n            <motion.a\n              href=\"tel:920003045\"\n              whileHover={{ scale: 1.05 }}\n              className=\"flex items-center gap-2 text-primary font-semibold hover-elevate active-elevate-2 px-4 py-2 rounded-md\"\n              data-testid=\"link-phone\"\n            >\n              <lord-icon\n                src=\"https://cdn.lordicon.com/ojbonimq.json\"\n                trigger=\"loop\"\n                delay=\"1500\"\n                colors=\"primary:#121331,secondary:#08a88a\"\n                stroke=\"regular\"\n                style={{ width: '30px', height: '30px' }}\n              />\n              <span>920003045</span>\n            </motion.a>\n            \n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={() => setLanguage(language === 'en' ? 'ar' : 'en')}\n              className=\"flex items-center gap-2\"\n              data-testid=\"button-language-switcher\"\n            >\n              <Globe className=\"w-4 h-4\" />\n              {language === 'en' ? 'العربية' : 'English'}\n            </Button>\n          </div>\n\n          <div className=\"flex items-center gap-2 md:hidden\">\n            <motion.a\n              href=\"tel:920003045\"\n              whileTap={{ scale: 0.95 }}\n              className=\"flex items-center gap-2 text-primary font-semibold hover-elevate active-elevate-2 px-3 py-2 rounded-md\"\n              data-testid=\"link-phone-mobile\"\n            >\n              <lord-icon\n                src=\"https://cdn.lordicon.com/ojbonimq.json\"\n                trigger=\"loop\"\n                delay=\"1500\"\n                colors=\"primary:#121331,secondary:#08a88a\"\n                stroke=\"regular\"\n                style={{ width: '30px', height: '30px' }}\n              />\n              <span className=\"text-sm\">920003045</span>\n            </motion.a>\n            <Button\n              variant=\"ghost\"\n              size=\"icon\"\n              onClick={() => setLanguage(language === 'en' ? 'ar' : 'en')}\n              data-testid=\"button-language-switcher-mobile\"\n            >\n              <Globe className=\"w-5 h-5\" />\n            </Button>\n            <button\n              onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n              className=\"p-2 rounded-lg hover-elevate active-elevate-2\"\n              data-testid=\"button-mobile-menu\"\n              aria-label=\"Toggle menu\"\n            >\n              {isMobileMenuOpen ? (\n                <X className=\"w-6 h-6\" />\n              ) : (\n                <Menu className=\"w-6 h-6\" />\n              )}\n            </button>\n          </div>\n        </div>\n\n        <AnimatePresence>\n          {isMobileMenuOpen && (\n            <motion.div\n              initial={{ opacity: 0, height: 0 }}\n              animate={{ opacity: 1, height: 'auto' }}\n              exit={{ opacity: 0, height: 0 }}\n              transition={{ duration: 0.3 }}\n              className=\"md:hidden overflow-hidden\"\n            >\n              <div className=\"py-4 space-y-2\">\n                {navItems.map((item) => (\n                  item.path.startsWith('#') ? (\n                    <motion.button\n                      key={item.name}\n                      onClick={() => handleNavClick(item.path)}\n                      whileTap={{ scale: 0.98 }}\n                      className=\"block w-full text-left px-4 py-3 text-foreground/80 hover:text-primary hover:bg-primary/5 rounded-lg transition-colors font-medium\"\n                      data-testid={`mobile-link-${item.name.toLowerCase().replace(' ', '-')}`}\n                    >\n                      {item.name}\n                    </motion.button>\n                  ) : (\n                    <Link key={item.name} href={item.path}>\n                      <motion.span\n                        whileTap={{ scale: 0.98 }}\n                        onClick={() => setIsMobileMenuOpen(false)}\n                        className={`block px-4 py-3 text-foreground/80 hover:text-primary hover:bg-primary/5 rounded-lg transition-colors font-medium ${\n                          location === item.path ? 'text-primary bg-primary/5' : ''\n                        }`}\n                        data-testid={`mobile-link-${item.name.toLowerCase().replace(' ', '-')}`}\n                      >\n                        {item.name}\n                      </motion.span>\n                    </Link>\n                  )\n                ))}\n              </div>\n            </motion.div>\n          )}\n        </AnimatePresence>\n      </nav>\n    </header>\n  );\n}\n","size_bytes":8081},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-9 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5741},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/examples/Footer.tsx":{"content":"import Footer from '../Footer';\n\nexport default function FooterExample() {\n  return <Footer />;\n}\n","size_bytes":98},"client/src/components/ServicePackagesSection.tsx":{"content":"import ServicePackagesDisplay from './ServicePackagesDisplay';\n\nexport default function ServicePackagesSection() {\n  return <ServicePackagesDisplay showHeader={true} />;\n}\n","size_bytes":172},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/pages/Services.tsx":{"content":"import { motion, useInView, AnimatePresence } from 'framer-motion';\nimport { useLanguage } from '@/contexts/LanguageContext';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { useState, useRef, useEffect } from 'react';\nimport { Link } from 'wouter';\nimport Header from '@/components/Header';\nimport ECGAnimation from '@/components/ECGAnimation';\nimport HeartbeatDivider from '@/components/HeartbeatDivider';\nimport Footer from '@/components/Footer';\nimport {\n  Stethoscope,\n  Scissors,\n  Microscope,\n  Syringe,\n  Pill,\n  Plane,\n  Home,\n  Heart,\n  AlertCircle,\n  Sparkles,\n  ChevronDown,\n  ChevronUp\n} from 'lucide-react';\nimport servicesHeroImage from '@assets/generated_images/Modern_veterinary_equipment_room_49dc6345.png';\nimport teamImage from '@assets/generated_images/Veterinary_team_professional_photo_a4845f6b.png';\nimport vetExamImage from '@assets/generated_images/Vet_examining_golden_retriever_19654044.png';\nimport consultationImage from '@assets/generated_images/Vet_consultation_with_cat_owner_7978144f.png';\n\nexport default function Services() {\n  const { t, language } = useLanguage();\n  const [expandedCards, setExpandedCards] = useState<Record<number, boolean>>({});\n\n  const heroRef = useRef(null);\n  const servicesRef1 = useRef(null);\n  const imageRef1 = useRef(null);\n  const servicesRef2 = useRef(null);\n  const imageRef2 = useRef(null);\n  const servicesRef3 = useRef(null);\n  const homeCareRef = useRef(null);\n\n  const heroInView = useInView(heroRef, { once: false, amount: 0.3 });\n  const servicesInView1 = useInView(servicesRef1, { once: false, amount: 0.2 });\n  const imageInView1 = useInView(imageRef1, { once: false, amount: 0.3 });\n  const servicesInView2 = useInView(servicesRef2, { once: false, amount: 0.2 });\n  const imageInView2 = useInView(imageRef2, { once: false, amount: 0.3 });\n  const servicesInView3 = useInView(servicesRef3, { once: false, amount: 0.2 });\n  const homeCareInView = useInView(homeCareRef, { once: false, amount: 0.3 });\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  const toggleExpand = (id: number) => {\n    setExpandedCards(prev => ({ ...prev, [id]: !prev[id] }));\n  };\n\n  const services = [\n    {\n      id: 1,\n      icon: Stethoscope,\n      title: language === 'ar' ? 'الفحص الطبي الدوري' : 'Periodic Medical Examination',\n      preview: language === 'ar' \n        ? 'في د. باوز، نؤمن بأن الرعاية الوقائية أساسية لحياة صحية مديدة لجميع الحيوانات الأليفة. فحوصاتنا الدورية، المعروفة أيضًا باسم فحوصات الصحة العامة أو الفحوصات الروتينية، تُعدّ جزءًا حيويًا من خدماتنا البيطرية الشاملة.'\n        : 'At Dr. Paws, we believe preventative care is essential for a long and healthy life for all pets. Our periodic pet examinations, also known as wellness exams or checkups, are a crucial part of our comprehensive veterinary services.',\n      fullContent: language === 'ar'\n        ? `تُتيح هذه الزيارات الروتينية لأطبائنا تقييم صحة حيوانك الأليف بشكل عام، واكتشاف المشاكل المحتملة في وقت مبكر، وتقديم توصيات مُخصّصة لرعايتهم المُستمرة.\n\n**الفحوصات الدورية للكلاب:**\nخلال الفحص الطبي الدوري للكلاب، نُجري فحصًا بدنيًا شاملاً.\n\n**الفحوصات الدورية للقطط:**\nتُجرى الفحوصات الطبية الدورية للقطط بنهج لطيف وصبور، لتقليل التوتر على قطتك.\n\n**الفحوصات الدورية للطيور:**\nتتطلب الفحوصات الطبية الدورية للطيور معرفة متخصصة وتقنيات تعامل خاصة.\n\nالفحوصات المنتظمة ضرورية للحفاظ على صحة حيوانك الأليف ومنع المشاكل الصحية الخطيرة.`\n        : `These routine visits allow our veterinarians to assess your pet's overall health, detect potential problems early, and provide personalized recommendations for their ongoing care.\n\n**Canine Periodic Pet Examinations:**\nDuring a canine periodic medical examination, we perform a thorough physical examination.\n\n**Feline Periodic Pet Examinations:**\nFeline periodic medical examinations are performed with a gentle and patient approach, minimizing stress for your cat.\n\n**Avian Periodic Pet Examinations:**\nAvian periodic medical examinations require specialized knowledge and handling techniques.\n\nRegular checkups are vital for maintaining your pet's well-being and preventing serious health issues.`,\n      features: language === 'ar' ? [\n        'العلامات الحيوية: فحص درجة الحرارة والنبض ومعدل التنفس',\n        'سماع القلب والرئتين: الاستماع إلى القلب والرئتين',\n        'فحص العيون: فحص العيون للكشف عن إعتام عدسة العين أو الجلوكوما',\n        'فحص الأذنين: فحص الأذنين للكشف عن الالتهابات أو العث',\n        'فحص الفم: تقييم الأسنان واللثة للكشف عن تراكم الجير',\n        'فحص الجلد: فحص الجلد والفراء',\n        'جس البطن: جس البطن للتحقق من تضخم الأعضاء',\n        'تقييم الجهاز العضلي الهيكلي: تقييم المفاصل والعضلات'\n      ] : [\n        'Vital Signs: Checking temperature, pulse, and respiration rate',\n        'Cardiopulmonary Auscultation: Listening to the heart and lungs',\n        'Ophthalmologic Examination: Examining the eyes for cataracts, glaucoma',\n        'Otoscopic Examination: Examining the ears for infections, mites',\n        'Oral Examination: Assessing teeth and gums for tartar buildup',\n        'Dermatological Examination: Examining skin and coat',\n        'Abdominal Palpation: Checking for organ enlargement, masses',\n        'Musculoskeletal Evaluation: Assessing joints and muscles'\n      ],\n    },\n    {\n      id: 2,\n      icon: Sparkles,\n      title: language === 'ar' ? 'خدمات العناية بالنظافة والمظهر' : 'Shower & Grooming Services',\n      preview: language === 'ar'\n        ? 'يُساهم الحفاظ على نظافة ومظهر حيوانك الأليف بشكل كبير في صحته العامة وراحته ورفاهيته. في د. باوز، نُقدّم مجموعة من خدمات عيادة رعاية نظافة الحيوانات الفعّالة والمُصمّمة للحفاظ على مظهر حيوانك الأليف بأفضل حال.'\n        : 'Maintaining your pet\\'s hygiene and appearance contributes significantly to their overall health, comfort, and well-being. At Dr. Paws, we offer a range of gentle and effective pet clean up services, designed to keep your pet looking and feeling their best.',\n      fullContent: language === 'ar'\n        ? `هذه الخدمات، على الرغم من أنها ليست طبية بحتة، إلا أنها جزء مهم من الرعاية الوقائية وتُكمّل خدماتنا البيطرية الأخرى.\n\nخدماتنا للعناية بالنظافة تساعد في منع الانزعاج المؤلم والالتهابات ومشاكل الجلد مع الحفاظ على راحة حيوانك الأليف وصحته. نستخدم منتجات عالية الجودة وآمنة للحيوانات الأليفة وتقنيات تُقلّل التوتر.`\n        : `These pet clean up services, while not strictly medical, are an important part of preventative care and complement our other veterinary services.\n\nOur grooming services help prevent painful discomfort, infections, and skin problems while keeping your pet comfortable and healthy. We use high-quality, pet-safe products and techniques that minimize stress for your beloved companion.`,\n      features: language === 'ar' ? [\n        'تقليم الأظافر: تقليم منتظم لمنع النمو الزائد ومشاكل المفاصل',\n        'تنظيف الأذنين: تنظيف لطيف لمنع الالتهابات وإزالة تراكم الشمع',\n        'الاستحمام والتجفيف: خدمات مُهدّئة باستخدام شامبو وبلسم آمن',\n        'تمشيط وقص الشعر: قصات شعر خاصة بالسلالات وخدمات فك التشابك'\n      ] : [\n        'Nail Clipping: Regular nail trims to prevent overgrowth and joint problems',\n        'Ear Cleaning: Gentle cleaning to prevent infections and remove wax buildup',\n        'Bath and Drying: Soothing services using pet-safe shampoos and conditioners',\n        'Hair Combing and Cutting: Breed-specific haircuts and de-matting services'\n      ],\n    },\n    {\n      id: 3,\n      icon: Microscope,\n      title: language === 'ar' ? 'الاختبارات التشخيصية' : 'Diagnostic Tests',\n      preview: language === 'ar'\n        ? 'يُعدّ التشخيص الدقيق وفي الوقت المناسب أمرًا بالغ الأهمية للعلاج الفعّال. في مركز تحليل الحيوانات في د.باوز، نُقدّم مجموعة شاملة من خدمات التشخيص البيطرية لتقييم صحة حيوانك الأليف بسرعة ودقة.'\n        : 'Accurate and timely diagnosis is crucial for effective treatment. At Dr. Paws, we offer a comprehensive range of diagnostic veterinary services to quickly and accurately assess your pet\\'s health.',\n      fullContent: language === 'ar'\n        ? `مركز تحليل الحيوانات في د.باوز مُجهز بأحدث تقنيات التشخيص، مما يُتيح لنا إجراء مجموعة مُتنوعة من الاختبارات.\n\n**التحاليل:**\n• اختبارات الدم الكيميائية: تقييم وظائف الأعضاء (الكبد والكلى والبنكرياس)\n• صورة الدم الكاملة: معلومات حول خلايا الدم والمكونات\n• تحليل البول: تقييم وظائف الكلى والكشف عن الالتهابات\n• فحوصات الطفيليات المعوية: فحص مجهري لعينات البراز\n• فحوصات الأمراض الفطرية: اختبارات متنوعة\n• فحوصات الأمراض الفيروسية: طرق تشخيصية متنوعة\n\n**التصوير:**\n• الأشعة السينية: صور تفصيلية للعظام والمفاصل والأعضاء\n• أشعة الأسنان: تقييم صحة الأسنان\n• الموجات فوق الصوتية: صور حية للأعضاء الداخلية\n\n**التشخيصات المتقدمة:**\n• الفحص المجهري: تحديد الخلايا والبكتيريا والطفيليات\n• التنظير الداخلي والخارجي: رؤية داخل الأعضاء\n\nتُمكّن هذه الخدمات التشخيصية البيطرية الشاملة أطباءنا من تحديد سبب مرض أو إصابة حيوانك الأليف ووضع خطة علاج دقيقة وفعّالة.`\n        : `Our state-of-the-art facility is equipped with advanced diagnostic technology, allowing us to perform a variety of tests.\n\n**Laboratory Testing:**\n• Chemical Blood Tests: Evaluate organ function (liver, kidneys, pancreas)\n• Complete Blood Count (CBC): Information about blood cells and components\n• Urine Analysis: Assess kidney function and detect infections\n• Intestinal Parasite Examinations: Microscopic examination of fecal samples\n• Fungal Disease Examinations: Tests including microscopic examination and cultures\n• Viral Disease Examinations: Various diagnostic methods to detect viral infections\n\n**Imaging:**\n• X-rays (Radiography): Detailed images of bones, joints, and internal organs\n• Dental X-rays: Assess health of teeth and surrounding bone structures\n• Ultrasound: Real-time images of internal organs\n\n**Advanced Diagnostics:**\n• Microscopic Examination: Identify cells, bacteria, parasites, or abnormalities\n• Internal and External Endoscopy: Visualize inside of organs or body cavities\n\nThese comprehensive diagnostic veterinary services enable our veterinarians to pinpoint the cause of your pet's illness or injury and develop a precise and effective treatment plan.`,\n      features: language === 'ar' ? [\n        'التحاليل: فحوصات الدم، صورة الدم الكاملة، تحليل البول',\n        'التصوير: الأشعة السينية، أشعة الأسنان، الموجات فوق الصوتية',\n        'التشخيصات المتقدمة: الفحص المجهري، التنظير',\n        'الكشف عن الطفيليات والأمراض: فحوصات شاملة'\n      ] : [\n        'Laboratory Testing: Blood tests, CBC, urine analysis',\n        'Imaging: X-rays, Dental X-rays, Ultrasound',\n        'Advanced Diagnostics: Microscopy, Endoscopy',\n        'Parasite & Disease Detection: Comprehensive examinations'\n      ],\n    },\n    {\n      id: 4,\n      icon: Scissors,\n      title: language === 'ar' ? 'العمليات الجراحية' : 'Medical Surgeries',\n      preview: language === 'ar'\n        ? 'في د. باوز، يُجري أطباؤنا ذوو الخبرة الواسعة مجموعة واسعة من العمليات الجراحية باستخدام أحدث التقنيات والمعدات المتطورة. نتفهم أن جراحة الحيوانات الأليفة قد تكون وقتًا عصيبًا لكل من الحيوانات الأليفة وأصحابها.'\n        : 'At Dr. Paws, our experienced veterinarians perform a wide range of medical surgeries using the latest techniques and state-of-the-art equipment. We understand that pet surgery can be a stressful time for both pets and their owners.',\n      fullContent: language === 'ar'\n        ? `نحن ملتزمون بتوفير بيئة آمنة ومريحة وداعمة طوال العملية.\n\n**تشمل خدمات عيادة الجراحة البيطرية:**\n\n• **عمليات التعقيم (الخصي/استئصال المبيض):** إجراءات روتينية تساعد في منع الحمل غير المرغوب فيه وتوفر فوائد صحية عديدة.\n\n• **جراحة العظام للحيوانات الأليفة:** نعالج الكسور وتمزق الأربطة (تمزق الرباط الصليبي) وخلل تنسج الورك والكوع.\n\n• **عمليات الجهاز الهضمي:** علاج حالات المعدة والأمعاء والكبد والبنكرياس بما في ذلك إزالة الأجسام الغريبة والخزعات.\n\n• **تجميل الأنف (للسلالات قصيرة الأنف):** مصمم للسلالات قصيرة الأنف مثل كلاب البولدوج والباج والبوكسر لتحسين التنفس.\n\n• **عمليات المسالك البولية:** معالجة حصوات المثانة وانسداد المسالك البولية.\n\nقبل أي إجراء جراحي، نُجري تقييمًا شاملاً قبل الجراحة. نُعطي الأولوية لإدارة الألم طوال العملية الجراحية ونوفر رعاية شاملة بعد العملية.`\n        : `We are committed to providing a safe, comfortable, and supportive environment throughout the entire process.\n\n**Our comprehensive pet surgery services include:**\n\n• **Sterilization Operations (Spay/Neuter):** Routine procedures that prevent unwanted litters and offer numerous health benefits.\n\n• **Orthopedic surgery for pets:** We address fractures, ligament tears (cruciate ligament ruptures), hip and elbow dysplasia to restore mobility.\n\n• **Digestive System Operations:** Treatment of conditions affecting the stomach, intestines, liver, pancreas including foreign body removal and biopsies.\n\n• **Rhinoplasty (for Brachycephalic Breeds):** Designed for short-nosed breeds like Bulldogs, Pugs, and Boxers to improve breathing.\n\n• **Urinary Tract Operations:** Address bladder stones, urinary obstructions, and other urinary system issues.\n\nPrior to any pet surgery procedure, we conduct a thorough pre-surgical evaluation. We prioritize pain management throughout the surgical process and provide comprehensive post-operative care.`,\n      features: language === 'ar' ? [\n        'عمليات التعقيم (الخصي/استئصال المبيض)',\n        'جراحة العظام: الكسور وتمزق الأربطة وخلل التنسج',\n        'عمليات الجهاز الهضمي: إزالة الأجسام الغريبة والخزعات',\n        'تجميل الأنف للسلالات قصيرة الأنف',\n        'عمليات المسالك البولية: حصوات المثانة والانسداد'\n      ] : [\n        'Sterilization Operations (Spay/Neuter)',\n        'Orthopedic Surgery: Fractures, ligament repairs, dysplasia',\n        'Digestive System Operations: Foreign body removal, biopsies',\n        'Rhinoplasty for Brachycephalic Breeds',\n        'Urinary Tract Operations: Bladder stones, obstructions'\n      ],\n    },\n    {\n      id: 5,\n      icon: Stethoscope,\n      title: language === 'ar' ? 'خدمات طب الأسنان' : 'Dental Services',\n      preview: language === 'ar'\n        ? 'تُعدّ صحة الفم الجيدة أمرًا بالغ الأهمية لصحة ورفاهية حيوانك الأليف بشكل عام. يُقدّم د. باوز خدمات بيطرية شاملة للأسنان مُصمّمة للحفاظ على صحة أسنان ولثة حيوانك الأليف طوال حياته.'\n        : 'Good oral hygiene is crucial for your pet\\'s overall health and well-being. Dr. Paws offers comprehensive dental veterinary services designed to keep your pet\\'s teeth and gums healthy throughout their lives.',\n      fullContent: language === 'ar'\n        ? `خدماتنا ضرورية لمنع أمراض اللثة التي يُمكن أن تُؤدّي إلى مشاكل صحية خطيرة تؤثر على القلب والكلى.\n\n**تشمل خدماتنا:**\n\n• **تنظيف الأسنان الاحترافي (الوقاية):** حجر الزاوية في الرعاية الوقائية للأسنان. نزيل تراكم البلاك والجير من فوق وتحت خط اللثة ونُلمّع الأسنان.\n\n• **الفحوصات الشاملة للأسنان:** فحوصات منتظمة للكشف المُبكّر عن مشاكل الأسنان وقد نوصي بأشعة سينية للأسنان.\n\n• **كشط وتنعيم الجذور:** يُزيل تراكم الجير ويُنعّم أسطح جذور الأسنان لعلاج أمراض اللثة.\n\n• **خلع الأسنان:** في حالات أمراض الأسنان الشديدة، يُجري أطباؤنا عمليات الخلع مع الاهتمام الدقيق بإدارة الألم.\n\n• **جراحة الفم:** إجراءات متقدمة لمشاكل الأسنان المعقدة مثل أورام الفم أو كسور الفك.\n\nالعناية المنتظمة بالأسنان ضرورية للحفاظ على صحة فم حيوانك الأليف وتحسين جودة حياته.`\n        : `Our dental services are essential for preventing periodontal disease, which can lead to serious health problems affecting the heart, kidneys, and other organs.\n\n**Our services include:**\n\n• **Professional Teeth Cleaning (Prophylaxis):** The cornerstone of preventative dental care. We remove plaque and tartar buildup from above and below the gum line, then polish teeth.\n\n• **Comprehensive Dental Check-ups:** Regular examinations for early detection of dental problems. We may recommend dental X-rays to evaluate tooth roots and surrounding bone.\n\n• **Scaling and Root Planing:** Removes tartar buildup and smooths tooth root surfaces. Particularly important for treating periodontal disease.\n\n• **Tooth Extractions:** In cases of severe dental disease or fractured teeth, performed with careful attention to pain management.\n\n• **Oral Surgery:** Advanced procedures for complex dental issues such as oral tumors or jaw fractures.\n\nRegular dental care is essential for maintaining your pet's oral health, improving their quality of life, and contributing to their overall well-being.`,\n      features: language === 'ar' ? [\n        'تنظيف الأسنان الاحترافي (الوقاية)',\n        'الفحوصات الشاملة للأسنان والأشعة السينية',\n        'كشط وتنعيم الجذور',\n        'خلع الأسنان',\n        'جراحة الفم المتقدمة'\n      ] : [\n        'Professional Teeth Cleaning (Prophylaxis)',\n        'Comprehensive Dental Check-ups and X-rays',\n        'Scaling and Root Planing',\n        'Tooth Extractions',\n        'Advanced Oral Surgery'\n      ],\n    },\n    {\n      id: 6,\n      icon: Syringe,\n      title: language === 'ar' ? 'التطعيمات الدورية' : 'Periodic Vaccinations',\n      preview: language === 'ar'\n        ? 'تُعدّ تطعيمات الحيوانات الأليفة حجر الزاوية في الخدمات البيطرية الوقائية، حيث تحمي حيوانك الأليف من مجموعة من الأمراض المُعدية التي يُحتمل أن تُهدّد حياته. في د. باوز، نُخصّص بروتوكولات تطعيماتنا بناءً على احتياجات حيوانك الفريدة.'\n        : 'Pet vaccinations are a cornerstone of preventative veterinary services, protecting your pet from a range of contagious and potentially life-threatening diseases. At Dr. Paws, we tailor our vaccination protocols based on your pet\\'s unique needs.',\n      fullContent: language === 'ar'\n        ? `نتفهم أن كل حيوان أليف فريد من نوعه، لذلك نُخصّص بروتوكولاتنا بناءً على نوع حيوانك وعمره ونمط حياته.\n\n**تطعيمات القطط الثلاثي والرباعي:**\nالحماية ضد فيروس الهربس (التهابات الجهاز التنفسي) والكاليسيفايروس (مشاكل تنفسية) والبانليفوبينيا (طاعون القطط). التطعيم الرباعي يضيف الحماية ضد لوكيميا القطط.\n\nالفوائد: الحماية من الأمراض القاتلة، تقوية جهاز المناعة، الوقاية من انتشار الأمراض بين القطط.\n\n**تطعيم الكلاب الخماسي:**\nالحماية ضد خمسة أمراض: داء الكلب، داء البارفو، داء الأدنو الفيروسي، داء البارافلو، وداء البورديتيلا.\n\nالفوائد: الحماية من الأمراض القاتلة، تقوية المناعة، منع انتشار الأمراض بين الكلاب.\n\n**تطعيم السعار:**\nمن أهم التطعيمات للكلاب والقطط، يحمي من مرض فيروسي يصيب الجهاز العصبي ويمكن انتقاله للإنسان.\n\n**تطعيمات الديدان:**\nأدوية للقضاء على الديدان المعوية تُعطى بشكل دوري حسب توجيهات الطبيب البيطري.`\n        : `We understand that every pet is unique, so we customize protocols based on your pet's species, age, lifestyle, and individual risk factors.\n\n**Trivalent and Quadrivalent Cat Vaccines:**\nProtection against feline herpesvirus (upper respiratory infections), calicivirus (respiratory problems), and panleukopenia (feline distemper). The quadrivalent vaccine adds protection against Feline Leukemia.\n\nBenefits: Protection from fatal diseases, strengthening immunity, preventing disease spread among cats.\n\n**Canine Pentavalent Vaccine:**\nProtection against five diseases: Rabies, Parvovirus, Adenovirus, Parainfluenza, and Bordetella.\n\nBenefits: Protection from fatal diseases, strengthening immunity, preventing disease spread among dogs.\n\n**Rabies Vaccine:**\nOne of the most important vaccines for both dogs and cats, protecting against this viral disease that can be transmitted to humans.\n\n**Deworming Medications:**\nMedications to eliminate intestinal worms, given periodically as directed by the veterinarian.`,\n      features: language === 'ar' ? [\n        'تطعيمات القطط الثلاثي والرباعي',\n        'تطعيم الكلاب الخماسي',\n        'تطعيم السعار للكلاب والقطط',\n        'أدوية الديدان'\n      ] : [\n        'Trivalent & Quadrivalent Cat Vaccines',\n        'Canine Pentavalent Vaccine',\n        'Rabies Vaccine for Dogs and Cats',\n        'Deworming Medications'\n      ],\n    },\n    {\n      id: 7,\n      icon: Plane,\n      title: language === 'ar' ? 'إجراءات سفر الحيوانات الأليفة' : 'Pet Travel Procedures',\n      preview: language === 'ar'\n        ? 'يُمكن أن يكون السفر مع حيوانك الأليف تجربة مُجزية، ولكنه يتطلب تخطيطًا دقيقًا والالتزام بلوائح مُحددة. يُقدّم د. باوز خدمات شاملة لإجراءات سفر الحيوانات الأليفة لضمان سفر سلس وآمن.'\n        : 'Traveling with your pet can be a rewarding experience, but it requires careful planning and adherence to specific regulations. Dr. Paws offers comprehensive pet travel procedures services to ensure smooth and safe pet travel.',\n      fullContent: language === 'ar'\n        ? `نتفهم أن لكل وجهة متطلبات فريدة، وفريقنا ذو الخبرة هنا لإرشادك سواء في الداخل أو دوليًا.\n\n**تشمل خدماتنا البيطرية لإجراءات سفر الحيوانات الأليفة:**\n\n• **الشهادات الصحية:** وثيقة رسمية تُثبت أن حيوانك الأليف يتمتع بصحة جيدة وخالٍ من الأمراض المُعدية، مطلوبة للسفر عبر حدود الولايات أو دوليًا. نُجري فحصًا بدنيًا شاملاً.\n\n• **اختبار داء الكَلَب لأغراض السفر:** العديد من البلدان تتطلب إثباتًا للتطعيم ضد داء الكَلَب و/أو اختبارًا لمعايرة داء الكَلَب. نُقدّم الوثائق الرسمية المطلوبة للسفر الدولي. ملاحظة: غالبًا ما تكون هناك فترات انتظار.\n\n• **ملء نماذج الشهادات:** نساعدك في ملء نماذج الشهادات الضرورية بدقة وكفاءة. نبقى على اطلاع بأحدث اللوائح بما في ذلك الدول الأوروبية والشهادات المُصدّقة من USDA APHIS.\n\nنوصي بالاتصال بنا قبل أسابيع أو حتى أشهر من موعد سفرك لإتاحة وقت كافٍ للفحوصات والاختبارات والأوراق.`\n        : `We understand that each destination has unique requirements, and our experienced team is here to guide you through the process, both domestically and internationally.\n\n**Our pet travel veterinary services include:**\n\n• **Health Certificates:** Official document verifying that your pet is healthy and free from contagious diseases, required for travel across state lines or internationally. We perform thorough physical examinations.\n\n• **Rabies Testing for Travel Purposes:** Many countries require proof of rabies vaccination and/or a rabies titer test. We administer vaccinations and perform titer tests, providing official documentation. Note: waiting periods often apply.\n\n• **Filling out Certificate Forms:** Our experienced team assists with completing complex paperwork. We stay up-to-date on regulations for various destinations, including European countries and those requiring USDA APHIS endorsed certificates.\n\nWe recommend contacting us several weeks or even months before your planned travel date to allow ample time for examinations, testing, and paperwork.`,\n      features: language === 'ar' ? [\n        'الشهادات الصحية للسفر المحلي والدولي',\n        'اختبار وتطعيم داء الكَلَب للسفر',\n        'ملء نماذج الشهادات والتصديق من USDA'\n      ] : [\n        'Health Certificates for domestic and international travel',\n        'Rabies Testing and Vaccination for Travel',\n        'Certificate Forms completion and USDA endorsement'\n      ],\n    },\n    {\n      id: 8,\n      icon: Home,\n      title: language === 'ar' ? 'خدمات الإقامة' : 'Boarding Services',\n      preview: language === 'ar'\n        ? 'في د. باوز، نتفهم أن ترك حيوانك الأليف قد يكون مُرهقًا. لهذا السبب نُقدّم خدمات الإقامة وفندقة الحيوانات المُريحة والرعاية كجزء من خدماتنا البيطرية الشاملة.'\n        : 'At Dr. Paws, we understand that leaving your pet behind can be stressful. That\\'s why we offer comfortable and caring boarding services as part of our comprehensive veterinary services, providing a true home away from home.',\n      fullContent: language === 'ar'\n        ? `نُلبي مجموعة مُتنوعة من الاحتياجات مع خيارات إقامة مُتخصّصة:\n\n**فندق علاجي للحيوانات الأليفة:**\nمصمم للحيوانات الأليفة التي تتطلب رعاية طبية مُتخصّصة:\n• التعافي بعد الجراحة: مُراقبة دقيقة وإدارة للألم ومُساعدة في الحركة\n• إدارة الحالات المُزمنة: رعاية فردية للسكري وأمراض الكلى والقلب\n• الحيوانات التي تتطلب مُراقبة دقيقة: ملاحظة مُتكررة ومراقبة العلامات الحيوية\n\n**فندق للحيوانات وعلاج الفطريات:**\nإيواء متخصص للحيوانات التي تخضع لعلاج من الالتهابات الفطرية:\n• العزل: بيئة مُنفصلة ومعزولة لمنع انتقال العدوى\n• بروتوكولات تنظيف وتطهير متخصصة: نظافة صارمة\n• إعطاء الأدوية المُضادة للفطريات: وفقًا لتعليمات الطبيب\n• مُراقبة تقدّم العلاج: ملاحظة دقيقة لضمان الفعالية\n\nخدمات الإقامة لدينا تضمن حصول حيوانك الأليف على رعاية احترافية وانتباه أثناء غيابك.`\n        : `We cater to a variety of needs with specialized boarding options:\n\n**Therapeutic Pet Hotel:**\nDesigned for pets requiring specialized medical care:\n• Post-surgical recovery: Close monitoring, pain management, mobility assistance\n• Management of chronic conditions: Individualized care for diabetes, kidney disease, heart disease\n• Pets requiring close monitoring: Frequent observation, vital signs monitoring, medication administration\n\n**Pet Hotel and Fungi Treatment:**\nSpecialized boarding for pets undergoing fungal infection treatment:\n• Isolation: Separate environment to prevent cross-contamination\n• Specialized cleaning and disinfection protocols: Strict hygiene to prevent fungal spores\n• Administration of antifungal medications: Prescribed medications according to veterinarian's instructions\n• Monitoring of treatment progress: Close observation to ensure treatment effectiveness\n\nOur boarding services ensure your pet receives professional care and attention while you're away.`,\n      features: language === 'ar' ? [\n        'فندق علاجي: التعافي بعد الجراحة وإدارة الحالات المزمنة',\n        'إقامة متخصصة لعلاج الفطريات: بيئة معزولة مع بروتوكولات صارمة'\n      ] : [\n        'Therapeutic Pet Hotel: Post-surgical recovery and chronic condition management',\n        'Specialized Fungi Treatment Boarding: Isolated environment with strict protocols'\n      ],\n    },\n    {\n      id: 9,\n      icon: Heart,\n      title: language === 'ar' ? 'العناية المركزة' : 'Intensive Care',\n      preview: language === 'ar'\n        ? 'في عيادة د. باوز البيطرية، نتفهم أن الأمراض والإصابات الخطيرة تتطلب رعاية مُتخصّصة. وحدة العناية المركزة للحيوانات الأليفة لدينا مُصمّمة لتوفير مُراقبة وعلاج مُتقدّمين للحيوانات الأليفة في الحالات التي تُهدّد حياتها.'\n        : 'At Dr. Paws Veterinary Clinic, we understand that critical illnesses and injuries require specialized care. Our pet intensive care unit (ICU) is a dedicated space designed to provide advanced monitoring and treatment for pets in life-threatening conditions.',\n      fullContent: language === 'ar'\n        ? `فريقنا البيطري مُدرّب على طب الحالات الحرجة ويستخدم أحدث المُعدّات لتوفير رعاية على مدار الساعة.\n\n**تُركّز خدمات مركز العناية بالحيوانات على إدارة وعلاج:**\n\n• **فشل الأعضاء:**\n  - الفشل الكلوي: علاج مُتقدّم بالسوائل وإدارة للكهارل ورعاية داعمة\n  - الفشل الكبدي: علاجات متخصصة لدعم وظائف الكبد\n  - فشل القلب: مُراقبة مُتقدّمة للقلب وعلاج بالأكسجين\n\n• **الاضطرابات الأيضية:** إدارة حالات معقدة مثل داء السكري ومرض كوشينغ ومرض أديسون.\n\n• **أمراض الغدد الصماء:** رعاية متخصصة لقصور الغدة الدرقية وفرط نشاط الغدة الدرقية والسكري الكاذب.\n\n• **الإصابات الشديدة:** رعاية فورية شاملة للكسور والإصابات الداخلية والجروح الشديدة.\n\n• **حالات حرجة أخرى:** الإنتان، ضيق التنفس، الحالات العصبية، مُضاعفات ما بعد الجراحة.\n\nفريقنا مُكرس لتوفير رعاية بيطرية مركزة لإعطاء حيوانك الأليف أفضل فرصة للتعافي.`\n        : `Our experienced veterinary team is trained in critical care medicine and utilizes state-of-the-art equipment to provide around-the-clock care.\n\n**Our ICU services focus on managing and treating:**\n\n• **Organ Failure:**\n  - Kidney Failure: Advanced fluid therapy, electrolyte management, supportive care\n  - Liver Failure: Specialized treatments to support liver function and manage complications\n  - Heart Failure: Advanced cardiac monitoring, oxygen therapy, medication management\n\n• **Metabolic Disorders:** Management of complex conditions such as diabetes mellitus, Cushing's disease, and Addison's disease.\n\n• **Endocrine Diseases:** Specialized care for hypothyroidism, hyperthyroidism, and diabetes insipidus to regulate hormone levels.\n\n• **Severe Injuries:** Immediate comprehensive care for traumatic injuries, including fractures, internal injuries, and severe wounds.\n\n• **Other Critical Conditions:** Sepsis, respiratory distress, neurological conditions, post-operative complications.\n\nOur team is dedicated to providing compassionate and intensive veterinary services to give your pet the best possible chance of recovery.`,\n      features: language === 'ar' ? [\n        'علاج فشل الأعضاء: الكلى والكبد والقلب',\n        'الاضطرابات الأيضية: السكري وكوشينغ وأديسون',\n        'أمراض الغدد الصماء: اضطرابات الغدة الدرقية والسكري الكاذب',\n        'الإصابات الشديدة: الكسور والإصابات الداخلية',\n        'حالات حرجة: الإنتان وضيق التنفس والرعاية العصبية'\n      ] : [\n        'Organ Failure Treatment: Kidney, Liver, Heart',\n        'Metabolic Disorders: Diabetes, Cushing\\'s, Addison\\'s disease',\n        'Endocrine Diseases: Thyroid disorders, diabetes insipidus',\n        'Severe Injuries: Trauma care, fractures, internal injuries',\n        'Critical Conditions: Sepsis, respiratory distress, neurological care'\n      ],\n    },\n    {\n      id: 10,\n      icon: AlertCircle,\n      title: language === 'ar' ? 'خدمات الطوارئ' : 'Emergency Services',\n      preview: language === 'ar'\n        ? 'يُمكن أن تكون حالات الطوارئ للحيوانات الأليفة تجربة مُخيفة. في د. باوز، نتفهم مدى إلحاح وضغط هذه المواقف. نُقدّم خدمات بيطرية من خلال عيادة بيطرية طوارئ للحيوانات الأليفة.'\n        : 'Pet emergencies can be a frightening experience for both you and your beloved companion. At Dr. Paws, we understand the urgency and stress of these situations. We provide veterinary services through our emergency pet clinic during our regular business hours.',\n      fullContent: language === 'ar'\n        ? `فريقنا المُتخصّص مُستعد للتعامل مع مجموعة واسعة من الحالات الطبية الطارئة.\n\n**أمثلة على حالات الطوارئ التي نُعالجها:**\n\n• **الصدمات (الاصطدام بسيارة، السقوط):** تقييم وعلاج فوري للكسور والإصابات الداخلية والحالات المُتعلّقة بالصدمات.\n\n• **صعوبة التنفس:** حالة طارئة تُهدّد الحياة. إذا كان حيوانك الأليف يُعاني من صعوبة في التنفس أو يلهث أو لديه لثة زرقاء، اطلب رعاية فورية.\n\n• **نزيف حاد:** تدخل بيطري سريع للنزيف غير المُسيطر عليه.\n\n• **التسمم:** علاج لابتلاع مواد سامة. اتصل بنا أو بخط المُساعدة الخاص بالتسمم فورًا.\n\n• **النوبات:** تحديد السبب والعلاج المُناسب للنوبات العصبية أو الأيضية.\n\n• **الانتفاخ (توسع المعدة والالتواء):** حالة تُهدّد الحياة شائعة في الكلاب الكبيرة تتطلب تدخلاً فوريًا.\n\n**أرقام الطوارئ:**\nفرع الصحافة: 05520 30564\nفرع الماثر: 05313 53667\n\nسيُقدّم فريقنا إرشادات ويستعد لوصولك. هدفنا توفير رعاية سريعة وفعّالة عندما يكون حيوانك الأليف في أمس الحاجة إليها.`\n        : `Our dedicated team is prepared to handle a wide range of urgent medical situations.\n\n**Examples of emergencies we treat include:**\n\n• **Trauma (Hit by Car, Falls):** Immediate assessment and treatment of fractures, internal injuries, and trauma-related conditions.\n\n• **Difficulty Breathing:** Life-threatening respiratory distress. If your pet is struggling to breathe, gasping, or has blue-tinged gums, seek immediate care.\n\n• **Severe Bleeding:** Prompt intervention for uncontrolled internal or external bleeding.\n\n• **Poisoning:** Treatment for toxic substance ingestion. Contact us or the Pet Poison Helpline immediately if suspected.\n\n• **Seizures:** Evaluation and treatment to determine cause and appropriate management.\n\n• **Bloat (Gastric Dilatation-Volvulus):** Life-threatening condition requiring immediate intervention, common in large breed dogs.\n\n**Emergency Contact:**\nAl-Sahafa Branch: 05520 30564\nAl-Mather Branch: 05313 53667\n\nIf your pet is experiencing any urgent medical issues, please call our emergency pet clinic immediately. Our emergency team will provide guidance and prepare for your arrival. Our goal is to provide swift, effective, and compassionate care when your pet needs it most.`,\n      features: language === 'ar' ? [\n        'الصدمات: الاصطدام بسيارة، السقوط، الحوادث',\n        'صعوبة التنفس: ضيق التنفس',\n        'نزيف حاد: داخلي وخارجي',\n        'التسمم: ابتلاع مواد سامة',\n        'النوبات: طوارئ عصبية',\n        'الانتفاخ: توسع المعدة والالتواء'\n      ] : [\n        'Trauma: Hit by car, falls, accidents',\n        'Difficulty Breathing: Respiratory distress',\n        'Severe Bleeding: Internal and external',\n        'Poisoning: Toxic substance ingestion',\n        'Seizures: Neurological emergencies',\n        'Bloat: Gastric Dilatation-Volvulus'\n      ],\n      emergency: true,\n    },\n    {\n      id: 11,\n      icon: Pill,\n      title: language === 'ar' ? 'خدمات الرعاية المنزلية' : 'Home Care Services',\n      preview: language === 'ar'\n        ? 'نتفهم أن زيارة عيادة بيطرية قد تكون صعبة بالنسبة لبعض الحيوانات الأليفة وأصحابها. سواء كان حيوانك الأليف يُعاني من القلق أثناء السفر أو لديه مشاكل في الحركة أو كنت تُفضّل راحة الرعاية في المنزل، يُقدّم د. باوز خدمات بيطرية للرعاية المنزلية.'\n        : 'We understand that visiting a veterinary clinic can be challenging for some pets and their owners. Whether your pet experiences anxiety during travel, has mobility issues, or you simply prefer the convenience of in-home care, Dr. Paws offers compassionate home care veterinary services.',\n      fullContent: language === 'ar'\n        ? `نجلب خبرتنا إليك مُباشرةً، مما يضمن حصول حيوانك الأليف على الاهتمام الضروري مع تقليل التوتر.\n\n**قد تشمل خدمات الرعاية المنزلية:**\n\n• **الفحوصات الصحية:** فحوصات صحية روتينية في راحة منزلك، تقييم صحة حيوانك الأليف بشكل عام وفحص العلامات الحيوية. مُفيد بشكل خاص للحيوانات الأليفة الكبيرة في السن أو تلك التي تُعاني من قيود في الحركة.\n\n• **التطعيمات:** إعطاء التطعيمات الضرورية في المنزل، حماية حيوانك الأليف من الأمراض دون ضغوط زيارة العيادة.\n\n• **جمع العينات:** جمع عينات الدم أو البول أو البراز في منزلك للاختبارات التشخيصية، مما يُقلّل من التوتر على حيوانك الأليف.\n\nخدماتنا البيطرية للرعاية المنزلية مُصمّمة لتوفير رعاية يسهل الوصول إليها، مما يضمن حصول حيوانك الأليف على الاهتمام الضروري في بيئة مألوفة ومريحة. يُرجى الاتصال بنا لمُناقشة احتياجات حيوانك الأليف.`\n        : `We bring our expertise directly to you, ensuring your pet receives the necessary attention while minimizing stress.\n\n**Our home care services may include:**\n\n• **Wellness Exams:** Routine wellness exams in the comfort of your home, assessing overall health, checking vital signs, and discussing any concerns. Especially beneficial for senior pets or those with mobility limitations.\n\n• **Vaccinations:** Administer necessary vaccinations at home, protecting your pet from preventable diseases without the stress of a clinic visit.\n\n• **Sample Collection:** Collect blood, urine, or fecal samples in your home for diagnostic testing, minimizing stress for your pet.\n\nOur home care veterinary services are designed to provide accessible and compassionate care, ensuring your pet receives the necessary attention in a familiar, comfortable environment. Please contact us to discuss your pet's needs and determine if a home visit is the right option.`,\n      features: language === 'ar' ? [\n        'الفحوصات الصحية: تقييمات صحية روتينية في المنزل',\n        'التطعيمات: خدمات التطعيم في المنزل',\n        'جمع العينات: الدم والبول والبراز للاختبارات'\n      ] : [\n        'Wellness Exams: Routine health assessments at home',\n        'Vaccinations: In-home vaccination services',\n        'Sample Collection: Blood, urine, fecal samples for testing'\n      ],\n    },\n  ];\n\n  const ServiceCard = ({ service, isInView }: { service: typeof services[0]; isInView: boolean }) => {\n    const Icon = service.icon;\n    const isExpanded = expandedCards[service.id];\n    \n    const lordIconConfig: Record<number, string> = {\n      1: 'https://cdn.lordicon.com/fdjmqgqo.json',\n      2: 'https://cdn.lordicon.com/qrbnmuva.json',\n      3: 'https://cdn.lordicon.com/xtqxtpiq.json',\n      4: 'https://cdn.lordicon.com/ebchswfj.json',\n      5: 'https://cdn.lordicon.com/qgvewybt.json',\n      6: 'https://cdn.lordicon.com/ssjzuqhe.json',\n      7: 'https://cdn.lordicon.com/xvidkckm.json',\n      8: 'https://cdn.lordicon.com/nejoxqhx.json',\n      9: 'https://cdn.lordicon.com/rqeluyar.json',\n      10: 'https://cdn.lordicon.com/njkwpvad.json',\n      11: 'https://cdn.lordicon.com/npehekun.json',\n    };\n    \n    const hasLordIcon = lordIconConfig[service.id];\n\n    return (\n      <motion.div\n        initial={{ opacity: 0, y: 30 }}\n        animate={isInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 30 }}\n        transition={{ duration: 0.6, ease: 'easeOut' }}\n        className=\"h-full\"\n      >\n        <Card\n          className={`h-full flex flex-col hover-elevate ${\n            service.emergency ? 'border-[#e9c46a]' : ''\n          }`}\n          data-testid={`card-service-${service.id}`}\n          dir={language === 'ar' ? 'rtl' : 'ltr'}\n        >\n          <CardHeader>\n            <CardTitle\n              className={`text-[#18ac61] ${\n                hasLordIcon ? 'flex items-center gap-3' : ''\n              }`}\n              data-testid={`title-service-${service.id}`}\n            >\n              {hasLordIcon && (\n                <lord-icon\n                  src={lordIconConfig[service.id]}\n                  trigger=\"loop\"\n                  delay=\"1500\"\n                  style={{ width: '60px', height: '60px' }}\n                />\n              )}\n              {service.title}\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"flex flex-col flex-1\">\n            {/* Preview text - always visible */}\n            <p\n              className=\"text-foreground/80 mb-4\"\n              data-testid={`preview-service-${service.id}`}\n            >\n              {service.preview}\n            </p>\n\n            {/* Expanded content - shown when Read More is clicked */}\n            <AnimatePresence initial={false}>\n              {isExpanded && (\n                <motion.div\n                  key={`expanded-${service.id}`}\n                  initial={{ opacity: 0, height: 0 }}\n                  animate={{ opacity: 1, height: 'auto' }}\n                  exit={{ opacity: 0, height: 0 }}\n                  transition={{ duration: 0.3, ease: 'easeOut' }}\n                >\n                  {/* Full content */}\n                  {service.fullContent && (\n                    <div className=\"mb-4 text-foreground/80 whitespace-pre-line\">\n                      {service.fullContent}\n                    </div>\n                  )}\n\n                  {/* Features list */}\n                  <ul className=\"space-y-2 mb-4\">\n                    {service.features.map((feature, idx) => (\n                      <li\n                        key={idx}\n                        className=\"text-sm text-foreground/70 flex items-start gap-2\"\n                        data-testid={`feature-service-${service.id}-${idx}`}\n                      >\n                        <span className=\"inline-block w-1.5 h-1.5 rounded-full bg-[#18ac61] mt-2 flex-shrink-0\" />\n                        <span>{feature}</span>\n                      </li>\n                    ))}\n                  </ul>\n                </motion.div>\n              )}\n            </AnimatePresence>\n\n            {/* Read More / Show Less button */}\n            {service.fullContent && (\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={() => toggleExpand(service.id)}\n                className=\"mb-4 mt-auto\"\n                data-testid={`button-expand-${service.id}`}\n              >\n                {isExpanded ? (\n                  <>\n                    <ChevronUp className=\"w-4 h-4 mr-1\" />\n                    {language === 'ar' ? 'عرض أقل' : 'Show less'}\n                  </>\n                ) : (\n                  <>\n                    <ChevronDown className=\"w-4 h-4 mr-1\" />\n                    {language === 'ar' ? 'اقرأ المزيد' : 'Read more'}\n                  </>\n                )}\n              </Button>\n            )}\n\n            {/* Book appointment button */}\n            <Link href=\"/book-now\">\n              <Button\n                className=\"w-full\"\n                data-testid={`button-book-${service.id}`}\n              >\n                {language === 'ar' ? 'احجز موعد' : 'Book an Appointment'}\n              </Button>\n            </Link>\n          </CardContent>\n        </Card>\n      </motion.div>\n    );\n  };\n\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <Header />\n      <ECGAnimation />\n\n      <main className=\"flex-1 relative z-10\">\n        {/* Hero Section */}\n        <section\n          ref={heroRef}\n          className=\"relative h-[400px] flex items-center justify-center overflow-hidden\"\n        >\n          <motion.div\n            initial={{ scale: 1.1 }}\n            animate={{ scale: 1 }}\n            transition={{ duration: 1.5, ease: 'easeOut' }}\n            className=\"absolute inset-0\"\n          >\n            <div className=\"absolute inset-0 bg-gradient-to-b from-black/60 to-black/40 z-10\" />\n            <img\n              src={servicesHeroImage}\n              alt=\"Veterinary Services\"\n              className=\"w-full h-full object-cover\"\n            />\n          </motion.div>\n\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            animate={heroInView ? { opacity: 1, y: 0 } : {}}\n            transition={{ duration: 0.8, delay: 0.3 }}\n            className=\"relative z-20 text-center px-6\"\n          >\n            <h1\n              className=\"font-display text-5xl md:text-6xl font-bold text-white mb-4\"\n              data-testid=\"text-services-header\"\n            >\n              {language === 'ar' ? 'خدماتنا' : 'Our Services'}\n            </h1>\n            <p\n              className=\"text-xl md:text-2xl text-white/90 max-w-3xl mx-auto\"\n              data-testid=\"text-services-subheader\"\n            >\n              {language === 'ar' \n                ? 'نقدم نطاقًا كاملاً من الرعاية لحيواناتكم الأليفة، من الفحوصات الروتينية إلى العلاجات المتقدمة'\n                : 'Comprehensive & Specialized Care for Your Pets'\n              }\n            </p>\n          </motion.div>\n        </section>\n\n        {/* Services Grid 1 */}\n        <section ref={servicesRef1} className=\"py-20\">\n          <div className=\"max-w-7xl mx-auto px-6\">\n            <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n              {services.slice(0, 3).map((service) => (\n                <ServiceCard key={service.id} service={service} isInView={servicesInView1} />\n              ))}\n            </div>\n          </div>\n        </section>\n\n        {/* Image Section 1 */}\n        <motion.section\n          ref={imageRef1}\n          className=\"py-16\"\n        >\n          <div className=\"max-w-7xl mx-auto px-6\">\n            <div className=\"grid md:grid-cols-2 gap-12 items-center\">\n              <motion.div\n                initial={{ opacity: 0, x: -50 }}\n                animate={imageInView1 ? { opacity: 1, x: 0 } : { opacity: 0, x: -50 }}\n                transition={{ duration: 0.8, ease: 'easeOut' }}\n              >\n                <motion.img\n                  whileHover={{ scale: 1.02 }}\n                  transition={{ duration: 0.3 }}\n                  src={vetExamImage}\n                  alt=\"Veterinary examination\"\n                  className=\"rounded-xl w-full h-auto object-cover shadow-md\"\n                  data-testid=\"img-services-1\"\n                />\n              </motion.div>\n              <motion.div\n                initial={{ opacity: 0, x: 50 }}\n                animate={imageInView1 ? { opacity: 1, x: 0 } : { opacity: 0, x: 50 }}\n                transition={{ duration: 0.8, delay: 0.2, ease: 'easeOut' }}\n                className=\"space-y-6\"\n                dir={language === 'ar' ? 'rtl' : 'ltr'}\n              >\n                <h2 className=\"text-3xl font-bold text-primary\">\n                  {language === 'ar' ? 'رعاية شاملة ومتخصصة' : 'Comprehensive & Specialized Care'}\n                </h2>\n                <p className=\"text-lg text-foreground/90\">\n                  {language === 'ar' \n                    ? 'في عيادات د. باوز، نقدم مجموعة واسعة من الخدمات البيطرية المتخصصة باستخدام أحدث المعدات والتقنيات لضمان صحة وسعادة حيوانك الأليف.'\n                    : 'At Dr. Paws, we offer a wide range of specialized veterinary services using the latest equipment and technology to ensure your pet\\'s health and happiness.'\n                  }\n                </p>\n              </motion.div>\n            </div>\n          </div>\n        </motion.section>\n\n        {/* Services Grid 2 */}\n        <section ref={servicesRef2} className=\"py-20\">\n          <div className=\"max-w-7xl mx-auto px-6\">\n            <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n              {services.slice(3, 7).map((service) => (\n                <ServiceCard key={service.id} service={service} isInView={servicesInView2} />\n              ))}\n            </div>\n          </div>\n        </section>\n\n        {/* Image Section 2 */}\n        <motion.section\n          ref={imageRef2}\n          className=\"py-16\"\n        >\n          <div className=\"max-w-7xl mx-auto px-6\">\n            <div className=\"grid md:grid-cols-2 gap-12 items-center\">\n              <motion.div\n                initial={{ opacity: 0, x: 50 }}\n                animate={imageInView2 ? { opacity: 1, x: 0 } : { opacity: 0, x: 50 }}\n                transition={{ duration: 0.8, ease: 'easeOut' }}\n                className=\"md:order-2\"\n              >\n                <motion.img\n                  whileHover={{ scale: 1.02 }}\n                  transition={{ duration: 0.3 }}\n                  src={consultationImage}\n                  alt=\"Veterinary consultation\"\n                  className=\"rounded-xl w-full h-auto object-cover shadow-md\"\n                  data-testid=\"img-services-2\"\n                />\n              </motion.div>\n              <motion.div\n                initial={{ opacity: 0, x: -50 }}\n                animate={imageInView2 ? { opacity: 1, x: 0 } : { opacity: 0, x: -50 }}\n                transition={{ duration: 0.8, delay: 0.2, ease: 'easeOut' }}\n                className=\"space-y-6 md:order-1\"\n                dir={language === 'ar' ? 'rtl' : 'ltr'}\n              >\n                <h2 className=\"text-3xl font-bold text-primary\">\n                  {language === 'ar' ? 'فريق محترف ومتفاني' : 'Professional & Dedicated Team'}\n                </h2>\n                <p className=\"text-lg text-foreground/90\">\n                  {language === 'ar' \n                    ? 'فريقنا من الأطباء البيطريين ذوي الخبرة ملتزم بتقديم أفضل رعاية ممكنة لحيواناتكم الأليفة مع الاهتمام بكل التفاصيل.'\n                    : 'Our team of experienced veterinarians is committed to providing the best possible care for your pets with attention to every detail.'\n                  }\n                </p>\n              </motion.div>\n            </div>\n          </div>\n        </motion.section>\n\n        {/* Services Grid 3 */}\n        <section ref={servicesRef3} className=\"py-20\">\n          <div className=\"max-w-7xl mx-auto px-6\">\n            <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n              {services.slice(7, 10).map((service) => (\n                <ServiceCard key={service.id} service={service} isInView={servicesInView3} />\n              ))}\n            </div>\n          </div>\n        </section>\n\n        {/* Home Care Section */}\n        <motion.section\n          ref={homeCareRef}\n          className=\"py-16\"\n        >\n          <div className=\"max-w-7xl mx-auto px-6\">\n            <div className=\"grid md:grid-cols-3 gap-12 items-center\">\n              <motion.div\n                initial={{ opacity: 0, x: -50 }}\n                animate={homeCareInView ? { opacity: 1, x: 0 } : { opacity: 0, x: -50 }}\n                transition={{ duration: 0.8, ease: 'easeOut' }}\n              >\n                <motion.img\n                  whileHover={{ scale: 1.02 }}\n                  transition={{ duration: 0.3 }}\n                  src={teamImage}\n                  alt=\"Veterinary team\"\n                  className=\"rounded-xl w-full h-auto object-cover shadow-md\"\n                  data-testid=\"img-home-care-left\"\n                />\n              </motion.div>\n\n              <motion.div\n                initial={{ opacity: 0, y: 30 }}\n                animate={homeCareInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 30 }}\n                transition={{ duration: 0.8, delay: 0.2, ease: 'easeOut' }}\n              >\n                <ServiceCard service={services[10]} isInView={homeCareInView} />\n              </motion.div>\n\n              <motion.div\n                initial={{ opacity: 0, x: 50 }}\n                animate={homeCareInView ? { opacity: 1, x: 0 } : { opacity: 0, x: 50 }}\n                transition={{ duration: 0.8, ease: 'easeOut' }}\n              >\n                <motion.img\n                  whileHover={{ scale: 1.02 }}\n                  transition={{ duration: 0.3 }}\n                  src={vetExamImage}\n                  alt=\"Home care service\"\n                  className=\"rounded-xl w-full h-auto object-cover shadow-md\"\n                  data-testid=\"img-home-care-right\"\n                />\n              </motion.div>\n            </div>\n          </div>\n        </motion.section>\n      </main>\n\n      <HeartbeatDivider />\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":59264},"client/src/components/AnimatedPawBackground.tsx":{"content":"import { useMemo } from 'react';\nimport { motion } from 'framer-motion';\n\nconst PawPrint = ({ color, size, top, left, duration, delay }: {\n  color: string;\n  size: number;\n  top: string;\n  left: string;\n  duration: number;\n  delay: number;\n}) => {\n  return (\n    <motion.div\n      className=\"absolute\"\n      style={{\n        top,\n        left,\n        width: `${size}px`,\n        height: `${size}px`,\n        opacity: 0.06,\n      }}\n      animate={{\n        y: [0, -30, 0],\n        x: [0, 15, -15, 0],\n        rotate: [0, 10, -10, 0],\n      }}\n      transition={{\n        duration,\n        delay,\n        repeat: Infinity,\n        ease: \"easeInOut\",\n      }}\n    >\n      <svg\n        viewBox=\"0 0 24 24\"\n        fill={color}\n        width=\"100%\"\n        height=\"100%\"\n      >\n        <path d=\"M12 8c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm-6 4c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm12 0c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm-9 6c0-1.66 1.34-3 3-3s3 1.34 3 3H9zm-3 2c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm12 0c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z\"/>\n        <ellipse cx=\"12\" cy=\"20\" rx=\"4\" ry=\"2.5\"/>\n      </svg>\n    </motion.div>\n  );\n};\n\nexport default function AnimatedPawBackground() {\n  const brandColors = [\n    '#18ac61',\n    '#264653',\n    '#e9c46a',\n    '#f4a261',\n  ];\n\n  const pawPrints = useMemo(() => {\n    return Array.from({ length: 18 }, (_, i) => ({\n      id: i,\n      color: brandColors[Math.floor(Math.random() * brandColors.length)],\n      size: Math.random() * 40 + 60,\n      top: `${Math.random() * 100}%`,\n      left: `${Math.random() * 100}%`,\n      duration: Math.random() * 10 + 15,\n      delay: Math.random() * 5,\n    }));\n  }, []);\n\n  return (\n    <div className=\"fixed inset-0 pointer-events-none overflow-hidden z-0\">\n      {pawPrints.map((paw) => (\n        <PawPrint\n          key={paw.id}\n          color={paw.color}\n          size={paw.size}\n          top={paw.top}\n          left={paw.left}\n          duration={paw.duration}\n          delay={paw.delay}\n        />\n      ))}\n    </div>\n  );\n}\n","size_bytes":2056},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/pages/About.tsx":{"content":"import { motion, useInView } from 'framer-motion';\nimport { useLanguage } from '@/contexts/LanguageContext';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Label } from '@/components/ui/label';\nimport { useState, useRef, useEffect, useCallback } from 'react';\nimport { useToast } from '@/hooks/use-toast';\nimport Header from '@/components/Header';\nimport ECGAnimation from '@/components/ECGAnimation';\nimport HeartbeatDivider from '@/components/HeartbeatDivider';\nimport Footer from '@/components/Footer';\nimport { Heart, Users, Building2, Stethoscope, Upload } from 'lucide-react';\nimport teamImage from '@assets/generated_images/Veterinary_team_professional_photo_a4845f6b.png';\nimport vetExamImage from '@assets/generated_images/Vet_examining_golden_retriever_19654044.png';\nimport consultationImage from '@assets/generated_images/Vet_consultation_with_cat_owner_7978144f.png';\nimport equipmentImage from '@assets/generated_images/Modern_veterinary_equipment_room_49dc6345.png';\nimport drMahmoudReda from '@assets/Dr Mahmoud Reda_1761496171222.png';\nimport drHassanEmbaby from '@assets/Dr Hassan Embaby_1761496171223.png';\nimport drMohamedKelany from '@assets/Dr Mohamed Kelany_1761496171224.png';\nimport drMohamedAbdulla from '@assets/Dr Mohamed Abdulla_1761496171225.png';\nimport drHeshamAlMatrein from '@assets/Dr Hesham AlMatrein _1761496171225.png';\nimport { useQuery } from '@tanstack/react-query';\nimport type { Partner } from '@shared/schema';\nimport useEmblaCarousel from 'embla-carousel-react';\nimport Autoplay from 'embla-carousel-autoplay';\n\nexport default function About() {\n  const { t, language } = useLanguage();\n  const { toast } = useToast();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const { data: partners = [] } = useQuery<Partner[]>({\n    queryKey: [\"/api/partners\"],\n  });\n\n  const heroRef = useRef(null);\n  const whoWeAreRef = useRef(null);\n  const visionMissionRef = useRef(null);\n  const whyChooseRef = useRef(null);\n  const doctorsRef = useRef(null);\n  const partnersRef = useRef(null);\n  const careersRef = useRef(null);\n\n  const heroInView = useInView(heroRef, { once: false, amount: 0.3 });\n  const whoWeAreInView = useInView(whoWeAreRef, { once: false, amount: 0.3 });\n  const visionMissionInView = useInView(visionMissionRef, { once: false, amount: 0.3 });\n  const whyChooseInView = useInView(whyChooseRef, { once: false, amount: 0.3 });\n  const doctorsInView = useInView(doctorsRef, { once: false, amount: 0.3 });\n  const partnersInView = useInView(partnersRef, { once: false, amount: 0.3 });\n  const careersInView = useInView(careersRef, { once: false, amount: 0.3 });\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n\n    setTimeout(() => {\n      toast({\n        title: t('contact.success'),\n        description: t('aboutPage.careers.submit'),\n      });\n      setIsSubmitting(false);\n      (e.target as HTMLFormElement).reset();\n    }, 1000);\n  };\n\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.1,\n      },\n    },\n  };\n\n  const itemVariants = {\n    hidden: { opacity: 0, y: 20 },\n    visible: { opacity: 1, y: 0 },\n  };\n\n  const whyChooseReasons = [\n    {\n      icon: Heart,\n      title: t('aboutPage.whyChoose.reason1.title'),\n      description: t('aboutPage.whyChoose.reason1.description'),\n    },\n    {\n      icon: Users,\n      title: t('aboutPage.whyChoose.reason2.title'),\n      description: t('aboutPage.whyChoose.reason2.description'),\n    },\n    {\n      icon: Building2,\n      title: t('aboutPage.whyChoose.reason3.title'),\n      description: t('aboutPage.whyChoose.reason3.description'),\n    },\n    {\n      icon: Stethoscope,\n      title: t('aboutPage.whyChoose.reason4.title'),\n      description: t('aboutPage.whyChoose.reason4.description'),\n    },\n  ];\n\n  const doctors = [\n    {\n      id: 1,\n      nameEn: 'Dr. Mahmoud Reda',\n      nameAr: 'د. محمود رضا',\n      image: drMahmoudReda,\n    },\n    {\n      id: 2,\n      nameEn: 'Dr. Hassan Embaby',\n      nameAr: 'د. حسن امبابي',\n      image: drHassanEmbaby,\n    },\n    {\n      id: 3,\n      nameEn: 'Dr. Mohamed Kelany',\n      nameAr: 'د. محمد كيلاني',\n      image: drMohamedKelany,\n    },\n    {\n      id: 4,\n      nameEn: 'Dr. Mohamed Abdulla',\n      nameAr: 'د. محمد عبدالله',\n      image: drMohamedAbdulla,\n    },\n    {\n      id: 5,\n      nameEn: 'Dr. Hesham AlMatrein',\n      nameAr: 'د. هشام المطرين',\n      image: drHeshamAlMatrein,\n    },\n  ];\n\n  const [emblaRef] = useEmblaCarousel(\n    { \n      loop: true, \n      align: 'center',\n      direction: language === 'ar' ? 'rtl' : 'ltr',\n      duration: 25,\n      inViewThreshold: 0\n    },\n    [Autoplay({ delay: 3000, stopOnInteraction: false })]\n  );\n\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <Header />\n      <ECGAnimation />\n      \n      <main className=\"flex-1 relative z-10\">\n        <motion.div\n          initial=\"hidden\"\n          animate=\"visible\"\n          variants={containerVariants}\n          className=\"container mx-auto px-4 py-16 space-y-16\"\n        >\n          <motion.div\n            ref={heroRef}\n            variants={itemVariants}\n            className=\"text-center space-y-4\"\n          >\n            <motion.h1\n              initial={{ opacity: 0, y: 20 }}\n              animate={heroInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}\n              transition={{ duration: 0.8 }}\n              className=\"text-4xl md:text-5xl font-bold text-primary\"\n              data-testid=\"text-about-header\"\n            >\n              {t('aboutPage.header')}\n            </motion.h1>\n            <motion.p\n              initial={{ opacity: 0, y: 20 }}\n              animate={heroInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}\n              transition={{ duration: 0.8, delay: 0.2 }}\n              className=\"text-xl text-muted-foreground\"\n              data-testid=\"text-about-subheader\"\n            >\n              {t('aboutPage.subheader')}\n            </motion.p>\n          </motion.div>\n\n          <motion.section ref={whoWeAreRef} variants={itemVariants}>\n            <div className=\"grid md:grid-cols-2 gap-12 items-center\">\n              <motion.div\n                initial={{ opacity: 0, x: -50 }}\n                animate={whoWeAreInView ? { opacity: 1, x: 0 } : { opacity: 0, x: -50 }}\n                transition={{ duration: 0.8 }}\n              >\n                <motion.img\n                  whileHover={{ scale: 1.02 }}\n                  transition={{ duration: 0.3 }}\n                  src={teamImage}\n                  alt=\"Dr. Paws veterinary team\"\n                  className=\"rounded-xl w-full h-auto object-cover shadow-md\"\n                  data-testid=\"img-who-we-are\"\n                />\n              </motion.div>\n              <motion.div\n                initial={{ opacity: 0, x: 50 }}\n                animate={whoWeAreInView ? { opacity: 1, x: 0 } : { opacity: 0, x: 50 }}\n                transition={{ duration: 0.8, delay: 0.2 }}\n                className=\"space-y-6\"\n              >\n                <h2 className=\"text-3xl font-bold text-primary\" data-testid=\"text-who-we-are-title\">\n                  {t('aboutPage.whoWeAre.title')}\n                </h2>\n                {t('aboutPage.whoWeAre.subtitle') && (\n                  <h3 className=\"text-2xl font-semibold text-foreground\" data-testid=\"text-who-we-are-subtitle\">\n                    {t('aboutPage.whoWeAre.subtitle')}\n                  </h3>\n                )}\n                <div className=\"space-y-4 text-lg text-foreground/90\">\n                  <p data-testid=\"text-who-we-are-para1\">{t('aboutPage.whoWeAre.para1')}</p>\n                  {t('aboutPage.whoWeAre.para2') && (\n                    <p data-testid=\"text-who-we-are-para2\">{t('aboutPage.whoWeAre.para2')}</p>\n                  )}\n                  {t('aboutPage.whoWeAre.para3') && (\n                    <p data-testid=\"text-who-we-are-para3\">{t('aboutPage.whoWeAre.para3')}</p>\n                  )}\n                </div>\n              </motion.div>\n            </div>\n          </motion.section>\n\n          <motion.section ref={visionMissionRef} variants={itemVariants}>\n            <div className=\"grid md:grid-cols-2 gap-12 items-center\">\n              <motion.div\n                initial={{ opacity: 0, x: 50 }}\n                animate={visionMissionInView ? { opacity: 1, x: 0 } : { opacity: 0, x: 50 }}\n                transition={{ duration: 0.8 }}\n                className=\"md:order-2\"\n              >\n                <motion.img\n                  whileHover={{ scale: 1.02 }}\n                  transition={{ duration: 0.3 }}\n                  src={vetExamImage}\n                  alt=\"Veterinarian examining dog\"\n                  className=\"rounded-xl w-full h-auto object-cover shadow-md\"\n                  data-testid=\"img-vision-mission\"\n                />\n              </motion.div>\n              <motion.div\n                initial={{ opacity: 0, x: -50 }}\n                animate={visionMissionInView ? { opacity: 1, x: 0 } : { opacity: 0, x: -50 }}\n                transition={{ duration: 0.8, delay: 0.2 }}\n                className=\"md:order-1 grid gap-8\"\n              >\n                <Card data-testid=\"card-vision\">\n                  <CardHeader>\n                    <CardTitle className=\"text-2xl text-primary flex items-center gap-3\">\n                      <lord-icon\n                        src=\"https://cdn.lordicon.com/zywwafpn.json\"\n                        trigger=\"loop\"\n                        delay=\"1500\"\n                        state=\"morph-turn-on\"\n                        colors=\"primary:#545454,secondary:#18ac61\"\n                        style={{ width: '60px', height: '60px' }}\n                      />\n                      {t('aboutPage.vision.title')}\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <p className=\"text-lg text-foreground/90\">{t('aboutPage.vision.content')}</p>\n                  </CardContent>\n                </Card>\n\n                <Card data-testid=\"card-mission\">\n                  <CardHeader>\n                    <CardTitle className=\"text-2xl text-primary flex items-center gap-3\">\n                      <lord-icon\n                        src=\"https://cdn.lordicon.com/lagziwcr.json\"\n                        trigger=\"loop\"\n                        delay=\"1500\"\n                        colors=\"primary:#545454,secondary:#18ac61\"\n                        style={{ width: '60px', height: '60px' }}\n                      />\n                      {t('aboutPage.mission.title')}\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <p className=\"text-lg text-foreground/90\">{t('aboutPage.mission.content')}</p>\n                  </CardContent>\n                </Card>\n              </motion.div>\n            </div>\n          </motion.section>\n\n          <motion.section ref={whyChooseRef} variants={itemVariants} className=\"space-y-8\">\n            <motion.h2\n              initial={{ opacity: 0, y: 20 }}\n              animate={whyChooseInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}\n              transition={{ duration: 0.8 }}\n              className=\"text-3xl font-bold text-primary text-center\"\n              data-testid=\"text-why-choose-title\"\n            >\n              {t('aboutPage.whyChoose.title')}\n            </motion.h2>\n            <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-6\">\n              {whyChooseReasons.map((reason, index) => {\n                const Icon = reason.icon;\n                return (\n                  <Card key={index} className=\"text-center\" data-testid={`card-reason-${index + 1}`}>\n                    <CardHeader>\n                      <div className=\"mx-auto w-16 h-16 bg-primary/10 rounded-full flex items-center justify-center mb-4\">\n                        <Icon className=\"w-8 h-8 text-primary\" />\n                      </div>\n                      <CardTitle className=\"text-xl\">{reason.title}</CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                      <p className=\"text-muted-foreground\">{reason.description}</p>\n                    </CardContent>\n                  </Card>\n                );\n              })}\n            </div>\n          </motion.section>\n\n          <motion.section ref={doctorsRef} variants={itemVariants}>\n            <div className=\"flex flex-col lg:flex-row gap-12 items-center justify-center\">\n              {/* Doctor Carousel - Left Side */}\n              <motion.div\n                initial={{ opacity: 0, x: -50 }}\n                animate={doctorsInView ? { opacity: 1, x: 0 } : { opacity: 0, x: -50 }}\n                transition={{ duration: 0.8 }}\n                className=\"w-full max-w-[400px] sm:max-w-none sm:w-[500px] sm:min-w-[500px] mx-auto\"\n              >\n                {/* Carousel Container */}\n                <div className=\"w-full\">\n                  <div className=\"overflow-hidden rounded-xl\" ref={emblaRef}>\n                    <div className=\"flex\">\n                      {doctors.map((doctor) => (\n                        <div\n                          key={doctor.id}\n                          className=\"flex-shrink-0 flex-grow-0 basis-full\"\n                          data-testid={`doctor-slide-${doctor.id}`}\n                        >\n                          <div className=\"overflow-visible rounded-xl shadow-md\">\n                            <div className=\"relative w-full aspect-square overflow-hidden rounded-xl\">\n                              <motion.img\n                                whileHover={{ scale: 1.05 }}\n                                transition={{ duration: 0.3 }}\n                                src={doctor.image}\n                                alt={language === 'ar' ? doctor.nameAr : doctor.nameEn}\n                                className=\"w-full h-full object-cover\"\n                                data-testid={`img-doctor-${doctor.id}`}\n                              />\n                            </div>\n                            <div className=\"p-6 text-center bg-gradient-to-b from-background to-primary/5 rounded-b-xl\">\n                              <h3 className=\"text-2xl font-semibold text-primary\" data-testid={`text-doctor-name-${doctor.id}`}>\n                                {language === 'ar' ? doctor.nameAr : doctor.nameEn}\n                              </h3>\n                            </div>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              </motion.div>\n              \n              {/* Content - Right Side */}\n              <motion.div\n                initial={{ opacity: 0, x: 50 }}\n                animate={doctorsInView ? { opacity: 1, x: 0 } : { opacity: 0, x: 50 }}\n                transition={{ duration: 0.8, delay: 0.2 }}\n                className=\"space-y-6\"\n              >\n                <h2 className=\"text-3xl font-bold text-primary flex items-center gap-3\" data-testid=\"text-doctors-title\">\n                  <lord-icon\n                    src=\"https://cdn.lordicon.com/jfdtmvil.json\"\n                    trigger=\"loop\"\n                    delay=\"1500\"\n                    state=\"in-reveal\"\n                    colors=\"primary:#545454,secondary:#18ac61\"\n                    style={{ width: '60px', height: '60px' }}\n                  />\n                  {t('aboutPage.doctors.title')}\n                </h2>\n                <p className=\"text-lg text-foreground/90 leading-relaxed\" data-testid=\"text-doctors-description\">\n                  {t('aboutPage.doctors.description')}\n                </p>\n                <Card className=\"border-primary/20\">\n                  <CardContent className=\"p-6\">\n                    <div className=\"space-y-4\">\n                      <div className=\"flex items-center gap-3\">\n                        <div className=\"w-12 h-12 bg-primary/10 rounded-full flex items-center justify-center flex-shrink-0\">\n                          <Stethoscope className=\"w-6 h-6 text-primary\" />\n                        </div>\n                        <div>\n                          <h4 className=\"font-semibold text-foreground\">\n                            {language === 'ar' ? 'خبرة واسعة' : 'Extensive Experience'}\n                          </h4>\n                          <p className=\"text-sm text-muted-foreground\">\n                            {language === 'ar' \n                              ? 'فريق من الأطباء البيطريين المؤهلين تأهيلاً عالياً'\n                              : 'Highly qualified veterinary team'}\n                          </p>\n                        </div>\n                      </div>\n                      <div className=\"flex items-center gap-3\">\n                        <div className=\"w-12 h-12 bg-primary/10 rounded-full flex items-center justify-center flex-shrink-0\">\n                          <Heart className=\"w-6 h-6 text-primary\" />\n                        </div>\n                        <div>\n                          <h4 className=\"font-semibold text-foreground\">\n                            {language === 'ar' ? 'رعاية شاملة' : 'Comprehensive Care'}\n                          </h4>\n                          <p className=\"text-sm text-muted-foreground\">\n                            {language === 'ar' \n                              ? 'خدمات بيطرية متكاملة لحيوانك الأليف'\n                              : 'Complete veterinary services for your pet'}\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              </motion.div>\n            </div>\n          </motion.section>\n\n          <motion.section ref={partnersRef} variants={itemVariants} className=\"space-y-6\">\n            <motion.h2\n              initial={{ opacity: 0, y: 20 }}\n              animate={partnersInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}\n              transition={{ duration: 0.8 }}\n              className=\"text-3xl font-bold text-primary flex items-center gap-3\"\n              data-testid=\"text-partners-title\"\n            >\n              <lord-icon\n                src=\"https://cdn.lordicon.com/rcuovkuy.json\"\n                trigger=\"loop\"\n                delay=\"1500\"\n                colors=\"primary:#545454,secondary:#18ac61\"\n                style={{ width: '60px', height: '60px' }}\n              />\n              {t('aboutPage.partners.title')}\n            </motion.h2>\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              animate={partnersInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}\n              transition={{ duration: 0.8, delay: 0.2 }}\n            >\n              {partners.length === 0 ? (\n                <Card data-testid=\"card-partners-placeholder\">\n                  <CardContent className=\"py-12 text-center\">\n                    <p className=\"text-muted-foreground text-lg\">{t('aboutPage.partners.noInfo')}</p>\n                  </CardContent>\n                </Card>\n              ) : (\n                <div className=\"overflow-hidden\" data-testid=\"partners-grid\">\n                  <motion.div\n                    className=\"flex gap-8\"\n                    animate={{\n                      x: [-280 * partners.length, 0],\n                    }}\n                    transition={{\n                      x: {\n                        repeat: Infinity,\n                        repeatType: \"loop\",\n                        duration: partners.length * 5,\n                        ease: \"linear\",\n                      },\n                    }}\n                  >\n                    {[...partners, ...partners, ...partners].map((partner, index) => (\n                      <div\n                        key={`${partner.id}-${index}`}\n                        className=\"flex-shrink-0 w-64\"\n                        data-testid={`partner-${partner.id}-${index}`}\n                      >\n                        <Card className=\"hover-elevate\">\n                          <CardContent className=\"p-6 flex items-center justify-center h-48\">\n                            {partner.logoUrl ? (\n                              <img\n                                src={partner.logoUrl}\n                                alt={partner.name}\n                                className=\"max-w-full max-h-full object-contain\"\n                                data-testid={`img-partner-${partner.id}-${index}`}\n                              />\n                            ) : (\n                              <Upload className=\"w-12 h-12 text-muted-foreground\" />\n                            )}\n                          </CardContent>\n                        </Card>\n                      </div>\n                    ))}\n                  </motion.div>\n                </div>\n              )}\n            </motion.div>\n          </motion.section>\n\n          <motion.section ref={careersRef} variants={itemVariants} className=\"space-y-8\">\n            <div className=\"grid md:grid-cols-2 gap-12 items-center\">\n              <motion.div\n                initial={{ opacity: 0, x: 50 }}\n                animate={careersInView ? { opacity: 1, x: 0 } : { opacity: 0, x: 50 }}\n                transition={{ duration: 0.8 }}\n                className=\"md:order-2\"\n              >\n                <motion.img\n                  whileHover={{ scale: 1.02 }}\n                  transition={{ duration: 0.3 }}\n                  src={equipmentImage}\n                  alt=\"Modern veterinary equipment\"\n                  className=\"rounded-xl w-full h-auto object-cover shadow-md\"\n                  data-testid=\"img-careers\"\n                />\n              </motion.div>\n              <motion.div\n                initial={{ opacity: 0, x: -50 }}\n                animate={careersInView ? { opacity: 1, x: 0 } : { opacity: 0, x: -50 }}\n                transition={{ duration: 0.8, delay: 0.2 }}\n                className=\"md:order-1 space-y-4\"\n              >\n                <h2 className=\"text-3xl font-bold text-primary flex items-center gap-3\" data-testid=\"text-careers-title\">\n                  <lord-icon\n                    src=\"https://cdn.lordicon.com/dpdqbwcf.json\"\n                    trigger=\"loop\"\n                    delay=\"1500\"\n                    colors=\"primary:#545454,secondary:#18ac61\"\n                    style={{ width: '60px', height: '60px' }}\n                  />\n                  {t('aboutPage.careers.title')}\n                </h2>\n                <p className=\"text-lg text-foreground/90\" data-testid=\"text-careers-description\">\n                  {t('aboutPage.careers.description')}\n                </p>\n              </motion.div>\n            </div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              animate={careersInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }}\n              transition={{ duration: 0.8, delay: 0.4 }}\n            >\n              <Card data-testid=\"card-careers-form\">\n                <CardContent className=\"pt-6\">\n                <form onSubmit={handleSubmit} className=\"space-y-8\">\n                  <div className=\"space-y-6\">\n                    <h3 className=\"text-xl font-semibold text-primary\" data-testid=\"text-personal-info\">\n                      {t('aboutPage.careers.personalInfo')}\n                    </h3>\n                    <div className=\"grid md:grid-cols-2 gap-6\">\n                      <div className=\"space-y-2\">\n                        <Label htmlFor=\"fullName\">{t('aboutPage.careers.fullName')}</Label>\n                        <Input\n                          id=\"fullName\"\n                          name=\"fullName\"\n                          required\n                          data-testid=\"input-full-name\"\n                        />\n                      </div>\n                      <div className=\"space-y-2\">\n                        <Label htmlFor=\"email\">{t('aboutPage.careers.email')}</Label>\n                        <Input\n                          id=\"email\"\n                          name=\"email\"\n                          type=\"email\"\n                          required\n                          data-testid=\"input-email\"\n                        />\n                      </div>\n                      <div className=\"space-y-2\">\n                        <Label htmlFor=\"phone\">{t('aboutPage.careers.phone')}</Label>\n                        <Input\n                          id=\"phone\"\n                          name=\"phone\"\n                          type=\"tel\"\n                          required\n                          data-testid=\"input-phone\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"space-y-6\">\n                    <h3 className=\"text-xl font-semibold text-primary\" data-testid=\"text-professional-info\">\n                      {t('aboutPage.careers.professionalInfo')}\n                    </h3>\n                    <div className=\"grid md:grid-cols-2 gap-6\">\n                      <div className=\"space-y-2\">\n                        <Label htmlFor=\"resume\">{t('aboutPage.careers.resume')}</Label>\n                        <div className=\"flex items-center gap-2\">\n                          <Input\n                            id=\"resume\"\n                            name=\"resume\"\n                            type=\"file\"\n                            accept=\".pdf,.doc,.docx\"\n                            required\n                            data-testid=\"input-resume\"\n                            className=\"flex-1\"\n                          />\n                          <Upload className=\"w-5 h-5 text-muted-foreground\" />\n                        </div>\n                      </div>\n                      <div className=\"space-y-2\">\n                        <Label htmlFor=\"position\">{t('aboutPage.careers.position')}</Label>\n                        <Input\n                          id=\"position\"\n                          name=\"position\"\n                          data-testid=\"input-position\"\n                        />\n                      </div>\n                      <div className=\"space-y-2\">\n                        <Label htmlFor=\"startDate\">{t('aboutPage.careers.startDate')}</Label>\n                        <Input\n                          id=\"startDate\"\n                          name=\"startDate\"\n                          type=\"date\"\n                          required\n                          data-testid=\"input-start-date\"\n                        />\n                      </div>\n                      <div className=\"space-y-2\">\n                        <Label htmlFor=\"certifications\">{t('aboutPage.careers.certifications')}</Label>\n                        <Input\n                          id=\"certifications\"\n                          name=\"certifications\"\n                          data-testid=\"input-certifications\"\n                        />\n                      </div>\n                      <div className=\"space-y-2 md:col-span-2\">\n                        <Label htmlFor=\"education\">{t('aboutPage.careers.education')}</Label>\n                        <Input\n                          id=\"education\"\n                          name=\"education\"\n                          required\n                          data-testid=\"input-education\"\n                        />\n                      </div>\n                      <div className=\"space-y-2 md:col-span-2\">\n                        <Label htmlFor=\"experience\">{t('aboutPage.careers.experience')}</Label>\n                        <Textarea\n                          id=\"experience\"\n                          name=\"experience\"\n                          placeholder={t('aboutPage.careers.experiencePlaceholder')}\n                          required\n                          data-testid=\"input-experience\"\n                          rows={4}\n                        />\n                      </div>\n                      <div className=\"space-y-2 md:col-span-2\">\n                        <Label htmlFor=\"interests\">{t('aboutPage.careers.interests')}</Label>\n                        <Textarea\n                          id=\"interests\"\n                          name=\"interests\"\n                          placeholder={t('aboutPage.careers.interestsPlaceholder')}\n                          data-testid=\"input-interests\"\n                          rows={3}\n                        />\n                      </div>\n                      <div className=\"space-y-2 md:col-span-2\">\n                        <Label htmlFor=\"coverLetter\">{t('aboutPage.careers.coverLetter')}</Label>\n                        <Textarea\n                          id=\"coverLetter\"\n                          name=\"coverLetter\"\n                          data-testid=\"input-cover-letter\"\n                          rows={5}\n                        />\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"flex justify-center\">\n                    <Button\n                      type=\"submit\"\n                      size=\"lg\"\n                      disabled={isSubmitting}\n                      data-testid=\"button-submit-application\"\n                      className=\"min-w-[200px]\"\n                    >\n                      {isSubmitting ? '...' : t('aboutPage.careers.submit')}\n                    </Button>\n                  </div>\n                </form>\n                </CardContent>\n              </Card>\n            </motion.div>\n          </motion.section>\n        </motion.div>\n      </main>\n\n      <HeartbeatDivider />\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":30145},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n          await import(\"@replit/vite-plugin-dev-banner\").then((m) =>\n            m.devBanner(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":1080},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\nimport { insertServicePackageSchema, insertCustomerReviewSchema, insertPartnerSchema, insertOpeningDiscountSchema } from \"@shared/schema\";\nimport { z } from \"zod\";\nimport { ObjectStorageService, ObjectNotFoundError } from \"./objectStorage\";\nimport { sendDiscountConfirmationEmail } from \"./email-service\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Service Packages Routes\n  \n  // Get all service packages\n  app.get(\"/api/service-packages\", async (req, res) => {\n    try {\n      const packages = await storage.getAllServicePackages();\n      res.json(packages);\n    } catch (error) {\n      console.error(\"Error fetching service packages:\", error);\n      res.status(500).json({ error: \"Failed to fetch service packages\", details: error instanceof Error ? error.message : String(error) });\n    }\n  });\n\n  // Get single service package\n  app.get(\"/api/service-packages/:id\", async (req, res) => {\n    try {\n      const id = parseInt(req.params.id);\n      const pkg = await storage.getServicePackage(id);\n      if (!pkg) {\n        return res.status(404).json({ error: \"Service package not found\" });\n      }\n      res.json(pkg);\n    } catch (error) {\n      res.status(500).json({ error: \"Failed to fetch service package\" });\n    }\n  });\n\n  // Create service package\n  app.post(\"/api/service-packages\", async (req, res) => {\n    try {\n      const data = insertServicePackageSchema.parse(req.body);\n      const pkg = await storage.createServicePackage(data);\n      res.status(201).json(pkg);\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ error: \"Invalid data\", details: error.errors });\n      }\n      console.error(\"Error creating service package:\", error);\n      res.status(500).json({ error: \"Failed to create service package\", details: error instanceof Error ? error.message : String(error) });\n    }\n  });\n\n  // Update service package\n  app.put(\"/api/service-packages/:id\", async (req, res) => {\n    try {\n      const id = parseInt(req.params.id);\n      const data = insertServicePackageSchema.partial().parse(req.body);\n      const pkg = await storage.updateServicePackage(id, data);\n      if (!pkg) {\n        return res.status(404).json({ error: \"Service package not found\" });\n      }\n      res.json(pkg);\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ error: \"Invalid data\", details: error.errors });\n      }\n      res.status(500).json({ error: \"Failed to update service package\" });\n    }\n  });\n\n  // Delete service package\n  app.delete(\"/api/service-packages/:id\", async (req, res) => {\n    try {\n      const id = parseInt(req.params.id);\n      const success = await storage.deleteServicePackage(id);\n      if (!success) {\n        return res.status(404).json({ error: \"Service package not found\" });\n      }\n      res.status(204).send();\n    } catch (error) {\n      res.status(500).json({ error: \"Failed to delete service package\" });\n    }\n  });\n\n  // Customer Reviews Routes\n\n  // Get all customer reviews\n  app.get(\"/api/customer-reviews\", async (req, res) => {\n    try {\n      const reviews = await storage.getAllCustomerReviews();\n      res.json(reviews);\n    } catch (error) {\n      console.error(\"Error fetching customer reviews:\", error);\n      res.status(500).json({ error: \"Failed to fetch customer reviews\", details: error instanceof Error ? error.message : String(error) });\n    }\n  });\n\n  // Get single customer review\n  app.get(\"/api/customer-reviews/:id\", async (req, res) => {\n    try {\n      const id = parseInt(req.params.id);\n      const review = await storage.getCustomerReview(id);\n      if (!review) {\n        return res.status(404).json({ error: \"Customer review not found\" });\n      }\n      res.json(review);\n    } catch (error) {\n      res.status(500).json({ error: \"Failed to fetch customer review\" });\n    }\n  });\n\n  // Create customer review\n  app.post(\"/api/customer-reviews\", async (req, res) => {\n    try {\n      const data = insertCustomerReviewSchema.parse(req.body);\n      const review = await storage.createCustomerReview(data);\n      res.status(201).json(review);\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ error: \"Invalid data\", details: error.errors });\n      }\n      console.error(\"Error creating customer review:\", error);\n      res.status(500).json({ error: \"Failed to create customer review\", details: error instanceof Error ? error.message : String(error) });\n    }\n  });\n\n  // Update customer review\n  app.put(\"/api/customer-reviews/:id\", async (req, res) => {\n    try {\n      const id = parseInt(req.params.id);\n      const data = insertCustomerReviewSchema.partial().parse(req.body);\n      const review = await storage.updateCustomerReview(id, data);\n      if (!review) {\n        return res.status(404).json({ error: \"Customer review not found\" });\n      }\n      res.json(review);\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ error: \"Invalid data\", details: error.errors });\n      }\n      res.status(500).json({ error: \"Failed to update customer review\" });\n    }\n  });\n\n  // Delete customer review\n  app.delete(\"/api/customer-reviews/:id\", async (req, res) => {\n    try {\n      const id = parseInt(req.params.id);\n      const success = await storage.deleteCustomerReview(id);\n      if (!success) {\n        return res.status(404).json({ error: \"Customer review not found\" });\n      }\n      res.status(204).send();\n    } catch (error) {\n      res.status(500).json({ error: \"Failed to delete customer review\" });\n    }\n  });\n\n  // Partners Routes\n\n  // Get all partners\n  app.get(\"/api/partners\", async (req, res) => {\n    try {\n      const partners = await storage.getAllPartners();\n      res.json(partners);\n    } catch (error) {\n      console.error(\"Error fetching partners:\", error);\n      res.status(500).json({ error: \"Failed to fetch partners\", details: error instanceof Error ? error.message : String(error) });\n    }\n  });\n\n  // Get single partner\n  app.get(\"/api/partners/:id\", async (req, res) => {\n    try {\n      const id = parseInt(req.params.id);\n      const partner = await storage.getPartner(id);\n      if (!partner) {\n        return res.status(404).json({ error: \"Partner not found\" });\n      }\n      res.json(partner);\n    } catch (error) {\n      res.status(500).json({ error: \"Failed to fetch partner\" });\n    }\n  });\n\n  // Create partner\n  app.post(\"/api/partners\", async (req, res) => {\n    try {\n      const data = insertPartnerSchema.parse(req.body);\n      const partner = await storage.createPartner(data);\n      res.status(201).json(partner);\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ error: \"Invalid data\", details: error.errors });\n      }\n      console.error(\"Error creating partner:\", error);\n      res.status(500).json({ error: \"Failed to create partner\", details: error instanceof Error ? error.message : String(error) });\n    }\n  });\n\n  // Update partner\n  app.put(\"/api/partners/:id\", async (req, res) => {\n    try {\n      const id = parseInt(req.params.id);\n      const data = insertPartnerSchema.partial().parse(req.body);\n      const partner = await storage.updatePartner(id, data);\n      if (!partner) {\n        return res.status(404).json({ error: \"Partner not found\" });\n      }\n      res.json(partner);\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ error: \"Invalid data\", details: error.errors });\n      }\n      res.status(500).json({ error: \"Failed to update partner\" });\n    }\n  });\n\n  // Delete partner\n  app.delete(\"/api/partners/:id\", async (req, res) => {\n    try {\n      const id = parseInt(req.params.id);\n      const success = await storage.deletePartner(id);\n      if (!success) {\n        return res.status(404).json({ error: \"Partner not found\" });\n      }\n      res.status(204).send();\n    } catch (error) {\n      res.status(500).json({ error: \"Failed to delete partner\" });\n    }\n  });\n\n  // Object Storage Routes for Partner Logos\n\n  // Serve public objects\n  app.get(\"/public-objects/:filePath(*)\", async (req, res) => {\n    const filePath = req.params.filePath;\n    const objectStorageService = new ObjectStorageService();\n    try {\n      const file = await objectStorageService.searchPublicObject(filePath);\n      if (!file) {\n        return res.status(404).json({ error: \"File not found\" });\n      }\n      objectStorageService.downloadObject(file, res);\n    } catch (error) {\n      console.error(\"Error searching for public object:\", error);\n      return res.status(500).json({ error: \"Internal server error\" });\n    }\n  });\n\n  // Serve private objects (partner logos)\n  app.get(\"/objects/:objectPath(*)\", async (req, res) => {\n    const objectStorageService = new ObjectStorageService();\n    try {\n      const objectFile = await objectStorageService.getObjectEntityFile(\n        req.path,\n      );\n      objectStorageService.downloadObject(objectFile, res);\n    } catch (error) {\n      console.error(\"Error checking object access:\", error);\n      if (error instanceof ObjectNotFoundError) {\n        return res.sendStatus(404);\n      }\n      return res.sendStatus(500);\n    }\n  });\n\n  // Get upload URL for partner logo\n  app.post(\"/api/objects/upload\", async (req, res) => {\n    const objectStorageService = new ObjectStorageService();\n    const uploadURL = await objectStorageService.getObjectEntityUploadURL();\n    res.json({ uploadURL });\n  });\n\n  // Update partner with logo URL\n  app.put(\"/api/partners/:id/logo\", async (req, res) => {\n    if (!req.body.logoURL) {\n      return res.status(400).json({ error: \"logoURL is required\" });\n    }\n\n    try {\n      const id = parseInt(req.params.id);\n      const objectStorageService = new ObjectStorageService();\n      const objectPath = await objectStorageService.trySetObjectEntityAclPolicy(\n        req.body.logoURL,\n        {\n          owner: \"admin\",\n          visibility: \"public\",\n        },\n      );\n\n      const partner = await storage.updatePartner(id, { logoUrl: objectPath });\n      if (!partner) {\n        return res.status(404).json({ error: \"Partner not found\" });\n      }\n\n      res.status(200).json({\n        objectPath: objectPath,\n        partner,\n      });\n    } catch (error) {\n      console.error(\"Error setting partner logo:\", error);\n      res.status(500).json({ error: \"Internal server error\" });\n    }\n  });\n\n  // Opening Discount Routes\n\n  // Check if phone number exists\n  app.get(\"/api/opening-discount/check-phone/:phoneNumber\", async (req, res) => {\n    try {\n      const phoneNumber = req.params.phoneNumber;\n      const exists = await storage.checkPhoneNumberExists(phoneNumber);\n      res.status(200).json({ exists });\n    } catch (error) {\n      console.error(\"Error checking phone number:\", error);\n      res.status(500).json({ error: \"Failed to check phone number\" });\n    }\n  });\n\n  // Check if email exists\n  app.get(\"/api/opening-discount/check-email/:email\", async (req, res) => {\n    try {\n      const email = req.params.email;\n      const exists = await storage.checkEmailExists(email);\n      res.status(200).json({ exists });\n    } catch (error) {\n      console.error(\"Error checking email:\", error);\n      res.status(500).json({ error: \"Failed to check email\" });\n    }\n  });\n\n  // Create opening discount registration\n  app.post(\"/api/opening-discount\", async (req, res) => {\n    try {\n      const data = insertOpeningDiscountSchema.parse(req.body);\n      const registration = await storage.createOpeningDiscount(data);\n      \n      // Send confirmation email\n      try {\n        await sendDiscountConfirmationEmail({\n          firstName: data.firstName,\n          lastName: data.lastName,\n          email: data.emailAddress,\n          discountCode: data.phoneNumber,\n          language: req.body.language || 'en',\n        });\n      } catch (emailError) {\n        console.error(\"Error sending confirmation email:\", emailError);\n        // Don't fail the registration if email fails\n      }\n      \n      res.status(201).json(registration);\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ error: \"Invalid data\", details: error.errors });\n      }\n      console.error(\"Error creating opening discount registration:\", error);\n      \n      // Check for unique constraint violation\n      if (error && typeof error === 'object' && 'code' in error && error.code === '23505') {\n        return res.status(409).json({ error: \"Phone number already registered\" });\n      }\n      \n      res.status(500).json({ error: \"Failed to register\", details: error instanceof Error ? error.message : String(error) });\n    }\n  });\n\n  const httpServer = createServer(app);\n\n  return httpServer;\n}\n","size_bytes":12920},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/components/AnimatedServicesBackground.tsx":{"content":"import { useMemo } from 'react';\nimport { motion } from 'framer-motion';\n\nconst PawPrint = ({ color, size, top, left, duration, delay }: {\n  color: string;\n  size: number;\n  top: string;\n  left: string;\n  duration: number;\n  delay: number;\n}) => {\n  return (\n    <motion.div\n      className=\"absolute\"\n      style={{\n        top,\n        left,\n        width: `${size}px`,\n        height: `${size}px`,\n        opacity: 0.08,\n      }}\n      animate={{\n        y: [0, -30, 0],\n        x: [0, 15, -15, 0],\n        rotate: [0, 10, -10, 0],\n      }}\n      transition={{\n        duration,\n        delay,\n        repeat: Infinity,\n        ease: \"easeInOut\",\n      }}\n    >\n      <svg\n        viewBox=\"0 0 100 100\"\n        fill={color}\n        width=\"100%\"\n        height=\"100%\"\n      >\n        {/* Main pad with curved bottom - matching the image */}\n        <path d=\"M 30 65 Q 30 45, 50 45 Q 70 45, 70 65 Q 72 80, 60 85 Q 50 90, 40 85 Q 28 80, 30 65 Z\" />\n        \n        {/* Four toe pads - ovals arranged around the main pad */}\n        {/* Top center toe */}\n        <ellipse cx=\"50\" cy=\"20\" rx=\"8\" ry=\"12\" />\n        {/* Left toe */}\n        <ellipse cx=\"28\" cy=\"32\" rx=\"7\" ry=\"11\" transform=\"rotate(-25 28 32)\" />\n        {/* Right toe */}\n        <ellipse cx=\"72\" cy=\"32\" rx=\"7\" ry=\"11\" transform=\"rotate(25 72 32)\" />\n        {/* Bottom left toe */}\n        <ellipse cx=\"18\" cy=\"50\" rx=\"6\" ry=\"10\" transform=\"rotate(-35 18 50)\" />\n        {/* Bottom right toe */}\n        <ellipse cx=\"82\" cy=\"50\" rx=\"6\" ry=\"10\" transform=\"rotate(35 82 50)\" />\n      </svg>\n    </motion.div>\n  );\n};\n\nconst Bone = ({ color, size, top, left, duration, delay }: {\n  color: string;\n  size: number;\n  top: string;\n  left: string;\n  duration: number;\n  delay: number;\n}) => {\n  return (\n    <motion.div\n      className=\"absolute\"\n      style={{\n        top,\n        left,\n        width: `${size}px`,\n        height: `${size}px`,\n        opacity: 0.08,\n      }}\n      animate={{\n        y: [0, 30, 0],\n        x: [0, -15, 15, 0],\n        rotate: [0, -10, 10, 0],\n      }}\n      transition={{\n        duration,\n        delay,\n        repeat: Infinity,\n        ease: \"easeInOut\",\n      }}\n    >\n      <svg\n        viewBox=\"0 0 100 50\"\n        fill={color}\n        width=\"100%\"\n        height=\"100%\"\n      >\n        {/* Left bone end - two circles */}\n        <circle cx=\"12\" cy=\"18\" r=\"8\" />\n        <circle cx=\"12\" cy=\"32\" r=\"8\" />\n        {/* Right bone end - two circles */}\n        <circle cx=\"88\" cy=\"18\" r=\"8\" />\n        <circle cx=\"88\" cy=\"32\" r=\"8\" />\n        {/* Center connecting bar */}\n        <rect x=\"16\" y=\"20\" width=\"68\" height=\"10\" rx=\"5\" ry=\"5\" />\n      </svg>\n    </motion.div>\n  );\n};\n\nexport default function AnimatedServicesBackground() {\n  const brandColors = [\n    '#18ac61',\n    '#264653',\n    '#e9c46a',\n    '#f4a261',\n  ];\n\n  const elements = useMemo(() => {\n    const items = [];\n    \n    // Create 12 paw prints\n    for (let i = 0; i < 12; i++) {\n      items.push({\n        id: `paw-${i}`,\n        type: 'paw',\n        color: brandColors[Math.floor(Math.random() * brandColors.length)],\n        size: Math.random() * 40 + 60,\n        top: `${Math.random() * 100}%`,\n        left: `${Math.random() * 100}%`,\n        duration: Math.random() * 10 + 15,\n        delay: Math.random() * 5,\n      });\n    }\n    \n    // Create 6 bones\n    for (let i = 0; i < 6; i++) {\n      items.push({\n        id: `bone-${i}`,\n        type: 'bone',\n        color: brandColors[Math.floor(Math.random() * brandColors.length)],\n        size: Math.random() * 40 + 60,\n        top: `${Math.random() * 100}%`,\n        left: `${Math.random() * 100}%`,\n        duration: Math.random() * 10 + 15,\n        delay: Math.random() * 5,\n      });\n    }\n    \n    return items;\n  }, []);\n\n  return (\n    <div className=\"fixed inset-0 pointer-events-none overflow-hidden z-0\">\n      {elements.map((element) => (\n        element.type === 'paw' ? (\n          <PawPrint\n            key={element.id}\n            color={element.color}\n            size={element.size}\n            top={element.top}\n            left={element.left}\n            duration={element.duration}\n            delay={element.delay}\n          />\n        ) : (\n          <Bone\n            key={element.id}\n            color={element.color}\n            size={element.size}\n            top={element.top}\n            left={element.left}\n            duration={element.duration}\n            delay={element.delay}\n          />\n        )\n      ))}\n    </div>\n  );\n}\n","size_bytes":4488},"client/src/components/examples/ContactSection.tsx":{"content":"import ContactSection from '../ContactSection';\n\nexport default function ContactSectionExample() {\n  return <ContactSection />;\n}\n","size_bytes":130},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar, boolean, serial, integer } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  username: text(\"username\").notNull().unique(),\n  password: text(\"password\").notNull(),\n});\n\nexport const insertUserSchema = createInsertSchema(users).pick({\n  username: true,\n  password: true,\n});\n\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type User = typeof users.$inferSelect;\n\nexport const servicePackages = pgTable(\"service_packages\", {\n  id: serial(\"id\").primaryKey(),\n  name: text(\"name\").notNull(),\n  nameAr: text(\"name_ar\"),\n  price: text(\"price\").notNull(),\n  period: text(\"period\").notNull(),\n  periodAr: text(\"period_ar\"),\n  popular: boolean(\"popular\").notNull().default(false),\n  features: text(\"features\").array().notNull(),\n  featuresAr: text(\"features_ar\").array(),\n});\n\nexport const insertServicePackageSchema = createInsertSchema(servicePackages).omit({\n  id: true,\n});\n\nexport type InsertServicePackage = z.infer<typeof insertServicePackageSchema>;\nexport type ServicePackage = typeof servicePackages.$inferSelect;\n\nexport const customerReviews = pgTable(\"customer_reviews\", {\n  id: serial(\"id\").primaryKey(),\n  name: text(\"name\").notNull(),\n  nameAr: text(\"name_ar\"),\n  rating: integer(\"rating\").notNull(),\n  message: text(\"message\").notNull(),\n});\n\nexport const insertCustomerReviewSchema = createInsertSchema(customerReviews).omit({\n  id: true,\n}).extend({\n  rating: z.number().min(1).max(5),\n});\n\nexport type InsertCustomerReview = z.infer<typeof insertCustomerReviewSchema>;\nexport type CustomerReview = typeof customerReviews.$inferSelect;\n\nexport const partners = pgTable(\"partners\", {\n  id: serial(\"id\").primaryKey(),\n  name: text(\"name\").notNull(),\n  nameAr: text(\"name_ar\"),\n  logoUrl: text(\"logo_url\"),\n});\n\nexport const insertPartnerSchema = createInsertSchema(partners).omit({\n  id: true,\n}).extend({\n  logoUrl: z.string().optional(),\n});\n\nexport type InsertPartner = z.infer<typeof insertPartnerSchema>;\nexport type Partner = typeof partners.$inferSelect;\n\nexport const openingDiscount = pgTable(\"opening_discount\", {\n  id: serial(\"id\").primaryKey(),\n  firstName: varchar(\"first_name\", { length: 50 }).notNull(),\n  lastName: varchar(\"last_name\", { length: 50 }).notNull(),\n  phoneNumber: varchar(\"phone_number\", { length: 15 }).notNull().unique(),\n  emailAddress: varchar(\"email_address\", { length: 50 }).notNull().unique(),\n});\n\nexport const insertOpeningDiscountSchema = createInsertSchema(openingDiscount).omit({\n  id: true,\n}).extend({\n  firstName: z.string().max(20, \"First name must be 20 characters or less\"),\n  lastName: z.string().max(20, \"Last name must be 20 characters or less\"),\n  phoneNumber: z.string().max(10, \"Phone number must be 10 digits or less\").regex(/^[0-9]+$/, \"Phone number must contain only digits\"),\n  emailAddress: z.string().email(\"Invalid email address\").max(50, \"Email must be 50 characters or less\"),\n});\n\nexport type InsertOpeningDiscount = z.infer<typeof insertOpeningDiscountSchema>;\nexport type OpeningDiscount = typeof openingDiscount.$inferSelect;\n","size_bytes":3250},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/pages/Blog.tsx":{"content":"import { motion, useInView } from 'framer-motion';\nimport { useLanguage } from '@/contexts/LanguageContext';\nimport { Button } from '@/components/ui/button';\nimport { useRef, useEffect } from 'react';\nimport Header from '@/components/Header';\nimport ECGAnimation from '@/components/ECGAnimation';\nimport Footer from '@/components/Footer';\nimport { Calendar, User, Dog, Cat, Bird, Syringe, UtensilsCrossed, type LucideIcon } from 'lucide-react';\nimport { Link } from 'wouter';\nimport dogImage from '@assets/Summer Care Tips for Dogs_1759926617301.png';\nimport catImage from '@assets/Why Regular Check-ups Matter for Cats_1759926617300.png';\nimport birdImage from '@assets/Caring for Your Pet Birds at Home_1759926617299.png';\nimport vaccineImage from '@assets/Importance of Vaccinations for Pets (2)_1759928686852.png';\nimport nutritionImage from '@assets/stock_images/dog_cat_eating_natur_d19edd3f.jpg';\nimport blogHeroImage from '@assets/Dr Paws Blog_1759927269597.png';\nimport HeartbeatDivider from '@/components/HeartbeatDivider';\n\ninterface BlogPost {\n  id: number;\n  titleEn: string;\n  titleAr: string;\n  contentEn: string;\n  contentAr: string;\n  icon: LucideIcon;\n  image: string;\n  date: string;\n  author: string;\n  category: string;\n  categoryAr: string;\n}\n\nexport default function Blog() {\n  const { language } = useLanguage();\n\n  const heroRef = useRef(null);\n  const postsRef = useRef(null);\n\n  const heroInView = useInView(heroRef, { once: false, amount: 0.3 });\n  const postsInView = useInView(postsRef, { once: false, amount: 0.1 });\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  const blogPosts: BlogPost[] = [\n    {\n      id: 1,\n      titleEn: \"Summer Care Tips for Dogs\",\n      titleAr: \"نصائح العناية الصيفية للكلاب\",\n      contentEn: \"Hot Saudi summers can be tough for dogs! Make sure your furry friend stays cool by keeping them hydrated, walking during early mornings, and avoiding hot pavements. Regular grooming helps reduce body heat and keeps them comfortable. Visit Dr. Paws for a summer health check and professional grooming.\",\n      contentAr: \"الصيف في السعودية قد يكون صعبًا على الكلاب! احرص على بقاء كلبك رطبًا، ونزهه في الصباح الباكر وتجنب الطرق الساخنة. العناية الدورية بالشعر تساعد على تقليل حرارة الجسم وجعل كلبك مرتاحًا. قم بزيارة عيادات د. باوز لفحص صيفي شامل وخدمة تجميل احترافية.\",\n      icon: Dog,\n      image: dogImage,\n      date: \"2025-01-15\",\n      author: \"Dr. Paws Team\",\n      category: \"Pet Care\",\n      categoryAr: \"رعاية الحيوانات\"\n    },\n    {\n      id: 2,\n      titleEn: \"Why Regular Check-ups Matter for Cats\",\n      titleAr: \"أهمية الفحوصات الدورية للقطط\",\n      contentEn: \"Cats often hide signs of illness. Regular veterinary check-ups can detect problems early, keeping your cat healthy and happy. Dr. Paws offers gentle, stress-free examinations to ensure your feline friend's well-being.\",\n      contentAr: \"القطط غالبًا ما تُخفي علامات المرض، لذلك الفحص البيطري الدوري يساعد في اكتشاف أي مشكلة مبكرًا لضمان صحتها وسعادتها. في عيادات د. باوز، نقدم فحوصات لطيفة وخالية من التوتر لحيوانك الأليف.\",\n      icon: Cat,\n      image: catImage,\n      date: \"2025-01-10\",\n      author: \"Dr. Paws Team\",\n      category: \"Health\",\n      categoryAr: \"الصحة\"\n    },\n    {\n      id: 3,\n      titleEn: \"Caring for Your Pet Birds at Home\",\n      titleAr: \"رعاية طيورك الأليفة في المنزل\",\n      contentEn: \"Birds need special care — clean cages, fresh food, and daily interaction. Watch for changes in feathers or appetite, as they can indicate illness. Dr. Paws provides expert avian care and health consultations for all bird species.\",\n      contentAr: \"الطيور تحتاج إلى عناية خاصة — نظّف القفص بانتظام، وقدّم طعامًا طازجًا وتفاعل معها يوميًا. راقب أي تغيّر في الريش أو الشهية لأنها قد تدل على مرض. يقدم د. باوز رعاية متخصصة واستشارات صحية لجميع أنواع الطيور.\",\n      icon: Bird,\n      image: birdImage,\n      date: \"2025-01-05\",\n      author: \"Dr. Paws Team\",\n      category: \"Pet Care\",\n      categoryAr: \"رعاية الحيوانات\"\n    },\n    {\n      id: 4,\n      titleEn: \"Importance of Vaccinations for Pets\",\n      titleAr: \"أهمية التطعيمات للحيوانات الأليفة\",\n      contentEn: \"Vaccines protect your pet from dangerous diseases like rabies and parvovirus. Keeping vaccinations up to date ensures long-term safety. Schedule your pet's vaccination today at Dr. Paws and keep them protected year-round.\",\n      contentAr: \"اللقاحات تحمي حيوانك الأليف من الأمراض الخطيرة مثل السعار والبارفو. الالتزام بجدول التطعيمات يحافظ على صحته على المدى الطويل. احجز موعد التطعيم اليوم في عيادات د. باوز لضمان حمايته طوال العام.\",\n      icon: Syringe,\n      image: vaccineImage,\n      date: \"2024-12-28\",\n      author: \"Dr. Paws Team\",\n      category: \"Health\",\n      categoryAr: \"الصحة\"\n    },\n    {\n      id: 5,\n      titleEn: \"Healthy Nutrition Tips for Cats, Dogs & Birds\",\n      titleAr: \"نصائح التغذية الصحية للقطط والكلاب والطيور\",\n      contentEn: \"A balanced diet supports immunity, energy, and mood. Choose vet-approved food suitable for your pet's species, age, and activity level. Dr. Paws nutrition experts can guide you to the perfect feeding plan.\",\n      contentAr: \"النظام الغذائي المتوازن يعزز المناعة والطاقة والمزاج العام. اختر طعامًا معتمدًا من الطبيب البيطري ومناسبًا لنوع الحيوان وعمره ونشاطه. يمكن لخبراء التغذية في د. باوز مساعدتك في إعداد النظام الغذائي المثالي.\",\n      icon: UtensilsCrossed,\n      image: nutritionImage,\n      date: \"2024-12-20\",\n      author: \"Dr. Paws Team\",\n      category: \"Nutrition\",\n      categoryAr: \"التغذية\"\n    }\n  ];\n\n  const BlogPost = ({ post, index }: { post: BlogPost; index: number }) => {\n    const title = language === 'ar' ? post.titleAr : post.titleEn;\n    const content = language === 'ar' ? post.contentAr : post.contentEn;\n    const category = language === 'ar' ? post.categoryAr : post.category;\n    const Icon = post.icon;\n    const isEven = index % 2 === 0;\n    const imageOnLeft = language === 'ar' ? !isEven : isEven;\n\n    return (\n      <motion.article\n        initial={{ opacity: 0, y: 30 }}\n        animate={postsInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 30 }}\n        transition={{ duration: 0.6, delay: index * 0.15, ease: 'easeOut' }}\n        className=\"mb-24 last:mb-0\"\n        dir={language === 'ar' ? 'rtl' : 'ltr'}\n      >\n        <div className={`flex flex-col ${imageOnLeft ? 'lg:flex-row' : 'lg:flex-row-reverse'} gap-8 lg:gap-12 items-center`}>\n          {/* Image */}\n          <div className=\"w-full lg:w-1/2\">\n            <div className=\"relative overflow-hidden rounded-md group\">\n              <img \n                src={post.image} \n                alt={title}\n                className=\"w-full h-[400px] object-cover transition-transform duration-500 group-hover:scale-105\"\n                data-testid={`img-post-${post.id}`}\n              />\n              <div className=\"absolute inset-0 bg-gradient-to-t from-black/20 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300\" />\n            </div>\n          </div>\n\n          {/* Content */}\n          <div className=\"w-full lg:w-1/2 space-y-6\">\n            {/* Icon and Category */}\n            <div className=\"flex items-center gap-4 flex-wrap\">\n              <div className=\"w-14 h-14 rounded-md bg-[#18ac61]/10 flex items-center justify-center\">\n                <Icon className=\"w-7 h-7 text-[#18ac61]\" data-testid={`icon-${post.id}`} />\n              </div>\n              <span \n                className=\"px-4 py-1.5 rounded-full text-sm font-medium bg-[#18ac61]/10 text-[#18ac61]\"\n                data-testid={`category-${post.id}`}\n              >\n                {category}\n              </span>\n            </div>\n\n            {/* Title */}\n            <h2 \n              className=\"font-display text-3xl md:text-4xl font-bold text-[#264653]\"\n              data-testid={`title-${post.id}`}\n            >\n              {title}\n            </h2>\n\n            {/* Meta */}\n            <div className={`flex items-center gap-6 text-sm text-muted-foreground flex-wrap ${language === 'ar' ? 'flex-row-reverse' : ''}`}>\n              <div className={`flex items-center gap-2 ${language === 'ar' ? 'flex-row-reverse' : ''}`}>\n                <Calendar className=\"w-4 h-4\" />\n                <span data-testid={`date-${post.id}`}>\n                  {new Date(post.date).toLocaleDateString(language === 'ar' ? 'ar-SA' : 'en-US', {\n                    year: 'numeric',\n                    month: 'long',\n                    day: 'numeric'\n                  })}\n                </span>\n              </div>\n              <div className={`flex items-center gap-2 ${language === 'ar' ? 'flex-row-reverse' : ''}`}>\n                <User className=\"w-4 h-4\" />\n                <span data-testid={`author-${post.id}`}>{post.author}</span>\n              </div>\n            </div>\n\n            {/* Content */}\n            <p \n              className=\"text-lg text-foreground/70 leading-relaxed\"\n              data-testid={`content-${post.id}`}\n              style={{ paddingBottom: '30px' }}\n            >\n              {content}\n            </p>\n\n            {/* CTA Button */}\n            <Link href=\"/book-now\">\n              <Button \n                size=\"lg\"\n                className=\"bg-[#18ac61] text-white\"\n                data-testid={`button-book-${post.id}`}\n              >\n                {language === 'ar' ? 'احجز موعد' : 'Book an Appointment'}\n              </Button>\n            </Link>\n          </div>\n        </div>\n\n        {/* Separator Line */}\n        {index < blogPosts.length - 1 && (\n          <div className=\"mt-24 border-t border-border/40\" />\n        )}\n      </motion.article>\n    );\n  };\n\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <Header />\n      <ECGAnimation />\n\n      <main className=\"flex-1 relative z-10\">\n        {/* Hero Section */}\n        <section\n          ref={heroRef}\n          className=\"relative py-32 bg-cover bg-center\"\n          style={{ backgroundImage: `url(${blogHeroImage})` }}\n        >\n          <div className=\"absolute inset-0 bg-gradient-to-r from-black/70 to-black/50\" />\n          <div className=\"max-w-7xl mx-auto px-6 relative z-10\">\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              animate={heroInView ? { opacity: 1, y: 0 } : { opacity: 0, y: 30 }}\n              transition={{ duration: 0.8 }}\n              className=\"text-center\"\n              dir={language === 'ar' ? 'rtl' : 'ltr'}\n            >\n              <h1\n                className=\"font-display text-5xl md:text-6xl font-bold text-white mb-6\"\n                data-testid=\"text-blog-header\"\n              >\n                {language === 'ar' ? 'مدونة د. باوز' : 'Dr. Paws Blog'}\n              </h1>\n              <p\n                className=\"text-xl md:text-2xl text-white/90 max-w-3xl mx-auto\"\n                data-testid=\"text-blog-subheader\"\n              >\n                {language === 'ar' \n                  ? 'نصائح ومعلومات مفيدة لرعاية حيواناتك الأليفة'\n                  : 'Helpful Tips & Information for Your Pet Care'\n                }\n              </p>\n            </motion.div>\n          </div>\n        </section>\n\n        {/* Blog Posts */}\n        <section ref={postsRef} className=\"py-20\">\n          <div className=\"max-w-7xl mx-auto px-6\">\n            {blogPosts.map((post, index) => (\n              <BlogPost key={post.id} post={post} index={index} />\n            ))}\n          </div>\n        </section>\n\n        {/* Heartbeat Divider */}\n        <HeartbeatDivider />\n\n        {/* CTA Section */}\n        <motion.section\n          initial={{ opacity: 0, y: 30 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          viewport={{ once: false, amount: 0.3 }}\n          transition={{ duration: 0.8 }}\n          className=\"py-20 bg-[#264653]\"\n        >\n          <div className=\"max-w-4xl mx-auto px-6 text-center\" dir={language === 'ar' ? 'rtl' : 'ltr'}>\n            <h2 className=\"font-display text-3xl md:text-4xl font-bold text-white mb-6\">\n              {language === 'ar' ? 'هل لديك استفسار؟' : 'Have a Question?'}\n            </h2>\n            <p className=\"text-xl text-white/90 mb-8\">\n              {language === 'ar' \n                ? 'فريقنا البيطري هنا لمساعدتك'\n                : 'Our Veterinary Team is Here to Help'\n              }\n            </p>\n            <Link href=\"/book-now\">\n              <Button \n                size=\"lg\"\n                className=\"bg-[#18ac61] text-white\"\n                data-testid=\"button-contact-cta\"\n              >\n                {language === 'ar' ? 'تواصل معنا' : 'Contact Us'}\n              </Button>\n            </Link>\n          </div>\n        </motion.section>\n      </main>\n\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":13828},"client/src/components/Footer.tsx":{"content":"import { MapPin, Phone, Clock, Mail } from 'lucide-react';\nimport { SiFacebook, SiInstagram, SiX, SiWhatsapp, SiSnapchat } from 'react-icons/si';\nimport { motion } from 'framer-motion';\nimport { useLanguage } from '@/contexts/LanguageContext';\nimport logoSvg from '@assets/dr-paws-logo.svg';\n\nconst container = {\n  hidden: { opacity: 0 },\n  show: {\n    opacity: 1,\n    transition: {\n      staggerChildren: 0.1\n    }\n  }\n};\n\nconst item = {\n  hidden: { opacity: 0, y: 20 },\n  show: { opacity: 1, y: 0 }\n};\n\nexport default function Footer() {\n  const { t } = useLanguage();\n  return (\n    <footer className=\"bg-[hsl(199,37%,24%)] text-white\">\n      <div className=\"max-w-7xl mx-auto px-6 py-16\">\n        <motion.div \n          variants={container}\n          initial=\"hidden\"\n          whileInView=\"show\"\n          viewport={{ once: false, amount: 0.3 }}\n          className=\"grid md:grid-cols-3 gap-12 mb-12\"\n        >\n          <motion.div variants={item}>\n            <img src={logoSvg} alt=\"Dr. Paws\" className=\"h-16 mb-4\" data-testid=\"img-footer-logo\" />\n            <p className=\"text-white/80 text-sm leading-relaxed\">\n              {t('footer.description')}\n            </p>\n          </motion.div>\n\n          <motion.div variants={item}>\n            <h4 className=\"font-semibold text-lg mb-4\">{t('footer.contactInfo')}</h4>\n            <div className=\"space-y-3 text-sm\">\n              <div className=\"flex items-start gap-2\">\n                <Phone className=\"w-4 h-4 mt-0.5 flex-shrink-0\" />\n                <div>\n                  <p>{t('footer.call')}: <a href=\"tel:920003045\" className=\"hover:underline\" data-testid=\"link-phone-general\">{t('footer.generalPhone')}</a></p>\n                  <p className=\"text-white/70\">{t('footer.emergency')}</p>\n                </div>\n              </div>\n              \n              <div className=\"space-y-1\">\n                <a \n                  href={t('footer.sahafahMapUrl')} \n                  target=\"_blank\" \n                  rel=\"noopener noreferrer\"\n                  className=\"flex items-start gap-2 hover-elevate rounded-md p-1 -m-1 transition-colors\"\n                  data-testid=\"link-location-sahafa\"\n                >\n                  <MapPin className=\"w-4 h-4 mt-0.5 flex-shrink-0\" />\n                  <div>\n                    <p className=\"font-medium\">{t('footer.sahafahBranch')}</p>\n                    <p className=\"text-white/70\">{t('footer.sahafahAddress')}</p>\n                  </div>\n                </a>\n                <p className=\"text-white/70 ps-6\">{t('footer.mobile')}: <a href=\"tel:0552030564\" className=\"hover:underline\" data-testid=\"link-phone-sahafa\" dir=\"ltr\">{t('footer.sahafahPhone')}</a></p>\n              </div>\n\n              <div className=\"space-y-1\">\n                <a \n                  href={t('footer.matherMapUrl')} \n                  target=\"_blank\" \n                  rel=\"noopener noreferrer\"\n                  className=\"flex items-start gap-2 hover-elevate rounded-md p-1 -m-1 transition-colors\"\n                  data-testid=\"link-location-mather\"\n                >\n                  <MapPin className=\"w-4 h-4 mt-0.5 flex-shrink-0\" />\n                  <div>\n                    <p className=\"font-medium\">{t('footer.matherBranch')}</p>\n                    <p className=\"text-white/70\">{t('footer.matherAddress')}</p>\n                  </div>\n                </a>\n                <p className=\"text-white/70 ps-6\">{t('footer.mobile')}: <a href=\"tel:0531353667\" className=\"hover:underline\" data-testid=\"link-phone-mather\" dir=\"ltr\">{t('footer.matherPhone')}</a></p>\n              </div>\n            </div>\n          </motion.div>\n\n          <motion.div variants={item}>\n            <h4 className=\"font-semibold text-lg mb-4\">{t('footer.hours')}</h4>\n            <div className=\"space-y-2 text-sm mb-6\">\n              <div className=\"flex items-start gap-2\">\n                <Clock className=\"w-4 h-4 mt-0.5 flex-shrink-0\" />\n                <div>\n                  <p>{t('footer.satThu')}</p>\n                  <p>{t('footer.fri')}</p>\n                </div>\n              </div>\n              \n              <div className=\"flex items-start gap-2\">\n                <Mail className=\"w-4 h-4 mt-0.5 flex-shrink-0\" />\n                <p><a href=\"mailto:info@drpaws-sa.com\" className=\"hover:underline\" data-testid=\"link-email\">{t('footer.email')}</a></p>\n              </div>\n            </div>\n\n            <div className=\"mt-6\">\n              <h4 className=\"font-semibold text-lg mb-4\">{t('footer.follow')}</h4>\n              <div className=\"flex gap-4\">\n                <motion.a\n                  whileHover={{ scale: 1.2, rotate: 5 }}\n                  whileTap={{ scale: 0.9 }}\n                  href=\"https://www.facebook.com/share/19YLB7ZUxH/\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"w-10 h-10 rounded-lg bg-white/10 flex items-center justify-center hover-elevate active-elevate-2\"\n                  data-testid=\"link-facebook\"\n                  aria-label=\"Facebook\"\n                >\n                  <SiFacebook className=\"w-5 h-5\" />\n                </motion.a>\n                <motion.a\n                  whileHover={{ scale: 1.2, rotate: 5 }}\n                  whileTap={{ scale: 0.9 }}\n                  href=\"https://www.instagram.com/drpawssa?igsh=MW4zbTJhNmRrNjRidA==\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"w-10 h-10 rounded-lg bg-white/10 flex items-center justify-center hover-elevate active-elevate-2\"\n                  data-testid=\"link-instagram\"\n                  aria-label=\"Instagram\"\n                >\n                  <SiInstagram className=\"w-5 h-5\" />\n                </motion.a>\n                <motion.a\n                  whileHover={{ scale: 1.2, rotate: 5 }}\n                  whileTap={{ scale: 0.9 }}\n                  href=\"https://x.com/drpawssa\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"w-10 h-10 rounded-lg bg-white/10 flex items-center justify-center hover-elevate active-elevate-2\"\n                  data-testid=\"link-twitter\"\n                  aria-label=\"X (Twitter)\"\n                >\n                  <SiX className=\"w-5 h-5\" />\n                </motion.a>\n                <motion.a\n                  whileHover={{ scale: 1.2, rotate: 5 }}\n                  whileTap={{ scale: 0.9 }}\n                  href=\"https://wa.me/966920003045\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"w-10 h-10 rounded-lg bg-white/10 flex items-center justify-center hover-elevate active-elevate-2\"\n                  data-testid=\"link-whatsapp\"\n                  aria-label=\"WhatsApp\"\n                >\n                  <SiWhatsapp className=\"w-5 h-5\" />\n                </motion.a>\n                <motion.a\n                  whileHover={{ scale: 1.2, rotate: 5 }}\n                  whileTap={{ scale: 0.9 }}\n                  href=\"https://www.snapchat.com/@drpawssa?sender_web_id=f7ef6909-6b8c-47f1-93ab-33fb6dea9af9&device_type=android&is_copy_url=true\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className=\"w-10 h-10 rounded-lg bg-white/10 flex items-center justify-center hover-elevate active-elevate-2\"\n                  data-testid=\"link-snapchat\"\n                  aria-label=\"Snapchat\"\n                >\n                  <SiSnapchat className=\"w-5 h-5\" />\n                </motion.a>\n              </div>\n            </div>\n          </motion.div>\n        </motion.div>\n\n        <motion.div \n          initial={{ opacity: 0 }}\n          whileInView={{ opacity: 1 }}\n          viewport={{ once: false }}\n          transition={{ duration: 0.6, delay: 0.4 }}\n          className=\"border-t border-white/20 pt-8 text-center text-sm text-white/70\"\n        >\n          <p className=\"mb-3\">&copy; {new Date().getFullYear()} Dr. Paws Veterinary Clinic. All rights reserved.</p>\n          <p className=\"mb-2\">Powered By DotVets Software</p>\n          <div className=\"flex items-center justify-center gap-3\">\n            <a \n              href=\"tel:+966548336693\" \n              className=\"flex items-center gap-1 hover:text-white transition-colors\"\n              data-testid=\"link-dotvets-call\"\n              aria-label=\"Call DotVets\"\n            >\n              <Phone className=\"w-4 h-4\" />\n              <span dir=\"ltr\">+966 548336693</span>\n            </a>\n            <span className=\"text-white/40\">|</span>\n            <a \n              href=\"https://wa.me/966548336693\" \n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"flex items-center gap-1 hover:text-white transition-colors\"\n              data-testid=\"link-dotvets-whatsapp\"\n              aria-label=\"WhatsApp DotVets\"\n            >\n              <SiWhatsapp className=\"w-4 h-4\" />\n              <span>WhatsApp</span>\n            </a>\n          </div>\n        </motion.div>\n      </div>\n    </footer>\n  );\n}\n","size_bytes":9075},"client/src/components/examples/MediaSection.tsx":{"content":"import MediaSection from '../MediaSection';\n\nexport default function MediaSectionExample() {\n  return <MediaSection />;\n}\n","size_bytes":122},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  // Whitespace-nowrap: Badges should never wrap.\n  \"whitespace-nowrap inline-flex items-center rounded-md border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\" +\n  \" hover-elevate \" ,\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground shadow-xs\",\n        secondary: \"border-transparent bg-secondary text-secondary-foreground\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground shadow-xs\",\n\n        outline: \" border [border-color:var(--badge-outline)] shadow-xs\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  },\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  );\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1202},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"client/src/components/examples/HeroSlider.tsx":{"content":"import HeroSlider from '../HeroSlider';\n\nexport default function HeroSliderExample() {\n  return <HeroSlider />;\n}\n","size_bytes":114},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\" +\n  \" hover-elevate active-elevate-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground border border-primary-border\",\n        destructive:\n          \"bg-destructive text-destructive-foreground border border-destructive-border\",\n        outline:\n          // Shows the background color of whatever card / sidebar / accent background it is inside of.\n          // Inherits the current text color.\n          \" border [border-color:var(--button-outline)]  shadow-xs active:shadow-none \",\n        secondary: \"border bg-secondary text-secondary-foreground border border-secondary-border \",\n        // Add a transparent border so that when someone toggles a border on later, it doesn't shift layout/size.\n        ghost: \"border border-transparent\",\n      },\n      // Heights are set as \"min\" heights, because sometimes Ai will place large amount of content\n      // inside buttons. With a min-height they will look appropriate with small amounts of content,\n      // but will expand to fit large amounts of content.\n      size: {\n        default: \"min-h-9 px-4 py-2\",\n        sm: \"min-h-8 rounded-md px-3 text-xs\",\n        lg: \"min-h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  },\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  },\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":2359},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/sidebar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, VariantProps } from \"class-variance-authority\"\nimport { PanelLeftIcon } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nfunction SidebarProvider({\n  defaultOpen = true,\n  open: openProp,\n  onOpenChange: setOpenProp,\n  className,\n  style,\n  children,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  defaultOpen?: boolean\n  open?: boolean\n  onOpenChange?: (open: boolean) => void\n}) {\n  const isMobile = useIsMobile()\n  const [openMobile, setOpenMobile] = React.useState(false)\n\n  // This is the internal state of the sidebar.\n  // We use openProp and setOpenProp for control from outside the component.\n  const [_open, _setOpen] = React.useState(defaultOpen)\n  const open = openProp ?? _open\n  const setOpen = React.useCallback(\n    (value: boolean | ((value: boolean) => boolean)) => {\n      const openState = typeof value === \"function\" ? value(open) : value\n      if (setOpenProp) {\n        setOpenProp(openState)\n      } else {\n        _setOpen(openState)\n      }\n\n      // This sets the cookie to keep the sidebar state.\n      document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n    },\n    [setOpenProp, open]\n  )\n\n  // Helper to toggle the sidebar.\n  const toggleSidebar = React.useCallback(() => {\n    return isMobile ? setOpenMobile((open) => !open) : setOpen((open) => !open)\n  }, [isMobile, setOpen, setOpenMobile])\n\n  // Adds a keyboard shortcut to toggle the sidebar.\n  React.useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (\n        event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n        (event.metaKey || event.ctrlKey)\n      ) {\n        event.preventDefault()\n        toggleSidebar()\n      }\n    }\n\n    window.addEventListener(\"keydown\", handleKeyDown)\n    return () => window.removeEventListener(\"keydown\", handleKeyDown)\n  }, [toggleSidebar])\n\n  // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n  // This makes it easier to style the sidebar with Tailwind classes.\n  const state = open ? \"expanded\" : \"collapsed\"\n\n  const contextValue = React.useMemo<SidebarContextProps>(\n    () => ({\n      state,\n      open,\n      setOpen,\n      isMobile,\n      openMobile,\n      setOpenMobile,\n      toggleSidebar,\n    }),\n    [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n  )\n\n  return (\n    <SidebarContext.Provider value={contextValue}>\n      <TooltipProvider delayDuration={0}>\n        <div\n          data-slot=\"sidebar-wrapper\"\n          style={\n            {\n              \"--sidebar-width\": SIDEBAR_WIDTH,\n              \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n              ...style,\n            } as React.CSSProperties\n          }\n          className={cn(\n            \"group/sidebar-wrapper has-data-[variant=inset]:bg-sidebar flex min-h-svh w-full\",\n            className\n          )}\n          {...props}\n        >\n          {children}\n        </div>\n      </TooltipProvider>\n    </SidebarContext.Provider>\n  )\n}\n\nfunction Sidebar({\n  side = \"left\",\n  variant = \"sidebar\",\n  collapsible = \"offcanvas\",\n  className,\n  children,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  side?: \"left\" | \"right\"\n  variant?: \"sidebar\" | \"floating\" | \"inset\"\n  collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n}) {\n  const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n  if (collapsible === \"none\") {\n    return (\n      <div\n        data-slot=\"sidebar\"\n        className={cn(\n          \"bg-sidebar text-sidebar-foreground flex h-full w-[var(--sidebar-width)] flex-col\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n\n  if (isMobile) {\n    return (\n      <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n        <SheetContent\n          data-sidebar=\"sidebar\"\n          data-slot=\"sidebar\"\n          data-mobile=\"true\"\n          className=\"bg-sidebar text-sidebar-foreground w-[var(--sidebar-width)] p-0 [&>button]:hidden\"\n          style={\n            {\n              \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n            } as React.CSSProperties\n          }\n          side={side}\n        >\n          <SheetHeader className=\"sr-only\">\n            <SheetTitle>Sidebar</SheetTitle>\n            <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n          </SheetHeader>\n          <div className=\"flex h-full w-full flex-col\">{children}</div>\n        </SheetContent>\n      </Sheet>\n    )\n  }\n\n  return (\n    <div\n      className=\"group peer text-sidebar-foreground hidden md:block\"\n      data-state={state}\n      data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n      data-variant={variant}\n      data-side={side}\n      data-slot=\"sidebar\"\n    >\n      {/* This is what handles the sidebar gap on desktop */}\n      <div\n        data-slot=\"sidebar-gap\"\n        className={cn(\n          \"relative w-[var(--sidebar-width)] bg-transparent transition-[width] duration-200 ease-linear\",\n          \"group-data-[collapsible=offcanvas]:w-0\",\n          \"group-data-[side=right]:rotate-180\",\n          variant === \"floating\" || variant === \"inset\"\n            ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)+var(--spacing-4))]\"\n            : \"group-data-[collapsible=icon]:w-[var(--sidebar-width-icon)]\"\n        )}\n      />\n      <div\n        data-slot=\"sidebar-container\"\n        className={cn(\n          \"fixed inset-y-0 z-10 hidden h-svh w-[var(--sidebar-width)] transition-[left,right,width] duration-200 ease-linear md:flex\",\n          side === \"left\"\n            ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n            : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n          // Adjust the padding for floating and inset variants.\n          variant === \"floating\" || variant === \"inset\"\n            ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)+var(--spacing-4)+2px)]\"\n            : \"group-data-[collapsible=icon]:w-[var(--sidebar-width-icon)] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n          className\n        )}\n        {...props}\n      >\n        <div\n          data-sidebar=\"sidebar\"\n          data-slot=\"sidebar-inner\"\n          className=\"bg-sidebar group-data-[variant=floating]:border-sidebar-border flex h-full w-full flex-col group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:shadow-sm\"\n        >\n          {children}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction SidebarTrigger({\n  className,\n  onClick,\n  ...props\n}: React.ComponentProps<typeof Button>) {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      data-sidebar=\"trigger\"\n      data-slot=\"sidebar-trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeftIcon />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n}\n\nfunction SidebarRail({ className, ...props }: React.ComponentProps<\"button\">) {\n  const { toggleSidebar } = useSidebar()\n\n  // Note: Tailwind v3.4 doesn't support \"in-\" selectors. So the rail won't work perfectly.\n  return (\n    <button\n      data-sidebar=\"rail\"\n      data-slot=\"sidebar-rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"hover:after:bg-sidebar-border absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear group-data-[side=left]:-right-4 group-data-[side=right]:left-0 after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] sm:flex\",\n        \"in-data-[side=left]:cursor-w-resize in-data-[side=right]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"hover:group-data-[collapsible=offcanvas]:bg-sidebar group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarInset({ className, ...props }: React.ComponentProps<\"main\">) {\n  return (\n    <main\n      data-slot=\"sidebar-inset\"\n      className={cn(\n        \"bg-background relative flex w-full flex-1 flex-col\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow-sm md:peer-data-[variant=inset]:peer-data-[state=collapsed]:ml-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarInput({\n  className,\n  ...props\n}: React.ComponentProps<typeof Input>) {\n  return (\n    <Input\n      data-slot=\"sidebar-input\"\n      data-sidebar=\"input\"\n      className={cn(\"bg-background h-8 w-full shadow-none\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-header\"\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-footer\"\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof Separator>) {\n  return (\n    <Separator\n      data-slot=\"sidebar-separator\"\n      data-sidebar=\"separator\"\n      className={cn(\"bg-sidebar-border mx-2 w-auto\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-content\"\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroup({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-group\"\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroupLabel({\n  className,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"div\"> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-group-label\"\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"text-sidebar-foreground/70 ring-sidebar-ring flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium outline-hidden transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:h-4 [&>svg]:w-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroupAction({\n  className,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-group-action\"\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground absolute top-3.5 right-3 flex aspect-square w-5 items-center justify-center rounded-md p-0 outline-hidden transition-transform focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 md:after:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroupContent({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-group-content\"\n      data-sidebar=\"group-content\"\n      className={cn(\"w-full text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenu({ className, ...props }: React.ComponentProps<\"ul\">) {\n  return (\n    <ul\n      data-slot=\"sidebar-menu\"\n      data-sidebar=\"menu\"\n      className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuItem({ className, ...props }: React.ComponentProps<\"li\">) {\n  return (\n    <li\n      data-slot=\"sidebar-menu-item\"\n      data-sidebar=\"menu-item\"\n      className={cn(\"group/menu-item relative\", className)}\n      {...props}\n    />\n  )\n}\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-hidden ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-data-[sidebar=menu-action]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:w-8! group-data-[collapsible=icon]:h-8! group-data-[collapsible=icon]:p-2! [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:p-0!\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction SidebarMenuButton({\n  asChild = false,\n  isActive = false,\n  variant = \"default\",\n  size = \"default\",\n  tooltip,\n  className,\n  ...props\n}: React.ComponentProps<\"button\"> & {\n  asChild?: boolean\n  isActive?: boolean\n  tooltip?: string | React.ComponentProps<typeof TooltipContent>\n} & VariantProps<typeof sidebarMenuButtonVariants>) {\n  const Comp = asChild ? Slot : \"button\"\n  const { isMobile, state } = useSidebar()\n\n  const button = (\n    <Comp\n      data-slot=\"sidebar-menu-button\"\n      data-sidebar=\"menu-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n      {...props}\n    />\n  )\n\n  if (!tooltip) {\n    return button\n  }\n\n  if (typeof tooltip === \"string\") {\n    tooltip = {\n      children: tooltip,\n    }\n  }\n\n  return (\n    <Tooltip>\n      <TooltipTrigger asChild>{button}</TooltipTrigger>\n      <TooltipContent\n        side=\"right\"\n        align=\"center\"\n        hidden={state !== \"collapsed\" || isMobile}\n        {...tooltip}\n      />\n    </Tooltip>\n  )\n}\n\nfunction SidebarMenuAction({\n  className,\n  asChild = false,\n  showOnHover = false,\n  ...props\n}: React.ComponentProps<\"button\"> & {\n  asChild?: boolean\n  showOnHover?: boolean\n}) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-menu-action\"\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground peer-hover/menu-button:text-sidebar-accent-foreground absolute top-1.5 right-1 flex aspect-square w-5 items-center justify-center rounded-md p-0 outline-hidden transition-transform focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 md:after:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"peer-data-[active=true]/menu-button:text-sidebar-accent-foreground group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuBadge({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-menu-badge\"\n      data-sidebar=\"menu-badge\"\n      className={cn(\n        \"text-sidebar-foreground pointer-events-none absolute right-1 flex h-5 min-w-5 items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums select-none\",\n        \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuSkeleton({\n  className,\n  showIcon = false,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  showIcon?: boolean\n}) {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      data-slot=\"sidebar-menu-skeleton\"\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[var(--skeleton-width)] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n}\n\nfunction SidebarMenuSub({ className, ...props }: React.ComponentProps<\"ul\">) {\n  return (\n    <ul\n      data-slot=\"sidebar-menu-sub\"\n      data-sidebar=\"menu-sub\"\n      className={cn(\n        \"border-sidebar-border mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l px-2.5 py-0.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuSubItem({\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) {\n  return (\n    <li\n      data-slot=\"sidebar-menu-sub-item\"\n      data-sidebar=\"menu-sub-item\"\n      className={cn(\"group/menu-sub-item relative\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuSubButton({\n  asChild = false,\n  size = \"md\",\n  isActive = false,\n  className,\n  ...props\n}: React.ComponentProps<\"a\"> & {\n  asChild?: boolean\n  size?: \"sm\" | \"md\"\n  isActive?: boolean\n}) {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-menu-sub-button\"\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground active:bg-sidebar-accent active:text-sidebar-accent-foreground [&>svg]:text-sidebar-accent-foreground flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 outline outline-2 outline-transparent outline-offset-2 focus-visible:ring-2 disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":21846},"client/src/index.css":{"content":"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n/* LIGHT MODE */\n:root {\n  --button-outline: rgba(0,0,0, .10);\n  --badge-outline: rgba(0,0,0, .05);\n\n  /* Automatic computation of border around primary / danger buttons */\n  --opaque-button-border-intensity: -8; /* In terms of percentages */\n\n  /* Backgrounds applied on top of other backgrounds when hovered/active */\n  --elevate-1: rgba(0,0,0, .03);\n  --elevate-2: rgba(0,0,0, .08);\n\n  --background: 0 0% 99%;\n\n  --foreground: 199 37% 24%;\n\n  --border: 0 0% 88%;\n\n  --card: 0 0% 97%;\n\n  --card-foreground: 199 37% 24%;\n\n  --card-border: 0 0% 92%;\n\n  --sidebar: 0 0% 95%;\n\n  --sidebar-foreground: 199 37% 24%;\n\n  --sidebar-border: 0 0% 89%;\n\n  --sidebar-primary: 143 76% 38%;\n\n  --sidebar-primary-foreground: 0 0% 100%;\n\n  --sidebar-accent: 43 75% 66%;\n\n  --sidebar-accent-foreground: 199 37% 24%;\n\n  --sidebar-ring: 143 76% 38%;\n\n  --popover: 0 0% 93%;\n\n  --popover-foreground: 199 37% 24%;\n\n  --popover-border: 0 0% 87%;\n\n  --primary: 143 76% 38%;\n\n  --primary-foreground: 0 0% 100%;\n\n  --secondary: 0 0% 91%;\n\n  --secondary-foreground: 199 37% 24%;\n\n  --muted: 43 15% 90%;\n\n  --muted-foreground: 199 37% 35%;\n\n  --accent: 43 20% 88%;\n\n  --accent-foreground: 199 37% 24%;\n\n  --destructive: 0 72% 51%;\n\n  --destructive-foreground: 0 0% 100%;\n\n  --input: 0 0% 78%;\n  --ring: 143 76% 38%;\n  --chart-1: 143 76% 38%;\n  --chart-2: 27 87% 67%;\n  --chart-3: 199 37% 24%;\n  --chart-4: 43 75% 66%;\n  --chart-5: 143 76% 50%;\n\n  --font-sans: Poppins, sans-serif;\n  --font-serif: Georgia, serif;\n  --font-mono: Menlo, monospace;\n  --font-display: Rubik, sans-serif;\n  --radius: .5rem; /* 8px */\n  --shadow-2xs: 0px 2px 0px 0px hsl(0 0% 0% / 0.00);\n  --shadow-xs: 0px 2px 0px 0px hsl(0 0% 0% / 0.00);\n  --shadow-sm: 0px 2px 0px 0px hsl(0 0% 0% / 0.00), 0px 1px 2px -1px hsl(0 0% 0% / 0.00);\n  --shadow: 0px 2px 0px 0px hsl(0 0% 0% / 0.00), 0px 1px 2px -1px hsl(0 0% 0% / 0.00);\n  --shadow-md: 0px 2px 0px 0px hsl(0 0% 0% / 0.00), 0px 2px 4px -1px hsl(0 0% 0% / 0.00);\n  --shadow-lg: 0px 2px 0px 0px hsl(0 0% 0% / 0.00), 0px 4px 6px -1px hsl(0 0% 0% / 0.00);\n  --shadow-xl: 0px 2px 0px 0px hsl(0 0% 0% / 0.00), 0px 8px 10px -1px hsl(0 0% 0% / 0.00);\n  --shadow-2xl: 0px 2px 0px 0px hsl(0 0% 0% / 0.00);\n  --tracking-normal: 0em;\n  --spacing: 0.25rem;\n\n  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */\n\n  /* Fallback for older browsers */\n  --sidebar-primary-border: hsl(var(--sidebar-primary));\n  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --sidebar-accent-border: hsl(var(--sidebar-accent));\n  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --primary-border: hsl(var(--primary));\n  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --secondary-border: hsl(var(--secondary));\n  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --muted-border: hsl(var(--muted));\n  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --accent-border: hsl(var(--accent));\n  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --destructive-border: hsl(var(--destructive));\n  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n}\n\n.dark {\n  --button-outline: rgba(255,255,255, .10);\n  --badge-outline: rgba(255,255,255, .05);\n\n  --opaque-button-border-intensity: 9;  /* In terms of percentages */\n\n  /* Backgrounds applied on top of other backgrounds when hovered/active */\n  --elevate-1: rgba(255,255,255, .04);\n  --elevate-2: rgba(255,255,255, .09);\n\n  --background: 199 5% 12%;\n\n  --foreground: 0 0% 95%;\n\n  --border: 199 5% 20%;\n\n  --card: 199 5% 14%;\n\n  --card-foreground: 0 0% 95%;\n\n  --card-border: 199 5% 18%;\n\n  --sidebar: 199 5% 16%;\n\n  --sidebar-foreground: 0 0% 95%;\n\n  --sidebar-border: 199 5% 21%;\n\n  --sidebar-primary: 143 76% 35%;\n\n  --sidebar-primary-foreground: 0 0% 100%;\n\n  --sidebar-accent: 43 75% 58%;\n\n  --sidebar-accent-foreground: 199 37% 12%;\n\n  --sidebar-ring: 143 76% 38%;\n\n  --popover: 199 5% 18%;\n\n  --popover-foreground: 0 0% 95%;\n\n  --popover-border: 199 5% 23%;\n\n  --primary: 143 76% 35%;\n\n  --primary-foreground: 0 0% 100%;\n\n  --secondary: 199 5% 22%;\n\n  --secondary-foreground: 0 0% 95%;\n\n  --muted: 143 8% 20%;\n\n  --muted-foreground: 0 0% 75%;\n\n  --accent: 43 12% 22%;\n\n  --accent-foreground: 0 0% 95%;\n\n  --destructive: 0 72% 45%;\n\n  --destructive-foreground: 0 0% 100%;\n\n  --input: 199 5% 28%;\n  --ring: 143 76% 38%;\n  --chart-1: 143 76% 55%;\n  --chart-2: 27 87% 72%;\n  --chart-3: 199 37% 65%;\n  --chart-4: 43 75% 70%;\n  --chart-5: 143 76% 60%;\n\n  --shadow-2xs: 0px 2px 0px 0px hsl(0 0% 0% / 0.00);\n  --shadow-xs: 0px 2px 0px 0px hsl(0 0% 0% / 0.00);\n  --shadow-sm: 0px 2px 0px 0px hsl(0 0% 0% / 0.00), 0px 1px 2px -1px hsl(0 0% 0% / 0.00);\n  --shadow: 0px 2px 0px 0px hsl(0 0% 0% / 0.00), 0px 1px 2px -1px hsl(0 0% 0% / 0.00);\n  --shadow-md: 0px 2px 0px 0px hsl(0 0% 0% / 0.00), 0px 2px 4px -1px hsl(0 0% 0% / 0.00);\n  --shadow-lg: 0px 2px 0px 0px hsl(0 0% 0% / 0.00), 0px 4px 6px -1px hsl(0 0% 0% / 0.00);\n  --shadow-xl: 0px 2px 0px 0px hsl(0 0% 0% / 0.00), 0px 8px 10px -1px hsl(0 0% 0% / 0.00);\n  --shadow-2xl: 0px 2px 0px 0px hsl(0 0% 0% / 0.00);\n\n  /* Fallback for older browsers */\n  --sidebar-primary-border: hsl(var(--sidebar-primary));\n  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --sidebar-accent-border: hsl(var(--sidebar-accent));\n  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --primary-border: hsl(var(--primary));\n  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --secondary-border: hsl(var(--secondary));\n  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --muted-border: hsl(var(--muted));\n  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --accent-border: hsl(var(--accent));\n  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --destructive-border: hsl(var(--destructive));\n  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground;\n  }\n\n  h1, h2, h3, h4, h5, h6 {\n    @apply font-display;\n  }\n}\n\n/**\n * Using the elevate system.\n * Automatic contrast adjustment.\n *\n * <element className=\"hover-elevate\" />\n * <element className=\"active-elevate-2\" />\n *\n * // Using the tailwind utility when a data attribute is \"on\"\n * <element className=\"toggle-elevate data-[state=on]:toggle-elevated\" />\n * // Or manually controlling the toggle state\n * <element className=\"toggle-elevate toggle-elevated\" />\n *\n * Elevation systems have to handle many states.\n * - not-hovered, vs. hovered vs. active  (three mutually exclusive states)\n * - toggled or not\n * - focused or not (this is not handled with these utilities)\n *\n * Even without handling focused or not, this is six possible combinations that\n * need to be distinguished from eachother visually.\n */\n@layer utilities {\n\n  /* Hide ugly search cancel button in Chrome until we can style it properly */\n  input[type=\"search\"]::-webkit-search-cancel-button {\n    @apply hidden;\n  }\n\n  /* Placeholder styling for contentEditable div */\n  [contenteditable][data-placeholder]:empty::before {\n    content: attr(data-placeholder);\n    color: hsl(var(--muted-foreground));\n    pointer-events: none;\n  }\n\n  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of\n   * buttons/badges can remove the automatic brightness adjustment on interactions\n   * and program their own. */\n  .no-default-hover-elevate {}\n\n  .no-default-active-elevate {}\n\n\n  /**\n   * Toggleable backgrounds go behind the content. Hoverable/active goes on top.\n   * This way they can stack/compound. Both will overlap the parent's borders!\n   * So borders will be automatically adjusted both on toggle, and hover/active,\n   * and they will be compounded.\n   */\n  .toggle-elevate::before,\n  .toggle-elevate-2::before {\n    content: \"\";\n    pointer-events: none;\n    position: absolute;\n    inset: 0px;\n    /*border-radius: inherit;   match rounded corners */\n    border-radius: inherit;\n    z-index: -1;\n    /* sits behind content but above backdrop */\n  }\n\n  .toggle-elevate.toggle-elevated::before {\n    background-color: var(--elevate-2);\n  }\n\n  /* If there's a 1px border, adjust the inset so that it covers that parent's border */\n  .border.toggle-elevate::before {\n    inset: -1px;\n  }\n\n  /* Does not work on elements with overflow:hidden! */\n  .hover-elevate:not(.no-default-hover-elevate),\n  .active-elevate:not(.no-default-active-elevate),\n  .hover-elevate-2:not(.no-default-hover-elevate),\n  .active-elevate-2:not(.no-default-active-elevate) {\n    position: relative;\n    z-index: 0;\n  }\n\n  .hover-elevate:not(.no-default-hover-elevate)::after,\n  .active-elevate:not(.no-default-active-elevate)::after,\n  .hover-elevate-2:not(.no-default-hover-elevate)::after,\n  .active-elevate-2:not(.no-default-active-elevate)::after {\n    content: \"\";\n    pointer-events: none;\n    position: absolute;\n    inset: 0px;\n    /*border-radius: inherit;   match rounded corners */\n    border-radius: inherit;\n    z-index: 999;\n    /* sits in front of content */\n  }\n\n  .hover-elevate:hover:not(.no-default-hover-elevate)::after,\n  .active-elevate:active:not(.no-default-active-elevate)::after {\n    background-color: var(--elevate-1);\n  }\n\n  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,\n  .active-elevate-2:active:not(.no-default-active-elevate)::after {\n    background-color: var(--elevate-2);\n  }\n\n  /* If there's a 1px border, adjust the inset so that it covers that parent's border */\n  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,\n  .border.active-elevate:not(.no-active-interaction-elevate)::after,\n  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,\n  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,\n  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {\n    inset: -1px;\n  }\n\n  /* RTL Support */\n  [dir=\"rtl\"] {\n    direction: rtl;\n  }\n\n  [dir=\"rtl\"] .text-left {\n    text-align: right;\n  }\n\n  [dir=\"rtl\"] .text-right {\n    text-align: left;\n  }\n\n  /* Phone shake animation */\n  @keyframes phone-shake {\n    0%, 100% { transform: rotate(0deg); }\n    10%, 30%, 50%, 70%, 90% { transform: rotate(-3deg); }\n    20%, 40%, 60%, 80% { transform: rotate(3deg); }\n  }\n\n  .phone-shake-animation {\n    animation: phone-shake 2s ease-in-out infinite;\n  }\n}","size_bytes":11647},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"replit.md":{"content":"# Dr. Paws Veterinary Clinic Website\n\n## Overview\n\nThis is a single-page web application for Dr. Paws Veterinary Clinic, a veterinary care provider. The application serves as the clinic's primary digital presence, showcasing services, facilitating contact, and establishing the clinic's brand identity. Built with React, TypeScript, and modern web technologies, the site features a responsive design with smooth animations and an image slider hero section.\n\nThe application features a sticky header with the Dr. Paws logo and navigation menu (Home, About, Services, Blog, Contact Us), and implements the home page with eight main sections: hero slider, about/intro, services overview, service packages, our media (video showcase), why choose us, contact form, and footer. The codebase is structured to support future expansion with additional pages and features.\n\n## User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n## System Architecture\n\n### Frontend Architecture\n\n**Technology Stack:**\n- **Framework**: React 18 with TypeScript\n- **Build Tool**: Vite for fast development and optimized production builds\n- **Routing**: Wouter (lightweight client-side routing library)\n- **UI Components**: Shadcn/ui component library with Radix UI primitives\n- **Styling**: Tailwind CSS with custom design tokens\n- **Animations**: Framer Motion for scroll-based and interactive animations\n- **State Management**: TanStack Query (React Query) for server state\n- **Form Handling**: React Hook Form with Zod validation\n\n**Design System:**\nThe application follows a strict brand guideline documented in `design_guidelines.md`:\n- **Colors**: Custom HSL color palette with Pigment Green (primary), Charcoal (text), Saffron and Sandy Brown (accents)\n- **Typography**: Rubik for headings, Poppins for body text (loaded via Google Fonts)\n- **Component Library**: Extensive set of pre-built UI components in `client/src/components/ui/`\n- **Layout**: Responsive grid system with Tailwind spacing scale (4, 6, 8, 12, 16, 20, 24, 32)\n\n**Component Architecture:**\n- Modular section-based components (`AboutSection.tsx`, `ServicesSection.tsx`, etc.)\n- Reusable UI primitives from Shadcn/ui\n- Example components in `client/src/components/examples/` for development reference\n- Path aliases configured for clean imports (`@/`, `@shared/`, `@assets/`)\n\n### Backend Architecture\n\n**Server Framework:**\n- Express.js with TypeScript\n- Minimal API structure currently in place (routes defined in `server/routes.ts`)\n- Custom logging middleware for request tracking\n- Error handling middleware\n\n**Storage Layer:**\n- Interface-based storage design (`IStorage` in `server/storage.ts`)\n- Current implementation uses in-memory storage (`MemStorage`)\n- Structured to support migration to database storage\n- Basic user management operations (create, retrieve by ID/username)\n\n**Build Process:**\n- Development: `tsx` for running TypeScript directly with hot reload\n- Production: Vite builds client, esbuild bundles server into ESM format\n- Static file serving handled by Vite in development, Express in production\n\n### Data Storage\n\n**Database Configuration:**\n- **ORM**: Drizzle ORM configured for PostgreSQL\n- **Provider**: Neon Database serverless driver (`@neondatabase/serverless`)\n- **Schema Location**: `shared/schema.ts` defines database tables\n- **Migrations**: Managed via Drizzle Kit, output to `./migrations`\n\n**Current Schema:**\n- Users table with UUID primary keys, username, and password fields\n- Zod schemas for validation using `drizzle-zod`\n- Schema is minimal and ready for expansion with clinic-specific entities (appointments, pets, medical records, etc.)\n\n**Note**: While Drizzle and PostgreSQL infrastructure is configured, the application currently uses in-memory storage. Database integration requires running migrations and updating the storage implementation.\n\n### Authentication & Authorization\n\nCurrently not implemented. The user schema exists but authentication flow (login, session management, JWT, etc.) is not built out. The storage interface includes basic user CRUD operations as foundation for future auth implementation.\n\n## External Dependencies\n\n### Third-Party Services\n\n**Google Fonts CDN:**\n- Rubik (weights: 400, 500, 600)\n- Poppins (weights: 300, 400, 600, 700)\n- Loaded in `client/index.html` header\n\n**Database:**\n- Neon Database (PostgreSQL-compatible serverless database)\n- Connection via `DATABASE_URL` environment variable\n- WebSocket-based connection using Neon's serverless driver\n\n### Key NPM Packages\n\n**UI & Styling:**\n- `@radix-ui/*` - Unstyled, accessible component primitives (20+ components)\n- `tailwindcss` - Utility-first CSS framework\n- `class-variance-authority` - Utility for creating variant-based component APIs\n- `framer-motion` - Animation library\n- `embla-carousel-react` - Carousel/slider functionality\n\n**Data & Forms:**\n- `@tanstack/react-query` - Server state management\n- `react-hook-form` - Form state and validation\n- `@hookform/resolvers` - Validation resolver for react-hook-form\n- `zod` - TypeScript-first schema validation\n- `drizzle-orm` & `drizzle-zod` - Database ORM and schema integration\n\n**Backend:**\n- `express` - Web server framework\n- `connect-pg-simple` - PostgreSQL session store for Express\n- `date-fns` - Date utility library\n\n**Email Services:**\n- `@microsoft/microsoft-graph-client` - Microsoft Graph API client for sending emails\n- `@azure/identity` - Azure authentication for Microsoft 365 integration\n- `nodemailer` - Email sending library (legacy, replaced by Graph API)\n\n**Development Tools:**\n- `@replit/*` plugins - Vite plugins for Replit environment (error overlay, dev banner, cartographer)\n- `tsx` - TypeScript execution for development\n- `esbuild` - Fast JavaScript bundler for production builds\n\n### Asset Management\n\nStatic assets (images) are stored in `attached_assets/` directory and accessed via the `@assets` path alias configured in Vite. The application currently uses generated veterinary-themed images for the hero slider and about section.\n\n## Recent Changes\n\n- **2025-10-15**: Email confirmation system implemented using Microsoft Graph API:\n  - Sends bilingual (Arabic/English) discount confirmation emails from info@drpaws-sa.com\n  - Beautiful HTML email template with gradient design matching brand colors\n  - Displays discount code (user's phone number) prominently in email\n  - Email includes offer details: 20% discount for 6 months, available at all Jeddah branches\n  - Azure App Registration configured with Mail.Send permission\n  - Automatic email sending upon successful registration\n  - Error handling: registration succeeds even if email fails\n- **2025-10-15**: Email field added to promotional modal:\n  - Required field with 50-character limit and live counter\n  - Email format validation\n  - Real-time duplicate email detection via debounced API check\n  - Saved to database with unique constraint\n- **2025-10-14**: Promotional modal enhancements: removed close button, made modal non-closable (no outside click/escape), added phone number exact length validation (must be 10 digits), character limits with live counters (firstName: 20, lastName: 20, phone: 10), real-time duplicate phone detection, in-modal language switcher with Globe icon\n- **2025-10-04**: Full homepage implementation with sticky header, hero slider, about section, services section, service packages, why choose us section, contact form, and footer\n- **2025-10-04**: All animations updated to trigger on every scroll (up/down) using framer-motion with once:false\n- **2025-10-04**: Dr. Paws logo downloaded and integrated into header\n- **2025-10-04**: Enhanced animations and hover effects across all sections\n- **2025-10-04**: Service Packages section completed with three tiers (Basic Care 299 SAR, Complete Care 599 SAR \"Most Popular\", Premium Care 999 SAR)\n- **2025-10-04**: \"Our Media\" section added below Service Packages with two clinic videos in professional frames with hover animations\n- **2025-10-04**: Animated paw icon added inline to the left of Service Packages heading using Lord Icon library - 90px size with loop animation every 1.5 seconds in brand colors\n- **2025-10-04**: Animated video/media icon added inline to the left of Our Media heading using Lord Icon library - 90px size with loop animation every 1.5 seconds in brand colors","size_bytes":8344},"client/src/custom-elements.d.ts":{"content":"declare namespace JSX {\n  interface IntrinsicElements {\n    'lord-icon': {\n      src?: string;\n      trigger?: string;\n      delay?: string;\n      state?: string;\n      stroke?: string;\n      colors?: string;\n      style?: React.CSSProperties;\n      'data-testid'?: string;\n      children?: React.ReactNode;\n    };\n  }\n}\n","size_bytes":321},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/examples/AboutSection.tsx":{"content":"import AboutSection from '../AboutSection';\n\nexport default function AboutSectionExample() {\n  return <AboutSection />;\n}\n","size_bytes":122},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/HeartbeatDivider.tsx":{"content":"export default function HeartbeatDivider() {\n  return (\n    <div className=\"my-10 w-full overflow-hidden\">\n      <div className=\"relative h-32 md:h-36 flex items-center justify-center\">\n        {/* Full-width heartbeat line background */}\n        <svg\n          className=\"w-full h-full absolute inset-0\"\n          viewBox=\"0 0 1200 140\"\n          preserveAspectRatio=\"xMidYMid meet\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <defs>\n            <pattern\n              id=\"ecg-pattern\"\n              x=\"0\"\n              y=\"0\"\n              width=\"400\"\n              height=\"140\"\n              patternUnits=\"userSpaceOnUse\"\n            >\n              <animateTransform\n                attributeName=\"patternTransform\"\n                type=\"translate\"\n                from=\"0 0\"\n                to=\"400 0\"\n                dur=\"12s\"\n                repeatCount=\"indefinite\"\n              />\n              <path\n                className=\"ecg-path\"\n                d=\"M0,70 L60,70 L65,65 L70,70 L75,70 L80,70 L85,50 L90,90 L95,70 L100,70 L105,75 L110,70 L115,70 L400,70\"\n                fill=\"none\"\n                stroke=\"#18ac61\"\n                strokeWidth=\"4\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              />\n            </pattern>\n          </defs>\n          \n          <rect\n            x=\"-400\"\n            y=\"0\"\n            width=\"2000\"\n            height=\"140\"\n            fill=\"url(#ecg-pattern)\"\n          />\n        </svg>\n      </div>\n      \n      <style>{`\n        @media (min-width: 768px) {\n          .ecg-path {\n            stroke-width: 2.5;\n          }\n        }\n      `}</style>\n    </div>\n  );\n}\n","size_bytes":1681},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"shadcn-card rounded-xl border bg-card border-card-border text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n));\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n));\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n));\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardDescription,\n  CardContent,\n}\n","size_bytes":1904},"client/src/components/examples/ServicesSection.tsx":{"content":"import ServicesSection from '../ServicesSection';\n\nexport default function ServicesSectionExample() {\n  return <ServicesSection />;\n}\n","size_bytes":134},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/WhyChooseUsSection.tsx":{"content":"import { HeartHandshake, Award, Building2, ClipboardCheck } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { motion } from 'framer-motion';\nimport { useInView } from 'framer-motion';\nimport { useRef } from 'react';\nimport { useLanguage } from '@/contexts/LanguageContext';\nimport { Link } from 'wouter';\n\nconst container = {\n  hidden: { opacity: 0 },\n  show: {\n    opacity: 1,\n    transition: {\n      staggerChildren: 0.15\n    }\n  }\n};\n\nconst item = {\n  hidden: { opacity: 0, x: -30 },\n  show: { opacity: 1, x: 0 }\n};\n\nexport default function WhyChooseUsSection() {\n  const ref = useRef(null);\n  const isInView = useInView(ref, { once: false, amount: 0.3 });\n  const { t } = useLanguage();\n\n  const features = [\n    {\n      icon: HeartHandshake,\n      title: t('why.reason1.title'),\n      description: t('why.reason1.description'),\n    },\n    {\n      icon: Award,\n      title: t('why.reason2.title'),\n      description: t('why.reason2.description'),\n    },\n    {\n      icon: Building2,\n      title: t('why.reason3.title'),\n      description: t('why.reason3.description'),\n    },\n    {\n      icon: ClipboardCheck,\n      title: t('why.reason4.title'),\n      description: t('why.reason4.description'),\n    },\n  ];\n\n  return (\n    <section ref={ref} className=\"py-20 bg-background\">\n      <div className=\"max-w-7xl mx-auto px-6\">\n        <motion.h2 \n          initial={{ opacity: 0, y: 30 }}\n          animate={isInView ? { opacity: 1, y: 0 } : {}}\n          transition={{ duration: 0.6 }}\n          className=\"font-display text-4xl font-medium text-foreground text-center mb-16\" \n          data-testid=\"text-why-choose-headline\"\n        >\n          {t('why.headline')}\n        </motion.h2>\n\n        <motion.div \n          variants={container}\n          initial=\"hidden\"\n          animate={isInView ? \"show\" : \"hidden\"}\n          className=\"grid md:grid-cols-2 gap-12 mb-12\"\n        >\n          {features.map((feature, index) => (\n            <motion.div \n              key={index} \n              variants={item}\n              whileHover={{ x: 10 }}\n              transition={{ duration: 0.3 }}\n              className=\"flex gap-6\" \n              data-testid={`feature-${index}`}\n            >\n              <div className=\"flex-shrink-0\">\n                <motion.div \n                  whileHover={{ rotate: 360, scale: 1.1 }}\n                  transition={{ duration: 0.6 }}\n                  className=\"w-16 h-16 rounded-lg bg-primary/10 flex items-center justify-center\"\n                >\n                  <feature.icon className=\"w-8 h-8 text-primary\" />\n                </motion.div>\n              </div>\n              <div>\n                <h3 className=\"text-xl font-semibold text-foreground mb-3\">{feature.title}</h3>\n                <p className=\"text-foreground/70 leading-relaxed\">{feature.description}</p>\n              </div>\n            </motion.div>\n          ))}\n        </motion.div>\n\n        <motion.div \n          initial={{ opacity: 0, y: 20 }}\n          animate={isInView ? { opacity: 1, y: 0 } : {}}\n          transition={{ duration: 0.6, delay: 0.6 }}\n          className=\"text-center\"\n        >\n          <Link href=\"/about\">\n            <motion.div\n              whileHover={{ scale: 1.05 }}\n              whileTap={{ scale: 0.95 }}\n            >\n              <Button variant=\"outline\" size=\"lg\" data-testid=\"button-read-more-why\">\n                {t('why.readMore')}\n              </Button>\n            </motion.div>\n          </Link>\n        </motion.div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":3547},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport { LanguageProvider } from \"@/contexts/LanguageContext\";\nimport AnimatedServicesBackground from \"@/components/AnimatedServicesBackground\";\nimport Home from \"@/pages/Home\";\nimport About from \"@/pages/About\";\nimport Services from \"@/pages/Services\";\nimport Blog from \"@/pages/Blog\";\nimport BookNow from \"@/pages/BookNow\";\nimport LoginAdmin from \"@/pages/LoginAdmin\";\nimport AdminDashboard from \"@/pages/AdminDashboard\";\nimport AdminServicePackages from \"@/pages/AdminServicePackages\";\nimport AdminCustomersReviews from \"@/pages/AdminCustomersReviews\";\nimport AdminOurDoctors from \"@/pages/AdminOurDoctors\";\nimport AdminOurPartners from \"@/pages/AdminOurPartners\";\nimport NotFound from \"@/pages/not-found\";\n\nfunction Router() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={Home} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/services\" component={Services} />\n      <Route path=\"/blog\" component={Blog} />\n      <Route path=\"/book-now\" component={BookNow} />\n      <Route path=\"/login-admin\" component={LoginAdmin} />\n      <Route path=\"/admin-dashboard\" component={AdminDashboard} />\n      <Route path=\"/admin/service-packages\" component={AdminServicePackages} />\n      <Route path=\"/admin/customers-reviews\" component={AdminCustomersReviews} />\n      <Route path=\"/admin/about/our-doctors\" component={AdminOurDoctors} />\n      <Route path=\"/admin/about/our-partners\" component={AdminOurPartners} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <LanguageProvider>\n        <TooltipProvider>\n          <AnimatedServicesBackground />\n          <Toaster />\n          <Router />\n        </TooltipProvider>\n      </LanguageProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":2077},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/examples/WhyChooseUsSection.tsx":{"content":"import WhyChooseUsSection from '../WhyChooseUsSection';\n\nexport default function WhyChooseUsSectionExample() {\n  return <WhyChooseUsSection />;\n}\n","size_bytes":146},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/examples/ServicePackagesSection.tsx":{"content":"import ServicePackagesSection from '../ServicePackagesSection';\n\nexport default function ServicePackagesSectionExample() {\n  return <ServicePackagesSection />;\n}\n","size_bytes":162},"client/src/components/ReviewsSection.tsx":{"content":"import { motion } from 'framer-motion';\nimport { useInView } from 'framer-motion';\nimport { useRef, useState } from 'react';\nimport { useQuery } from '@tanstack/react-query';\nimport { useLanguage } from '@/contexts/LanguageContext';\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';\nimport { Star } from 'lucide-react';\nimport { type CustomerReview } from '@shared/schema';\n\nexport default function ReviewsSection() {\n  const ref = useRef(null);\n  const isInView = useInView(ref, { once: false, amount: 0.2 });\n  const { t, language } = useLanguage();\n  const [isPaused, setIsPaused] = useState(false);\n\n  const { data: dbReviews = [], isLoading } = useQuery<CustomerReview[]>({\n    queryKey: [\"/api/customer-reviews\"],\n  });\n\n  const reviews = dbReviews.map(review => ({\n    id: review.id,\n    name: review.name,\n    avatar: `https://api.dicebear.com/7.x/avataaars/svg?seed=${review.name}`,\n    rating: review.rating,\n    text: review.message,\n  }));\n\n  const duplicatedReviews = reviews.length >= 4 ? [...reviews, ...reviews] : reviews;\n\n  const ReviewCard = ({ review }: { review: typeof reviews[0] }) => (\n    <div\n      className=\"p-6 rounded-lg border border-border bg-background hover-elevate flex-shrink-0 w-[300px]\"\n      data-testid={`review-card-${review.id}`}\n    >\n      <div className={`flex items-center gap-3 mb-4 ${language === 'ar' ? 'flex-row-reverse' : ''}`}>\n        <Avatar data-testid={`avatar-${review.id}`}>\n          <AvatarImage src={review.avatar} alt={review.name} />\n          <AvatarFallback>{review.name.split(' ').map(n => n[0]).join('')}</AvatarFallback>\n        </Avatar>\n        <div className={language === 'ar' ? 'text-right' : ''}>\n          <h3 className=\"font-semibold text-foreground\" data-testid={`name-${review.id}`}>\n            {review.name}\n          </h3>\n          <div className={`flex gap-0.5 ${language === 'ar' ? 'flex-row-reverse' : ''}`}>\n            {Array.from({ length: 5 }).map((_, i) => (\n              <Star\n                key={i}\n                className={`w-4 h-4 ${\n                  i < review.rating\n                    ? 'fill-[#e9c46a] text-[#e9c46a]'\n                    : 'fill-muted text-muted'\n                }`}\n                data-testid={`star-${review.id}-${i}`}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n      <p className={`text-foreground/80 text-sm leading-relaxed ${language === 'ar' ? 'text-right' : 'text-left'}`} data-testid={`text-${review.id}`}>\n        {review.text}\n      </p>\n    </div>\n  );\n\n  if (isLoading) {\n    return (\n      <section ref={ref} className=\"py-20 bg-card overflow-hidden\">\n        <div className=\"max-w-7xl mx-auto px-6\">\n          <h2 className=\"font-display text-4xl font-medium text-foreground text-center mb-16\">\n            {t('reviews.headline')}\n          </h2>\n          <p className=\"text-center text-muted-foreground\">Loading reviews...</p>\n        </div>\n      </section>\n    );\n  }\n\n  if (reviews.length === 0) {\n    return null;\n  }\n\n  return (\n    <section ref={ref} className=\"py-20 bg-card overflow-hidden\">\n      <div className=\"max-w-7xl mx-auto px-6\">\n        <motion.h2 \n          initial={{ opacity: 0, y: 30 }}\n          animate={isInView ? { opacity: 1, y: 0 } : {}}\n          transition={{ duration: 0.6 }}\n          className=\"font-display text-4xl font-medium text-foreground text-center mb-16\"\n          data-testid=\"text-reviews-headline\"\n        >\n          {t('reviews.headline')}\n        </motion.h2>\n        \n        <div \n          className=\"relative\"\n          onMouseEnter={() => setIsPaused(true)}\n          onMouseLeave={() => setIsPaused(false)}\n        >\n          {reviews.length >= 4 ? (\n            <motion.div\n              key={language}\n              className=\"flex gap-6\"\n              animate={{\n                x: isPaused ? undefined : [0, -((300 + 24) * duplicatedReviews.length / 2)],\n              }}\n              transition={{\n                x: {\n                  repeat: Infinity,\n                  repeatType: \"loop\",\n                  duration: 40,\n                  ease: \"linear\",\n                },\n              }}\n            >\n              {duplicatedReviews.map((review, index) => (\n                <ReviewCard key={`${review.id}-${index}`} review={review} />\n              ))}\n            </motion.div>\n          ) : (\n            <div className=\"flex gap-6 justify-center flex-wrap\">\n              {duplicatedReviews.map((review, index) => (\n                <ReviewCard key={`${review.id}-${index}`} review={review} />\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":4667},"client/src/components/ServicesSection.tsx":{"content":"import { Stethoscope, Heart, Syringe, Scissors, ClipboardList, Activity } from 'lucide-react';\nimport { Card, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { motion } from 'framer-motion';\nimport { useInView } from 'framer-motion';\nimport { useRef } from 'react';\nimport { useLanguage } from '@/contexts/LanguageContext';\nimport { Link } from 'wouter';\n\nconst container = {\n  hidden: { opacity: 0 },\n  show: {\n    opacity: 1,\n    transition: {\n      staggerChildren: 0.1\n    }\n  }\n};\n\nconst item = {\n  hidden: { opacity: 0, y: 20 },\n  show: { opacity: 1, y: 0 }\n};\n\nexport default function ServicesSection() {\n  const ref = useRef(null);\n  const isInView = useInView(ref, { once: false, amount: 0.2 });\n  const { t } = useLanguage();\n\n  const services = [\n    {\n      icon: Stethoscope,\n      title: t('services.wellness.title'),\n      description: t('services.wellness.description'),\n    },\n    {\n      icon: Heart,\n      title: t('services.emergency.title'),\n      description: t('services.emergency.description'),\n    },\n    {\n      icon: Syringe,\n      title: t('services.vaccinations.title'),\n      description: t('services.vaccinations.description'),\n    },\n    {\n      icon: Scissors,\n      title: t('services.surgery.title'),\n      description: t('services.surgery.description'),\n    },\n    {\n      icon: Activity,\n      title: t('services.diagnostics.title'),\n      description: t('services.diagnostics.description'),\n    },\n    {\n      icon: ClipboardList,\n      title: t('services.dental.title'),\n      description: t('services.dental.description'),\n    },\n  ];\n\n  return (\n    <section ref={ref} className=\"py-20 bg-[hsl(43,75%,66%)]/5\">\n      <div className=\"max-w-7xl mx-auto px-6\">\n        <motion.div \n          initial={{ opacity: 0, y: 30 }}\n          animate={isInView ? { opacity: 1, y: 0 } : {}}\n          transition={{ duration: 0.6 }}\n          className=\"text-center mb-16\"\n        >\n          <h2 className=\"font-display text-4xl font-medium text-foreground mb-4\" data-testid=\"text-services-headline\">\n            {t('services.headline')}\n          </h2>\n          <p className=\"text-lg text-foreground/80 max-w-3xl mx-auto\" data-testid=\"text-services-description\">\n            {t('services.description')}\n          </p>\n        </motion.div>\n\n        <motion.div \n          variants={container}\n          initial=\"hidden\"\n          animate={isInView ? \"show\" : \"hidden\"}\n          className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8 mb-12\"\n        >\n          {services.map((service, index) => (\n            <motion.div key={index} variants={item}>\n              <motion.div\n                whileHover={{ y: -8, transition: { duration: 0.3 } }}\n              >\n                <Card className=\"h-full hover-elevate\" data-testid={`card-service-${index}`}>\n                  <CardHeader>\n                    <motion.div \n                      className=\"mb-4\"\n                      whileHover={{ rotate: 360, scale: 1.1 }}\n                      transition={{ duration: 0.6 }}\n                    >\n                      <service.icon className=\"w-12 h-12 text-[hsl(27,87%,67%)]\" />\n                    </motion.div>\n                    <CardTitle className=\"text-xl mb-2\">{service.title}</CardTitle>\n                    <CardDescription className=\"text-base\">{service.description}</CardDescription>\n                  </CardHeader>\n                </Card>\n              </motion.div>\n            </motion.div>\n          ))}\n        </motion.div>\n\n        <motion.div \n          initial={{ opacity: 0, y: 20 }}\n          animate={isInView ? { opacity: 1, y: 0 } : {}}\n          transition={{ duration: 0.6, delay: 0.6 }}\n          className=\"text-center\"\n        >\n          <Link href=\"/services\">\n            <motion.div\n              whileHover={{ scale: 1.05 }}\n              whileTap={{ scale: 0.95 }}\n            >\n              <Button size=\"lg\" data-testid=\"button-read-more-services\">\n                {t('services.readMore')}\n              </Button>\n            </motion.div>\n          </Link>\n        </motion.div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":4162},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/pages/Home.tsx":{"content":"import { useState, useEffect } from 'react';\nimport Header from '@/components/Header';\nimport ECGAnimation from '@/components/ECGAnimation';\nimport HeroSlider from '@/components/HeroSlider';\nimport AboutSection from '@/components/AboutSection';\nimport ServicesSection from '@/components/ServicesSection';\nimport ServicePackagesSection from '@/components/ServicePackagesSection';\nimport MediaSection from '@/components/MediaSection';\nimport WhyChooseUsSection from '@/components/WhyChooseUsSection';\nimport ReviewsSection from '@/components/ReviewsSection';\nimport ContactSection from '@/components/ContactSection';\nimport HeartbeatDivider from '@/components/HeartbeatDivider';\nimport Footer from '@/components/Footer';\nimport PromotionalModal from '@/components/PromotionalModal';\n\nexport default function Home() {\n  const [showPromoModal, setShowPromoModal] = useState(false);\n\n  useEffect(() => {\n    const hasSeenModal = localStorage.getItem('hasSeenPromoModal');\n    \n    if (!hasSeenModal) {\n      const timer = setTimeout(() => {\n        setShowPromoModal(true);\n      }, 1500);\n      return () => clearTimeout(timer);\n    }\n  }, []);\n\n  const handleClosePromo = () => {\n    setShowPromoModal(false);\n  };\n\n  return (\n    <div className=\"min-h-screen\">\n      <Header />\n      <ECGAnimation />\n      <HeroSlider />\n      <div id=\"about\">\n        <AboutSection />\n      </div>\n      <div id=\"services\">\n        <ServicesSection />\n        <ServicePackagesSection />\n      </div>\n      <MediaSection />\n      <WhyChooseUsSection />\n      <ReviewsSection />\n      <ContactSection />\n      <HeartbeatDivider />\n      <Footer />\n      \n      <PromotionalModal open={showPromoModal} onClose={handleClosePromo} />\n    </div>\n  );\n}\n","size_bytes":1730},"server/storage.ts":{"content":"import { type User, type InsertUser, type ServicePackage, type InsertServicePackage, type CustomerReview, type InsertCustomerReview, type Partner, type InsertPartner, type OpeningDiscount, type InsertOpeningDiscount } from \"@shared/schema\";\nimport { randomUUID } from \"crypto\";\n\n// modify the interface with any CRUD methods\n// you might need\n\nexport interface IStorage {\n  getUser(id: string): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n  \n  // Service Packages\n  getAllServicePackages(): Promise<ServicePackage[]>;\n  getServicePackage(id: number): Promise<ServicePackage | undefined>;\n  createServicePackage(pkg: InsertServicePackage): Promise<ServicePackage>;\n  updateServicePackage(id: number, pkg: Partial<InsertServicePackage>): Promise<ServicePackage | undefined>;\n  deleteServicePackage(id: number): Promise<boolean>;\n\n  // Customer Reviews\n  getAllCustomerReviews(): Promise<CustomerReview[]>;\n  getCustomerReview(id: number): Promise<CustomerReview | undefined>;\n  createCustomerReview(review: InsertCustomerReview): Promise<CustomerReview>;\n  updateCustomerReview(id: number, review: Partial<InsertCustomerReview>): Promise<CustomerReview | undefined>;\n  deleteCustomerReview(id: number): Promise<boolean>;\n\n  // Partners\n  getAllPartners(): Promise<Partner[]>;\n  getPartner(id: number): Promise<Partner | undefined>;\n  createPartner(partner: InsertPartner): Promise<Partner>;\n  updatePartner(id: number, partner: Partial<InsertPartner>): Promise<Partner | undefined>;\n  deletePartner(id: number): Promise<boolean>;\n\n  // Opening Discount\n  createOpeningDiscount(discount: InsertOpeningDiscount): Promise<OpeningDiscount>;\n  checkPhoneNumberExists(phoneNumber: string): Promise<boolean>;\n  checkEmailExists(email: string): Promise<boolean>;\n}\n\nexport class MemStorage implements IStorage {\n  private users: Map<string, User>;\n  private packages: Map<number, ServicePackage>;\n  private nextPackageId: number;\n\n  constructor() {\n    this.users = new Map();\n    this.packages = new Map();\n    this.nextPackageId = 1;\n  }\n\n  async getUser(id: string): Promise<User | undefined> {\n    return this.users.get(id);\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(\n      (user) => user.username === username,\n    );\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const id = randomUUID();\n    const user: User = { ...insertUser, id };\n    this.users.set(id, user);\n    return user;\n  }\n\n  async getAllServicePackages(): Promise<ServicePackage[]> {\n    return Array.from(this.packages.values());\n  }\n\n  async getServicePackage(id: number): Promise<ServicePackage | undefined> {\n    return this.packages.get(id);\n  }\n\n  async createServicePackage(pkg: InsertServicePackage): Promise<ServicePackage> {\n    const id = this.nextPackageId++;\n    const servicePackage: ServicePackage = { \n      ...pkg, \n      id,\n      popular: pkg.popular ?? false \n    };\n    this.packages.set(id, servicePackage);\n    return servicePackage;\n  }\n\n  async updateServicePackage(id: number, pkg: Partial<InsertServicePackage>): Promise<ServicePackage | undefined> {\n    const existing = this.packages.get(id);\n    if (!existing) return undefined;\n    const updated = { ...existing, ...pkg };\n    this.packages.set(id, updated);\n    return updated;\n  }\n\n  async deleteServicePackage(id: number): Promise<boolean> {\n    return this.packages.delete(id);\n  }\n\n  async getAllCustomerReviews(): Promise<CustomerReview[]> {\n    throw new Error(\"Not implemented\");\n  }\n\n  async getCustomerReview(id: number): Promise<CustomerReview | undefined> {\n    throw new Error(\"Not implemented\");\n  }\n\n  async createCustomerReview(review: InsertCustomerReview): Promise<CustomerReview> {\n    throw new Error(\"Not implemented\");\n  }\n\n  async updateCustomerReview(id: number, review: Partial<InsertCustomerReview>): Promise<CustomerReview | undefined> {\n    throw new Error(\"Not implemented\");\n  }\n\n  async deleteCustomerReview(id: number): Promise<boolean> {\n    throw new Error(\"Not implemented\");\n  }\n\n  async getAllPartners(): Promise<Partner[]> {\n    throw new Error(\"Not implemented\");\n  }\n\n  async getPartner(id: number): Promise<Partner | undefined> {\n    throw new Error(\"Not implemented\");\n  }\n\n  async createPartner(partner: InsertPartner): Promise<Partner> {\n    throw new Error(\"Not implemented\");\n  }\n\n  async updatePartner(id: number, partner: Partial<InsertPartner>): Promise<Partner | undefined> {\n    throw new Error(\"Not implemented\");\n  }\n\n  async deletePartner(id: number): Promise<boolean> {\n    throw new Error(\"Not implemented\");\n  }\n\n  async createOpeningDiscount(discount: InsertOpeningDiscount): Promise<OpeningDiscount> {\n    throw new Error(\"Not implemented\");\n  }\n\n  async checkPhoneNumberExists(phoneNumber: string): Promise<boolean> {\n    throw new Error(\"Not implemented\");\n  }\n\n  async checkEmailExists(email: string): Promise<boolean> {\n    throw new Error(\"Not implemented\");\n  }\n}\n\n// Use database storage\nimport { storage as dbStorage } from \"./db-storage\";\nexport const storage = dbStorage;\n","size_bytes":5184},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(`\n      after:content-[''] after:block after:absolute after:inset-0 after:rounded-full after:pointer-events-none after:border after:border-black/10 dark:after:border-white/10\n      relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full`,\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1592},"client/src/components/HeroSlider.tsx":{"content":"import { useState, useEffect } from 'react';\nimport { ChevronLeft, ChevronRight } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { useLanguage } from '@/contexts/LanguageContext';\nimport { useLocation } from 'wouter';\nimport heroImage1 from '@assets/generated_images/Vet_examining_golden_retriever_19654044.png';\nimport heroImage2 from '@assets/generated_images/Vet_consultation_with_cat_owner_7978144f.png';\nimport heroImage3 from '@assets/generated_images/Modern_veterinary_equipment_room_49dc6345.png';\n\nconst slides = [\n  { image: heroImage1, alt: 'Veterinarian examining golden retriever' },\n  { image: heroImage2, alt: 'Vet consultation with cat owner' },\n  { image: heroImage3, alt: 'Modern veterinary equipment' },\n];\n\nexport default function HeroSlider() {\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const { t } = useLanguage();\n  const [, setLocation] = useLocation();\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCurrentSlide((prev) => (prev + 1) % slides.length);\n    }, 6000);\n    return () => clearInterval(timer);\n  }, []);\n\n  const nextSlide = () => {\n    setCurrentSlide((prev) => (prev + 1) % slides.length);\n  };\n\n  const prevSlide = () => {\n    setCurrentSlide((prev) => (prev - 1 + slides.length) % slides.length);\n  };\n\n  return (\n    <div className=\"relative h-[85vh] overflow-hidden\">\n      <AnimatePresence mode=\"wait\">\n        {slides.map((slide, index) => (\n          index === currentSlide && (\n            <motion.div\n              key={index}\n              initial={{ opacity: 0, scale: 1.1 }}\n              animate={{ opacity: 1, scale: 1 }}\n              exit={{ opacity: 0, scale: 0.95 }}\n              transition={{ duration: 1, ease: \"easeInOut\" }}\n              className=\"absolute inset-0\"\n            >\n              <img\n                src={slide.image}\n                alt={slide.alt}\n                className=\"w-full h-full object-cover\"\n              />\n              <div className=\"absolute inset-0 bg-gradient-to-r from-[hsl(199,37%,24%)]/70 to-[hsl(199,37%,24%)]/40\" />\n            </motion.div>\n          )\n        ))}\n      </AnimatePresence>\n\n      <div className=\"absolute inset-0 flex items-center justify-center\">\n        <div className=\"max-w-4xl mx-auto px-6 text-center text-white\">\n          <motion.h1 \n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8, delay: 0.2 }}\n            className=\"font-display text-5xl md:text-6xl font-medium mb-4\" \n            data-testid=\"text-hero-headline\"\n          >\n            {t('hero.headline')}\n          </motion.h1>\n          <motion.p \n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8, delay: 0.4 }}\n            className=\"text-2xl md:text-3xl mb-3 opacity-90\" \n            data-testid=\"text-hero-subheadline\"\n          >\n            {t('hero.tagline')}\n          </motion.p>\n          <motion.p \n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8, delay: 0.6 }}\n            className=\"text-lg md:text-xl mb-8 opacity-80\" \n            data-testid=\"text-hero-subtext\"\n          >\n            {t('hero.subheadline')}\n          </motion.p>\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8, delay: 0.8 }}\n          >\n            <Button\n              size=\"lg\"\n              className=\"px-8 py-6 text-lg transition-transform hover:scale-105\"\n              onClick={() => setLocation('/book-now')}\n              data-testid=\"button-book-appointment\"\n            >\n              {t('hero.cta')}\n            </Button>\n          </motion.div>\n        </div>\n      </div>\n\n      <motion.button\n        whileHover={{ scale: 1.1 }}\n        whileTap={{ scale: 0.95 }}\n        onClick={prevSlide}\n        className=\"absolute left-4 top-1/2 -translate-y-1/2 p-2 rounded-full bg-white/20 hover-elevate active-elevate-2 text-white backdrop-blur-sm transition-all\"\n        data-testid=\"button-prev-slide\"\n        aria-label=\"Previous slide\"\n      >\n        <ChevronLeft className=\"w-6 h-6\" />\n      </motion.button>\n      <motion.button\n        whileHover={{ scale: 1.1 }}\n        whileTap={{ scale: 0.95 }}\n        onClick={nextSlide}\n        className=\"absolute right-4 top-1/2 -translate-y-1/2 p-2 rounded-full bg-white/20 hover-elevate active-elevate-2 text-white backdrop-blur-sm transition-all\"\n        data-testid=\"button-next-slide\"\n        aria-label=\"Next slide\"\n      >\n        <ChevronRight className=\"w-6 h-6\" />\n      </motion.button>\n\n      <div className=\"absolute bottom-8 left-1/2 -translate-x-1/2 flex gap-2\">\n        {slides.map((_, index) => (\n          <motion.button\n            key={index}\n            whileHover={{ scale: 1.2 }}\n            whileTap={{ scale: 0.9 }}\n            onClick={() => setCurrentSlide(index)}\n            className={`h-3 rounded-full transition-all duration-500 ${\n              index === currentSlide ? 'bg-white w-8' : 'bg-white/50 w-3'\n            }`}\n            data-testid={`button-slide-indicator-${index}`}\n            aria-label={`Go to slide ${index + 1}`}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n","size_bytes":5412},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \".5625rem\", /* 9px */\n        md: \".375rem\", /* 6px */\n        sm: \".1875rem\", /* 3px */\n      },\n      colors: {\n        // Flat / base colors (regular buttons)\n        background: \"hsl(var(--background) / <alpha-value>)\",\n        foreground: \"hsl(var(--foreground) / <alpha-value>)\",\n        border: \"hsl(var(--border) / <alpha-value>)\",\n        input: \"hsl(var(--input) / <alpha-value>)\",\n        card: {\n          DEFAULT: \"hsl(var(--card) / <alpha-value>)\",\n          foreground: \"hsl(var(--card-foreground) / <alpha-value>)\",\n          border: \"hsl(var(--card-border) / <alpha-value>)\",\n        },\n        popover: {\n          DEFAULT: \"hsl(var(--popover) / <alpha-value>)\",\n          foreground: \"hsl(var(--popover-foreground) / <alpha-value>)\",\n          border: \"hsl(var(--popover-border) / <alpha-value>)\",\n        },\n        primary: {\n          DEFAULT: \"hsl(var(--primary) / <alpha-value>)\",\n          foreground: \"hsl(var(--primary-foreground) / <alpha-value>)\",\n          border: \"var(--primary-border)\",\n        },\n        secondary: {\n          DEFAULT: \"hsl(var(--secondary) / <alpha-value>)\",\n          foreground: \"hsl(var(--secondary-foreground) / <alpha-value>)\",\n          border: \"var(--secondary-border)\",\n        },\n        muted: {\n          DEFAULT: \"hsl(var(--muted) / <alpha-value>)\",\n          foreground: \"hsl(var(--muted-foreground) / <alpha-value>)\",\n          border: \"var(--muted-border)\",\n        },\n        accent: {\n          DEFAULT: \"hsl(var(--accent) / <alpha-value>)\",\n          foreground: \"hsl(var(--accent-foreground) / <alpha-value>)\",\n          border: \"var(--accent-border)\",\n        },\n        destructive: {\n          DEFAULT: \"hsl(var(--destructive) / <alpha-value>)\",\n          foreground: \"hsl(var(--destructive-foreground) / <alpha-value>)\",\n          border: \"var(--destructive-border)\",\n        },\n        ring: \"hsl(var(--ring) / <alpha-value>)\",\n        chart: {\n          \"1\": \"hsl(var(--chart-1) / <alpha-value>)\",\n          \"2\": \"hsl(var(--chart-2) / <alpha-value>)\",\n          \"3\": \"hsl(var(--chart-3) / <alpha-value>)\",\n          \"4\": \"hsl(var(--chart-4) / <alpha-value>)\",\n          \"5\": \"hsl(var(--chart-5) / <alpha-value>)\",\n        },\n        sidebar: {\n          ring: \"hsl(var(--sidebar-ring) / <alpha-value>)\",\n          DEFAULT: \"hsl(var(--sidebar) / <alpha-value>)\",\n          foreground: \"hsl(var(--sidebar-foreground) / <alpha-value>)\",\n          border: \"hsl(var(--sidebar-border) / <alpha-value>)\",\n        },\n        \"sidebar-primary\": {\n          DEFAULT: \"hsl(var(--sidebar-primary) / <alpha-value>)\",\n          foreground: \"hsl(var(--sidebar-primary-foreground) / <alpha-value>)\",\n          border: \"var(--sidebar-primary-border)\",\n        },\n        \"sidebar-accent\": {\n          DEFAULT: \"hsl(var(--sidebar-accent) / <alpha-value>)\",\n          foreground: \"hsl(var(--sidebar-accent-foreground) / <alpha-value>)\",\n          border: \"var(--sidebar-accent-border)\"\n        },\n        status: {\n          online: \"rgb(34 197 94)\",\n          away: \"rgb(245 158 11)\",\n          busy: \"rgb(239 68 68)\",\n          offline: \"rgb(156 163 175)\",\n        },\n      },\n      fontFamily: {\n        sans: [\"var(--font-sans)\"],\n        serif: [\"var(--font-serif)\"],\n        mono: [\"var(--font-mono)\"],\n        display: [\"var(--font-display)\"],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: { height: \"0\" },\n          to: { height: \"var(--radix-accordion-content-height)\" },\n        },\n        \"accordion-up\": {\n          from: { height: \"var(--radix-accordion-content-height)\" },\n          to: { height: \"0\" },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":4092},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    // h-9 to match icon buttons and default buttons.\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":844},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/examples/Header.tsx":{"content":"import Header from '../Header';\n\nexport default function HeaderExample() {\n  return <Header />;\n}\n","size_bytes":98},"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json({ limit: '10mb' }));\napp.use(express.urlencoded({ extended: false, limit: '10mb' }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2098},"client/src/components/MediaSection.tsx":{"content":"import { motion } from 'framer-motion';\nimport { useInView } from 'framer-motion';\nimport { useRef, useState, useCallback, useEffect } from 'react';\nimport { useLanguage } from '@/contexts/LanguageContext';\nimport { Play, Pause } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport useEmblaCarousel from 'embla-carousel-react';\n\nconst container = {\n  hidden: { opacity: 0 },\n  show: {\n    opacity: 1,\n    transition: {\n      staggerChildren: 0.2\n    }\n  }\n};\n\nconst tiktokVideos = [\n  { id: '7552593633812303122', title: 'Dr. Paws TikTok Video 1' },\n  { id: '7557361343527963911', title: 'Dr. Paws TikTok Video 2' },\n  { id: '7552940508834811143', title: 'Dr. Paws TikTok Video 3' },\n  { id: '7553295576721263879', title: 'Dr. Paws TikTok Video 4' },\n  { id: '7556635120439233810', title: 'Dr. Paws TikTok Video 5' },\n  { id: '7559220822280310024', title: 'Dr. Paws TikTok Video 6' },\n  { id: '7558145357599739144', title: 'Dr. Paws TikTok Video 7' },\n  { id: '7557789738485288210', title: 'Dr. Paws TikTok Video 8' },\n  { id: '7554400143768898834', title: 'Dr. Paws TikTok Video 9' }\n];\n\nexport default function MediaSection() {\n  const ref = useRef(null);\n  const tiktokIframeRefs = useRef<(HTMLIFrameElement | null)[]>([]);\n  const [isPlaying, setIsPlaying] = useState<boolean[]>(tiktokVideos.map(() => false));\n  const [emblaRef, emblaApi] = useEmblaCarousel({ loop: true });\n  const [selectedIndex, setSelectedIndex] = useState(0);\n  const isInView = useInView(ref, { once: false, amount: 0.2 });\n  const { t } = useLanguage();\n\n  const pauseAllVideos = useCallback(() => {\n    tiktokIframeRefs.current.forEach((iframe) => {\n      if (iframe) {\n        iframe.contentWindow?.postMessage({\n          'x-tiktok-player': true,\n          'type': 'pause'\n        }, '*');\n      }\n    });\n    setIsPlaying(tiktokVideos.map(() => false));\n  }, []);\n\n  const onSelect = useCallback(() => {\n    if (!emblaApi) return;\n    const newIndex = emblaApi.selectedScrollSnap();\n    if (newIndex !== selectedIndex) {\n      pauseAllVideos();\n    }\n    setSelectedIndex(newIndex);\n  }, [emblaApi, selectedIndex, pauseAllVideos]);\n\n  useEffect(() => {\n    if (!emblaApi) return;\n    onSelect();\n    emblaApi.on('select', onSelect);\n    return () => {\n      emblaApi.off('select', onSelect);\n    };\n  }, [emblaApi, onSelect]);\n\n  const handlePlayPause = (index: number) => {\n    const iframe = tiktokIframeRefs.current[index];\n    if (iframe) {\n      const newPlayingState = !isPlaying[index];\n      \n      if (newPlayingState) {\n        pauseAllVideos();\n      }\n      \n      const message = {\n        'x-tiktok-player': true,\n        'type': newPlayingState ? 'play' : 'pause'\n      };\n      iframe.contentWindow?.postMessage(message, '*');\n      \n      setIsPlaying(prev => {\n        const newState = [...prev];\n        newState[index] = newPlayingState;\n        return newState;\n      });\n    }\n  };\n\n  return (\n    <section ref={ref} className=\"py-20 bg-[hsl(43,75%,66%)]/5\">\n      <div className=\"max-w-7xl mx-auto px-6\">\n        <motion.div \n          initial={{ opacity: 0, y: 30 }}\n          animate={isInView ? { opacity: 1, y: 0 } : {}}\n          transition={{ duration: 0.6 }}\n          className=\"text-center mb-16\"\n        >\n          <div className=\"flex items-center justify-center gap-4 mb-4\">\n            <lord-icon\n              src=\"https://cdn.lordicon.com/ldyubhgs.json\"\n              trigger=\"loop\"\n              delay=\"1500\"\n              colors=\"primary:#18ac61,secondary:#264653\"\n              style={{width: '90px', height: '90px'}}\n              data-testid=\"icon-media-animated\">\n            </lord-icon>\n            <h2 className=\"font-display text-4xl font-medium text-foreground\" data-testid=\"text-media-headline\">\n              {t('media.headline')}\n            </h2>\n          </div>\n          <p className=\"text-lg text-foreground/80 max-w-3xl mx-auto\" data-testid=\"text-media-description\">\n            {t('media.description')}\n          </p>\n        </motion.div>\n\n        <motion.div \n          variants={container}\n          initial=\"hidden\"\n          animate={isInView ? \"show\" : \"hidden\"}\n          className=\"flex justify-center\"\n        >\n          <div className=\"relative mx-auto w-80\">\n            <div className=\"overflow-hidden rounded-xl cursor-grab active:cursor-grabbing\" ref={emblaRef}>\n              <div className=\"flex\" style={{ touchAction: 'pan-y pinch-zoom' }}>\n                {tiktokVideos.map((video, index) => (\n                  <div key={video.id} className=\"flex-[0_0_100%] min-w-0\">\n                    <div className=\"relative group px-2\">\n                      <div className=\"relative rounded-xl overflow-hidden shadow-lg bg-card border border-border\">\n                        <div className=\"w-full h-[500px] overflow-hidden\">\n                          <iframe\n                            ref={(el) => (tiktokIframeRefs.current[index] = el)}\n                            src={`https://www.tiktok.com/player/v1/${video.id}?controls=1`}\n                            className=\"w-full h-full pointer-events-none\"\n                            frameBorder=\"0\"\n                            scrolling=\"no\"\n                            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                            allowFullScreen\n                            title={video.title}\n                            data-testid={`video-tiktok-${index + 1}`}\n                            style={{ overflow: 'hidden' }}\n                          />\n                        </div>\n                        <div className=\"absolute bottom-4 left-1/2 transform -translate-x-1/2 z-10\">\n                          <Button\n                            size=\"icon\"\n                            variant=\"default\"\n                            onClick={() => handlePlayPause(index)}\n                            className=\"rounded-full shadow-lg pointer-events-auto\"\n                            data-testid={`button-tiktok-play-pause-${index + 1}`}\n                          >\n                            {isPlaying[index] ? <Pause className=\"w-5 h-5\" /> : <Play className=\"w-5 h-5\" />}\n                          </Button>\n                        </div>\n                        <div className=\"absolute inset-0 bg-gradient-to-t from-black/20 to-transparent pointer-events-none opacity-0 group-hover:opacity-100 transition-opacity duration-300\"></div>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            <div className=\"flex justify-center gap-2 mt-4\">\n              {tiktokVideos.map((_, index) => (\n                <button\n                  key={index}\n                  onClick={() => {\n                    pauseAllVideos();\n                    emblaApi?.scrollTo(index);\n                  }}\n                  className={`w-2 h-2 rounded-full transition-all ${\n                    index === selectedIndex\n                      ? 'bg-primary w-6'\n                      : 'bg-primary/30'\n                  }`}\n                  data-testid={`button-carousel-dot-${index + 1}`}\n                />\n              ))}\n            </div>\n          </div>\n        </motion.div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":7292},"client/src/components/ContactSection.tsx":{"content":"import { useState, useRef } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\nimport { useToast } from '@/hooks/use-toast';\nimport { useLanguage } from '@/contexts/LanguageContext';\nimport { motion, useInView } from 'framer-motion';\n\nconst container = {\n  hidden: { opacity: 0 },\n  show: {\n    opacity: 1,\n    transition: {\n      staggerChildren: 0.1\n    }\n  }\n};\n\nconst item = {\n  hidden: { opacity: 0, y: 20 },\n  show: { opacity: 1, y: 0 }\n};\n\nexport default function ContactSection() {\n  const { toast } = useToast();\n  const { t } = useLanguage();\n  const ref = useRef(null);\n  const isInView = useInView(ref, { once: false, amount: 0.2 });\n  const [formData, setFormData] = useState({\n    name: '',\n    phone: '',\n    email: '',\n    message: '',\n  });\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    console.log('Form submitted:', formData);\n    toast({\n      title: t('contact.success'),\n      description: '',\n    });\n    setFormData({ name: '', phone: '', email: '', message: '' });\n  };\n\n  return (\n    <section ref={ref} id=\"contact\" className=\"py-20 bg-[hsl(199,37%,24%)]\">\n      <div className=\"max-w-7xl mx-auto px-6\">\n        <motion.h2 \n          initial={{ opacity: 0, y: 30 }}\n          animate={isInView ? { opacity: 1, y: 0 } : {}}\n          transition={{ duration: 0.6 }}\n          className=\"font-display text-4xl font-medium text-white text-center mb-16\" \n          data-testid=\"text-contact-headline\"\n        >\n          {t('contact.subheadline')}\n        </motion.h2>\n\n        <div className=\"max-w-2xl mx-auto\">\n          <motion.form \n            variants={container}\n            initial=\"hidden\"\n            animate={isInView ? \"show\" : \"hidden\"}\n            onSubmit={handleSubmit} \n            className=\"space-y-6\"\n          >\n            <motion.div variants={item}>\n              <label className=\"block text-white/90 mb-2 font-medium\" htmlFor=\"name\">\n                {t('contact.name')}\n              </label>\n              <Input\n                id=\"name\"\n                type=\"text\"\n                value={formData.name}\n                onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n                className=\"bg-white transition-all focus:scale-[1.01]\"\n                required\n                data-testid=\"input-name\"\n              />\n            </motion.div>\n\n            <motion.div variants={item}>\n              <label className=\"block text-white/90 mb-2 font-medium\" htmlFor=\"phone\">\n                {t('contact.phone')}\n              </label>\n              <Input\n                id=\"phone\"\n                type=\"tel\"\n                value={formData.phone}\n                onChange={(e) => setFormData({ ...formData, phone: e.target.value })}\n                className=\"bg-white transition-all focus:scale-[1.01]\"\n                required\n                data-testid=\"input-phone\"\n              />\n            </motion.div>\n\n            <motion.div variants={item}>\n              <label className=\"block text-white/90 mb-2 font-medium\" htmlFor=\"email\">\n                {t('contact.email')}\n              </label>\n              <Input\n                id=\"email\"\n                type=\"email\"\n                value={formData.email}\n                onChange={(e) => setFormData({ ...formData, email: e.target.value })}\n                className=\"bg-white transition-all focus:scale-[1.01]\"\n                required\n                data-testid=\"input-email\"\n              />\n            </motion.div>\n\n            <motion.div variants={item}>\n              <label className=\"block text-white/90 mb-2 font-medium\" htmlFor=\"message\">\n                {t('contact.message')}\n              </label>\n              <Textarea\n                id=\"message\"\n                value={formData.message}\n                onChange={(e) => setFormData({ ...formData, message: e.target.value })}\n                className=\"bg-white min-h-32 transition-all focus:scale-[1.01]\"\n                required\n                data-testid=\"input-message\"\n              />\n            </motion.div>\n\n            <motion.div \n              variants={item}\n              whileHover={{ scale: 1.02 }}\n              whileTap={{ scale: 0.98 }}\n            >\n              <Button type=\"submit\" size=\"lg\" className=\"w-full\" data-testid=\"button-submit\">\n                {t('contact.submit')}\n              </Button>\n            </motion.div>\n          </motion.form>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":4584},"client/src/components/AboutSection.tsx":{"content":"import { Button } from '@/components/ui/button';\nimport { motion } from 'framer-motion';\nimport { useInView } from 'framer-motion';\nimport { useRef } from 'react';\nimport { useLanguage } from '@/contexts/LanguageContext';\nimport { useLocation } from 'wouter';\nimport teamImage from '@assets/generated_images/Veterinary_team_professional_photo_a4845f6b.png';\n\nexport default function AboutSection() {\n  const ref = useRef(null);\n  const isInView = useInView(ref, { once: false, amount: 0.3 });\n  const { t, language } = useLanguage();\n  const [, setLocation] = useLocation();\n\n  return (\n    <section ref={ref} className=\"py-20 bg-background\">\n      <div className=\"max-w-7xl mx-auto px-6\">\n        <div className=\"grid md:grid-cols-2 gap-12 items-center\">\n          <motion.div\n            initial={{ opacity: 0, x: -50 }}\n            animate={isInView ? { opacity: 1, x: 0 } : {}}\n            transition={{ duration: 0.8 }}\n          >\n            <motion.img\n              whileHover={{ scale: 1.02 }}\n              transition={{ duration: 0.3 }}\n              src={teamImage}\n              alt=\"Dr. Paws veterinary team\"\n              className=\"rounded-xl w-full h-auto object-cover shadow-md\"\n              data-testid=\"img-about-team\"\n            />\n          </motion.div>\n          <motion.div\n            initial={{ opacity: 0, x: 50 }}\n            animate={isInView ? { opacity: 1, x: 0 } : {}}\n            transition={{ duration: 0.8, delay: 0.2 }}\n          >\n            <h2 className=\"font-display text-4xl font-medium text-foreground mb-6\" data-testid=\"text-about-headline\">\n              {language === 'ar' ? (\n                <>\n                  {t('about.headline').split(':')[0]}:\n                  <br />\n                  {t('about.headline').split(':')[1]}\n                </>\n              ) : (\n                <>\n                  Committed to Your Pet's <span className=\"whitespace-nowrap\">Well-being,</span>\n                  <br />\n                  Every Step of the Way\n                </>\n              )}\n            </h2>\n            <p className=\"text-lg text-foreground/80 leading-relaxed mb-8\" data-testid=\"text-about-paragraph\">\n              {t('about.description')}\n            </p>\n            <motion.div\n              whileHover={{ scale: 1.05 }}\n              whileTap={{ scale: 0.95 }}\n            >\n              <Button \n                variant=\"outline\" \n                size=\"lg\" \n                onClick={() => setLocation('/about')}\n                data-testid=\"button-read-more-about\"\n              >\n                {t('about.readMore')}\n              </Button>\n            </motion.div>\n          </motion.div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":2715},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/AdminSidebar.tsx":{"content":"import { useState, useEffect } from 'react';\nimport { Home, ChevronDown, Package, MessageSquare, FileText, Users, Handshake } from 'lucide-react';\nimport { Link, useLocation } from 'wouter';\nimport {\n  Sidebar,\n  SidebarContent,\n  SidebarGroup,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarMenu,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSub,\n  SidebarMenuSubItem,\n  SidebarMenuSubButton,\n} from '@/components/ui/sidebar';\nimport { Collapsible, CollapsibleContent, CollapsibleTrigger } from '@/components/ui/collapsible';\n\nconst dropdownItems = [\n  {\n    title: 'Service Packages',\n    url: '/admin/service-packages',\n    icon: Package,\n  },\n  {\n    title: 'Customers Reviews',\n    url: '/admin/customers-reviews',\n    icon: MessageSquare,\n  }\n];\n\nexport function AdminSidebar() {\n  const [location] = useLocation();\n  const [homePageOpen, setHomePageOpen] = useState(false);\n  const [aboutPageOpen, setAboutPageOpen] = useState(false);\n\n  useEffect(() => {\n    if (location === '/admin/service-packages' || location === '/admin/customers-reviews') {\n      setHomePageOpen(true);\n    }\n    if (location === '/admin/about/our-doctors' || location === '/admin/about/our-partners') {\n      setAboutPageOpen(true);\n    }\n  }, [location]);\n\n  return (\n    <Sidebar>\n      <SidebarContent className=\"bg-[#264653]\">\n        <SidebarGroup>\n          <SidebarGroupLabel className=\"text-white/80\">Admin Menu</SidebarGroupLabel>\n          <SidebarGroupContent>\n            <SidebarMenu>\n              <Collapsible open={homePageOpen} onOpenChange={setHomePageOpen} className=\"group/collapsible\">\n                <SidebarMenuItem>\n                  <CollapsibleTrigger asChild>\n                    <SidebarMenuButton className=\"text-white/90 hover:bg-[#18ac61] hover:text-white\" data-testid=\"button-dropdown-home\">\n                      <Home />\n                      <span>Home Page</span>\n                      <ChevronDown className=\"ml-auto transition-transform group-data-[state=open]/collapsible:rotate-180\" />\n                    </SidebarMenuButton>\n                  </CollapsibleTrigger>\n                  <CollapsibleContent>\n                    <SidebarMenuSub>\n                      <div className=\"px-3 py-1.5 text-xs font-medium text-white/60\">Management</div>\n                      {dropdownItems.map((subItem) => (\n                        <SidebarMenuSubItem key={subItem.title}>\n                          <SidebarMenuSubButton\n                            asChild\n                            className={`${\n                              location === subItem.url\n                                ? 'bg-yellow-400 text-gray-900'\n                                : 'text-white/80 hover:bg-[#18ac61] hover:text-white'\n                            }`}\n                            data-testid={`link-admin-${subItem.title.toLowerCase().replace(/\\s+/g, '-')}`}\n                          >\n                            <Link to={subItem.url}>\n                              <subItem.icon className=\"w-4 h-4\" />\n                              <span>{subItem.title}</span>\n                            </Link>\n                          </SidebarMenuSubButton>\n                        </SidebarMenuSubItem>\n                      ))}\n                    </SidebarMenuSub>\n                  </CollapsibleContent>\n                </SidebarMenuItem>\n              </Collapsible>\n\n              <Collapsible open={aboutPageOpen} onOpenChange={setAboutPageOpen} className=\"group/collapsible\">\n                <SidebarMenuItem>\n                  <CollapsibleTrigger asChild>\n                    <SidebarMenuButton className=\"text-white/90 hover:bg-[#18ac61] hover:text-white\" data-testid=\"button-dropdown-about\">\n                      <FileText />\n                      <span>About Page</span>\n                      <ChevronDown className=\"ml-auto transition-transform group-data-[state=open]/collapsible:rotate-180\" />\n                    </SidebarMenuButton>\n                  </CollapsibleTrigger>\n                  <CollapsibleContent>\n                    <SidebarMenuSub>\n                      <div className=\"px-3 py-1.5 text-xs font-medium text-white/60\">Management</div>\n                      <SidebarMenuSubItem>\n                        <SidebarMenuSubButton\n                          asChild\n                          className={`${\n                            location === '/admin/about/our-doctors'\n                              ? 'bg-yellow-400 text-gray-900'\n                              : 'text-white/80 hover:bg-[#18ac61] hover:text-white'\n                          }`}\n                          data-testid=\"link-admin-our-doctors\"\n                        >\n                          <Link to=\"/admin/about/our-doctors\">\n                            <Users className=\"w-4 h-4\" />\n                            <span>Our Doctors</span>\n                          </Link>\n                        </SidebarMenuSubButton>\n                      </SidebarMenuSubItem>\n                      <SidebarMenuSubItem>\n                        <SidebarMenuSubButton\n                          asChild\n                          className={`${\n                            location === '/admin/about/our-partners'\n                              ? 'bg-yellow-400 text-gray-900'\n                              : 'text-white/80 hover:bg-[#18ac61] hover:text-white'\n                          }`}\n                          data-testid=\"link-admin-our-partners\"\n                        >\n                          <Link to=\"/admin/about/our-partners\">\n                            <Handshake className=\"w-4 h-4\" />\n                            <span>Our Partners</span>\n                          </Link>\n                        </SidebarMenuSubButton>\n                      </SidebarMenuSubItem>\n                    </SidebarMenuSub>\n                  </CollapsibleContent>\n                </SidebarMenuItem>\n              </Collapsible>\n            </SidebarMenu>\n          </SidebarGroupContent>\n        </SidebarGroup>\n      </SidebarContent>\n    </Sidebar>\n  );\n}\n","size_bytes":6052},"client/src/pages/AdminDashboard.tsx":{"content":"import { useEffect } from 'react';\nimport { useLocation } from 'wouter';\nimport { SidebarProvider, SidebarTrigger } from '@/components/ui/sidebar';\nimport { AdminSidebar } from '@/components/AdminSidebar';\nimport ECGAnimation from '@/components/ECGAnimation';\n\nexport default function AdminDashboard() {\n  const [, setLocation] = useLocation();\n\n  useEffect(() => {\n    const isAuthenticated = localStorage.getItem('adminAuthenticated') === 'true';\n    if (!isAuthenticated) {\n      setLocation('/login-admin');\n    }\n  }, [setLocation]);\n\n  const style = {\n    '--sidebar-width': '16rem',\n    '--sidebar-width-icon': '3rem',\n  };\n\n  return (\n    <SidebarProvider style={style as React.CSSProperties}>\n      <div className=\"flex h-screen w-full\">\n        <AdminSidebar />\n        <div className=\"flex flex-col flex-1\">\n          <header className=\"flex items-center gap-4 p-4 border-b bg-[#264653]\">\n            <SidebarTrigger className=\"text-white\" data-testid=\"button-sidebar-toggle\" />\n            <h1 className=\"text-xl font-display text-white\" data-testid=\"text-dashboard-title\">\n              Admin Dashboard\n            </h1>\n          </header>\n          <ECGAnimation />\n          <main className=\"flex-1 overflow-auto p-6 bg-background\">\n            <div className=\"max-w-7xl mx-auto\">\n              <h2 className=\"text-2xl font-display mb-4\" data-testid=\"text-welcome\">\n                Welcome to Admin Dashboard\n              </h2>\n              <p className=\"text-muted-foreground\" data-testid=\"text-dashboard-description\">\n                Use the sidebar to navigate through the admin panel.\n              </p>\n            </div>\n          </main>\n        </div>\n      </div>\n    </SidebarProvider>\n  );\n}\n","size_bytes":1721},"client/src/pages/LoginAdmin.tsx":{"content":"import { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from '@/components/ui/form';\nimport { useLocation } from 'wouter';\nimport { useToast } from '@/hooks/use-toast';\nimport { Lock } from 'lucide-react';\nimport ECGAnimation from '@/components/ECGAnimation';\n\nconst loginSchema = z.object({\n  username: z.string().min(1, 'Username is required'),\n  password: z.string().min(1, 'Password is required')\n});\n\ntype LoginFormData = z.infer<typeof loginSchema>;\n\nexport default function LoginAdmin() {\n  const [, setLocation] = useLocation();\n  const { toast } = useToast();\n\n  const form = useForm<LoginFormData>({\n    resolver: zodResolver(loginSchema),\n    defaultValues: {\n      username: '',\n      password: ''\n    }\n  });\n\n  const onSubmit = (data: LoginFormData) => {\n    if (data.username === 'admin' && data.password === 'admin123') {\n      localStorage.setItem('adminAuthenticated', 'true');\n      toast({\n        title: 'Login Successful',\n        description: 'Welcome to Admin Dashboard',\n      });\n      setLocation('/admin-dashboard');\n    } else {\n      toast({\n        title: 'Login Failed',\n        description: 'Invalid username or password',\n        variant: 'destructive',\n      });\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen\">\n      <ECGAnimation />\n      <div className=\"flex items-center justify-center bg-gradient-to-br from-[#264653] to-[#18ac61] p-4 min-h-[calc(100vh-5rem)]\">\n        <Card className=\"w-full max-w-md\">\n          <CardHeader className=\"space-y-1\">\n            <div className=\"flex items-center justify-center mb-4\">\n              <div className=\"rounded-full bg-primary/10 p-3\">\n                <Lock className=\"w-8 h-8 text-primary\" />\n              </div>\n            </div>\n            <CardTitle className=\"text-2xl font-display text-center\" data-testid=\"text-login-title\">\n              Admin Login\n            </CardTitle>\n            <CardDescription className=\"text-center\" data-testid=\"text-login-description\">\n              Enter your credentials to access the dashboard\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <Form {...form}>\n              <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n                <FormField\n                  control={form.control}\n                  name=\"username\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Username</FormLabel>\n                      <FormControl>\n                        <Input\n                          placeholder=\"Enter username\"\n                          {...field}\n                          data-testid=\"input-username\"\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n                <FormField\n                  control={form.control}\n                  name=\"password\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Password</FormLabel>\n                      <FormControl>\n                        <Input\n                          type=\"password\"\n                          placeholder=\"Enter password\"\n                          {...field}\n                          data-testid=\"input-password\"\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n                <Button\n                  type=\"submit\"\n                  className=\"w-full\"\n                  disabled={form.formState.isSubmitting}\n                  data-testid=\"button-login\"\n                >\n                  Sign In\n                </Button>\n              </form>\n            </Form>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}\n","size_bytes":4214},"client/src/pages/AdminServicePackages.tsx":{"content":"import { useState } from \"react\";\nimport { z } from \"zod\";\nimport { Pencil, Trash2 } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { insertServicePackageSchema, type ServicePackage } from \"@shared/schema\";\nimport { AdminManagement } from \"@/components/AdminManagement\";\nimport { UseFormReturn } from \"react-hook-form\";\n\nconst formSchema = insertServicePackageSchema.extend({\n  features: z.string().min(1, \"At least one feature is required\"),\n  featuresAr: z.string().optional(),\n});\n\ntype FormData = z.infer<typeof formSchema>;\n\nexport default function AdminServicePackages() {\n  const [featuresState, setFeaturesState] = useState<{\n    features: string;\n    featuresAr: string;\n  }>({ features: \"\", featuresAr: \"\" });\n\n  return (\n    <AdminManagement\n      entityName=\"Package\"\n      entityNamePlural=\"Service Packages\"\n      apiEndpoint=\"/api/service-packages\"\n      formSchema={formSchema}\n      defaultValues={{\n        name: \"\",\n        nameAr: \"\",\n        price: \"\",\n        period: \"\",\n        periodAr: \"\",\n        popular: false,\n        features: \"\",\n        featuresAr: \"\",\n      }}\n      description=\"Manage service packages that appear on the website\"\n      transformDataForSubmit={(data) => {\n        const featuresArray = data.features.split(\"\\n\").filter((f: string) => f.trim());\n        const featuresArArray = data.featuresAr ? data.featuresAr.split(\"\\n\").filter((f: string) => f.trim()) : [];\n        return {\n          ...data,\n          features: featuresArray,\n          featuresAr: featuresArArray.length > 0 ? featuresArArray : null,\n        };\n      }}\n      transformDataForEdit={(pkg) => {\n        const featuresText = pkg.features.join(\"\\n\");\n        const featuresArText = pkg.featuresAr ? pkg.featuresAr.join(\"\\n\") : \"\";\n        setFeaturesState({ features: featuresText, featuresAr: featuresArText });\n        return {\n          name: pkg.name,\n          nameAr: pkg.nameAr || \"\",\n          price: pkg.price,\n          period: pkg.period,\n          periodAr: pkg.periodAr || \"\",\n          popular: pkg.popular,\n          features: featuresText,\n          featuresAr: featuresArText,\n        };\n      }}\n      customState={featuresState}\n      onCustomStateChange={(state) => setFeaturesState(state || { features: \"\", featuresAr: \"\" })}\n      renderFormFields={(form: UseFormReturn<FormData>, editingId, customState) => (\n        <>\n          <FormField\n            control={form.control}\n            name=\"name\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Package Name (English)</FormLabel>\n                <FormControl>\n                  <Input\n                    placeholder=\"e.g., Basic Care\"\n                    data-testid=\"input-package-name\"\n                    {...field}\n                  />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n\n          <FormField\n            control={form.control}\n            name=\"nameAr\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Package Name (Arabic)</FormLabel>\n                <FormControl>\n                  <Input\n                    placeholder=\"e.g., الرعاية الأساسية\"\n                    data-testid=\"input-package-name-ar\"\n                    {...field}\n                    value={field.value || \"\"}\n                  />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n\n          <div className=\"grid grid-cols-2 gap-4\">\n            <FormField\n              control={form.control}\n              name=\"price\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Price</FormLabel>\n                  <FormControl>\n                    <Input\n                      placeholder=\"e.g., 100 SAR\"\n                      data-testid=\"input-package-price\"\n                      {...field}\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={form.control}\n              name=\"period\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Period (English)</FormLabel>\n                  <FormControl>\n                    <Input\n                      placeholder=\"e.g., /month\"\n                      data-testid=\"input-package-period\"\n                      {...field}\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n          </div>\n\n          <FormField\n            control={form.control}\n            name=\"periodAr\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Period (Arabic)</FormLabel>\n                <FormControl>\n                  <Input\n                    placeholder=\"e.g., /شهرياً\"\n                    data-testid=\"input-package-period-ar\"\n                    {...field}\n                    value={field.value || \"\"}\n                  />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n\n          <FormField\n            control={form.control}\n            name=\"features\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Features (English - one per line)</FormLabel>\n                <FormControl>\n                  <textarea\n                    className=\"flex min-h-[120px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\"\n                    placeholder=\"Feature 1&#10;Feature 2&#10;Feature 3\"\n                    data-testid=\"input-package-features\"\n                    value={customState?.features || \"\"}\n                    onChange={(e) => {\n                      setFeaturesState(prev => ({ ...prev, features: e.target.value }));\n                      field.onChange(e.target.value);\n                    }}\n                  />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n\n          <FormField\n            control={form.control}\n            name=\"featuresAr\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Features (Arabic - one per line)</FormLabel>\n                <FormControl>\n                  <textarea\n                    className=\"flex min-h-[120px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\"\n                    placeholder=\"ميزة 1&#10;ميزة 2&#10;ميزة 3\"\n                    data-testid=\"input-package-features-ar\"\n                    value={customState?.featuresAr || \"\"}\n                    onChange={(e) => {\n                      setFeaturesState(prev => ({ ...prev, featuresAr: e.target.value }));\n                      field.onChange(e.target.value);\n                    }}\n                  />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n\n          <FormField\n            control={form.control}\n            name=\"popular\"\n            render={({ field }) => (\n              <FormItem className=\"flex flex-row items-start space-x-3 space-y-0\">\n                <FormControl>\n                  <Checkbox\n                    checked={field.value}\n                    onCheckedChange={field.onChange}\n                    data-testid=\"checkbox-package-popular\"\n                  />\n                </FormControl>\n                <div className=\"space-y-1 leading-none\">\n                  <FormLabel>Mark as popular</FormLabel>\n                </div>\n              </FormItem>\n            )}\n          />\n        </>\n      )}\n      renderTableColumns={() => [\n        { header: \"Package\", width: \"60%\" },\n        { header: \"Actions\", width: \"40%\" },\n      ]}\n      renderTableRow={(pkg, onEdit, onDelete) => (\n        <tr key={pkg.id} className=\"border-b\" data-testid={`package-item-${pkg.id}`}>\n          <td className=\"py-3 px-2\">\n            <div className=\"flex items-center gap-2\">\n              <h3 className=\"font-semibold text-foreground\">{pkg.name}</h3>\n              {pkg.popular && (\n                <span className=\"text-xs bg-primary/10 text-primary px-2 py-0.5 rounded-full\">\n                  Popular\n                </span>\n              )}\n            </div>\n            <p className=\"text-sm text-muted-foreground mt-1\">\n              {pkg.price} {pkg.period}\n            </p>\n            <ul className=\"mt-2 space-y-1\">\n              {pkg.features.slice(0, 2).map((feature: string, idx: number) => (\n                <li key={idx} className=\"text-xs text-muted-foreground\">\n                  • {feature}\n                </li>\n              ))}\n              {pkg.features.length > 2 && (\n                <li className=\"text-xs text-muted-foreground\">\n                  +{pkg.features.length - 2} more\n                </li>\n              )}\n            </ul>\n          </td>\n          <td className=\"py-3 px-2\">\n            <div className=\"flex gap-2\">\n              <Button\n                size=\"icon\"\n                variant=\"outline\"\n                onClick={() => onEdit(pkg)}\n                data-testid={`button-edit-${pkg.id}`}\n              >\n                <Pencil className=\"w-4 h-4\" />\n              </Button>\n              <Button\n                size=\"icon\"\n                variant=\"outline\"\n                onClick={() => onDelete(pkg.id)}\n                data-testid={`button-delete-${pkg.id}`}\n              >\n                <Trash2 className=\"w-4 h-4\" />\n              </Button>\n            </div>\n          </td>\n        </tr>\n      )}\n    />\n  );\n}\n","size_bytes":10418},"server/db-storage.ts":{"content":"import { db } from \"./db\";\nimport { users, servicePackages, customerReviews, partners, openingDiscount, type User, type InsertUser, type ServicePackage, type InsertServicePackage, type CustomerReview, type InsertCustomerReview, type Partner, type InsertPartner, type OpeningDiscount, type InsertOpeningDiscount } from \"@shared/schema\";\nimport { eq } from \"drizzle-orm\";\nimport { IStorage } from \"./storage\";\n\nexport class DbStorage implements IStorage {\n  async getUser(id: string): Promise<User | undefined> {\n    const result = await db.select().from(users).where(eq(users.id, id));\n    return result[0];\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    const result = await db.select().from(users).where(eq(users.username, username));\n    return result[0];\n  }\n\n  async createUser(user: InsertUser): Promise<User> {\n    const result = await db.insert(users).values(user).returning();\n    return result[0];\n  }\n\n  async getAllServicePackages(): Promise<ServicePackage[]> {\n    return await db.select().from(servicePackages);\n  }\n\n  async getServicePackage(id: number): Promise<ServicePackage | undefined> {\n    const result = await db.select().from(servicePackages).where(eq(servicePackages.id, id));\n    return result[0];\n  }\n\n  async createServicePackage(pkg: InsertServicePackage): Promise<ServicePackage> {\n    const result = await db.insert(servicePackages).values(pkg).returning();\n    return result[0];\n  }\n\n  async updateServicePackage(id: number, pkg: Partial<InsertServicePackage>): Promise<ServicePackage | undefined> {\n    const result = await db.update(servicePackages)\n      .set(pkg)\n      .where(eq(servicePackages.id, id))\n      .returning();\n    return result[0];\n  }\n\n  async deleteServicePackage(id: number): Promise<boolean> {\n    const result = await db.delete(servicePackages).where(eq(servicePackages.id, id)).returning();\n    return result.length > 0;\n  }\n\n  async getAllCustomerReviews(): Promise<CustomerReview[]> {\n    return await db.select().from(customerReviews);\n  }\n\n  async getCustomerReview(id: number): Promise<CustomerReview | undefined> {\n    const result = await db.select().from(customerReviews).where(eq(customerReviews.id, id));\n    return result[0];\n  }\n\n  async createCustomerReview(review: InsertCustomerReview): Promise<CustomerReview> {\n    const result = await db.insert(customerReviews).values(review).returning();\n    return result[0];\n  }\n\n  async updateCustomerReview(id: number, review: Partial<InsertCustomerReview>): Promise<CustomerReview | undefined> {\n    const result = await db.update(customerReviews)\n      .set(review)\n      .where(eq(customerReviews.id, id))\n      .returning();\n    return result[0];\n  }\n\n  async deleteCustomerReview(id: number): Promise<boolean> {\n    const result = await db.delete(customerReviews).where(eq(customerReviews.id, id)).returning();\n    return result.length > 0;\n  }\n\n  async getAllPartners(): Promise<Partner[]> {\n    return await db.select().from(partners);\n  }\n\n  async getPartner(id: number): Promise<Partner | undefined> {\n    const result = await db.select().from(partners).where(eq(partners.id, id));\n    return result[0];\n  }\n\n  async createPartner(partner: InsertPartner): Promise<Partner> {\n    const result = await db.insert(partners).values(partner).returning();\n    return result[0];\n  }\n\n  async updatePartner(id: number, partner: Partial<InsertPartner>): Promise<Partner | undefined> {\n    const result = await db.update(partners)\n      .set(partner)\n      .where(eq(partners.id, id))\n      .returning();\n    return result[0];\n  }\n\n  async deletePartner(id: number): Promise<boolean> {\n    const result = await db.delete(partners).where(eq(partners.id, id)).returning();\n    return result.length > 0;\n  }\n\n  async createOpeningDiscount(discount: InsertOpeningDiscount): Promise<OpeningDiscount> {\n    const result = await db.insert(openingDiscount).values(discount).returning();\n    return result[0];\n  }\n\n  async checkPhoneNumberExists(phoneNumber: string): Promise<boolean> {\n    const result = await db.select().from(openingDiscount).where(eq(openingDiscount.phoneNumber, phoneNumber));\n    return result.length > 0;\n  }\n\n  async checkEmailExists(email: string): Promise<boolean> {\n    const result = await db.select().from(openingDiscount).where(eq(openingDiscount.emailAddress, email));\n    return result.length > 0;\n  }\n}\n\nexport const storage = new DbStorage();\n","size_bytes":4415},"server/db.ts":{"content":"import { drizzle } from \"drizzle-orm/node-postgres\";\nimport { Pool } from \"pg\";\nimport * as schema from \"@shared/schema\";\n\n// Use NEON_DATABASE_URL if available, otherwise fall back to DATABASE_URL\nconst connectionString = process.env.NEON_DATABASE_URL || process.env.DATABASE_URL;\n\nif (!connectionString) {\n  throw new Error(\"NEON_DATABASE_URL or DATABASE_URL must be set\");\n}\n\n// Create a PostgreSQL connection pool with SSL for Neon\nconst pool = new Pool({\n  connectionString,\n  ssl: {\n    rejectUnauthorized: false\n  }\n});\n\nexport const db = drizzle(pool, { schema });\n","size_bytes":573},"client/src/components/CustomerReviewsDisplay.tsx":{"content":"import { useRef } from 'react';\nimport { useQuery } from '@tanstack/react-query';\nimport { motion } from 'framer-motion';\nimport { useInView } from 'framer-motion';\nimport { Star, Pencil, Trash2 } from 'lucide-react';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { useLanguage } from '@/contexts/LanguageContext';\nimport { type CustomerReview } from '@shared/schema';\n\nconst container = {\n  hidden: { opacity: 0 },\n  show: {\n    opacity: 1,\n    transition: {\n      staggerChildren: 0.1\n    }\n  }\n};\n\nconst item = {\n  hidden: { opacity: 0, y: 20 },\n  show: { opacity: 1, y: 0 }\n};\n\ninterface CustomerReviewsDisplayProps {\n  showHeader?: boolean;\n  className?: string;\n  asSection?: boolean;\n  onEdit?: (review: CustomerReview) => void;\n  onDelete?: (id: number) => void;\n  showActions?: boolean;\n}\n\nexport default function CustomerReviewsDisplay({\n  showHeader = true,\n  className = \"\",\n  asSection = true,\n  onEdit,\n  onDelete,\n  showActions = false\n}: CustomerReviewsDisplayProps) {\n  const ref = useRef(null);\n  const isInView = useInView(ref, { once: false, amount: 0.2 });\n  const { t, language } = useLanguage();\n\n  const { data: reviews = [], isLoading } = useQuery<CustomerReview[]>({\n    queryKey: [\"/api/customer-reviews\"],\n  });\n\n  const WrapperComponent = asSection ? 'section' : 'div';\n  const wrapperClassName = asSection ? `py-20 bg-card ${className}` : className;\n\n  return (\n    <WrapperComponent ref={ref} className={wrapperClassName}>\n      <div className=\"max-w-7xl mx-auto px-6\">\n        {showHeader && (\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            animate={isInView ? { opacity: 1, y: 0 } : {}}\n            transition={{ duration: 0.6 }}\n            className=\"text-center mb-16\"\n          >\n            <h2 className=\"font-display text-4xl font-medium text-foreground mb-4\" data-testid=\"text-reviews-headline\">\n              {t('reviews.headline')}\n            </h2>\n            <p className=\"text-lg text-foreground/80 max-w-3xl mx-auto\">\n              Customer testimonials and feedback\n            </p>\n          </motion.div>\n        )}\n\n        {isLoading ? (\n          <div className=\"text-center py-12\">\n            <p className=\"text-foreground/60\" data-testid=\"text-loading-reviews\">Loading reviews...</p>\n          </div>\n        ) : reviews.length === 0 ? (\n          <div className=\"text-center py-12\">\n            <p className=\"text-foreground/60\" data-testid=\"text-no-reviews\">No customer reviews yet.</p>\n          </div>\n        ) : (\n          <motion.div\n            variants={container}\n            initial=\"hidden\"\n            animate={isInView ? \"show\" : \"hidden\"}\n            className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6\"\n          >\n            {reviews.map((review) => (\n              <motion.div key={review.id} variants={item}>\n                <Card className=\"h-full hover-elevate\" data-testid={`card-review-${review.id}`}>\n                  <CardContent className=\"pt-6\">\n                    <div className=\"flex justify-between items-start gap-3 mb-4\">\n                      <div className={`flex-1 ${language === 'ar' ? 'text-right' : 'text-left'}`}>\n                        <h3 className=\"font-semibold text-lg text-foreground\" data-testid={`text-name-${review.id}`}>\n                          {language === 'ar' && review.nameAr ? review.nameAr : review.name}\n                        </h3>\n                        <div className={`flex gap-1 mt-1 ${language === 'ar' ? 'flex-row-reverse' : ''}`} data-testid={`rating-${review.id}`}>\n                          {Array.from({ length: 5 }).map((_, i) => (\n                            <Star\n                              key={i}\n                              className={`w-4 h-4 ${\n                                i < review.rating\n                                  ? \"fill-[#e9c46a] text-[#e9c46a]\"\n                                  : \"fill-muted text-muted\"\n                              }`}\n                            />\n                          ))}\n                        </div>\n                      </div>\n                      {showActions && onEdit && onDelete && (\n                        <div className=\"flex gap-2\">\n                          <Button\n                            variant=\"outline\"\n                            size=\"sm\"\n                            onClick={() => onEdit(review)}\n                            data-testid={`button-edit-${review.id}`}\n                          >\n                            <Pencil className=\"w-4 h-4\" />\n                          </Button>\n                          <Button\n                            variant=\"destructive\"\n                            size=\"sm\"\n                            onClick={() => onDelete(review.id)}\n                            data-testid={`button-delete-${review.id}`}\n                          >\n                            <Trash2 className=\"w-4 h-4\" />\n                          </Button>\n                        </div>\n                      )}\n                    </div>\n                    <p className={`text-foreground/80 ${language === 'ar' ? 'text-right' : 'text-left'}`} data-testid={`text-message-${review.id}`}>\n                      {review.message}\n                    </p>\n                  </CardContent>\n                </Card>\n              </motion.div>\n            ))}\n          </motion.div>\n        )}\n      </div>\n    </WrapperComponent>\n  );\n}\n","size_bytes":5464},"client/src/pages/AdminOurPartners.tsx":{"content":"import { useState, useRef } from \"react\";\nimport { Pencil, Trash2, Upload, Check, X } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { insertPartnerSchema, type Partner } from \"@shared/schema\";\nimport { AdminManagement } from \"@/components/AdminManagement\";\nimport { UseFormReturn } from \"react-hook-form\";\nimport { z } from \"zod\";\n\nconst formSchema = insertPartnerSchema;\ntype FormData = z.infer<typeof formSchema>;\n\nexport default function AdminOurPartners() {\n  const { toast } = useToast();\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const [currentForm, setCurrentForm] = useState<UseFormReturn<FormData> | null>(null);\n\n  const handleFileSelect = (event: React.ChangeEvent<HTMLInputElement>, form: UseFormReturn<FormData>) => {\n    const file = event.target.files?.[0];\n    if (!file) return;\n\n    if (!file.type.startsWith('image/')) {\n      toast({\n        title: \"Error\",\n        description: \"Please select an image file\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    if (file.size > 500 * 1024) {\n      toast({\n        title: \"Error\",\n        description: \"Image size must be less than 500KB\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      const base64String = reader.result as string;\n      form.setValue(\"logoUrl\", base64String);\n      toast({\n        title: \"Success\",\n        description: \"Logo uploaded successfully\",\n      });\n    };\n    reader.onerror = () => {\n      toast({\n        title: \"Error\",\n        description: \"Failed to read image file\",\n        variant: \"destructive\",\n      });\n    };\n    reader.readAsDataURL(file);\n  };\n\n  return (\n    <AdminManagement\n      entityName=\"Partner\"\n      entityNamePlural=\"Our Partners\"\n      apiEndpoint=\"/api/partners\"\n      formSchema={formSchema}\n      defaultValues={{\n        name: \"\",\n        nameAr: \"\",\n        logoUrl: \"\",\n      }}\n      description=\"Manage partners that appear on the About page\"\n      customState={(form: UseFormReturn<FormData>) => {\n        setCurrentForm(form);\n      }}\n      renderFormFields={(form: UseFormReturn<FormData>) => (\n        <>\n          <div className=\"grid md:grid-cols-2 gap-4\">\n            <FormField\n              control={form.control}\n              name=\"name\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Partner Name (English)</FormLabel>\n                  <FormControl>\n                    <Input {...field} placeholder=\"Enter partner name\" data-testid=\"input-name\" />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            <FormField\n              control={form.control}\n              name=\"nameAr\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Partner Name (Arabic)</FormLabel>\n                  <FormControl>\n                    <Input {...field} value={field.value || \"\"} placeholder=\"أدخل اسم الشريك\" data-testid=\"input-name-ar\" />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n          </div>\n          <FormField\n            control={form.control}\n            name=\"logoUrl\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Partner Logo</FormLabel>\n                <div className=\"space-y-4\">\n                  {field.value ? (\n                    <div className=\"flex items-center gap-4\">\n                      <img\n                        src={field.value}\n                        alt=\"Partner logo preview\"\n                        className=\"w-32 h-32 object-contain bg-white rounded border p-2\"\n                        data-testid=\"img-logo-preview\"\n                      />\n                      <div className=\"flex flex-col gap-2\">\n                        <div className=\"flex items-center gap-2 text-sm text-muted-foreground\">\n                          <Check className=\"w-4 h-4 text-green-600\" />\n                          Logo uploaded and ready\n                        </div>\n                        <Button\n                          type=\"button\"\n                          variant=\"outline\"\n                          size=\"sm\"\n                          onClick={() => {\n                            form.setValue(\"logoUrl\", \"\");\n                            if (fileInputRef.current) {\n                              fileInputRef.current.value = \"\";\n                            }\n                          }}\n                          data-testid=\"button-remove-logo\"\n                        >\n                          <X className=\"w-4 h-4 mr-2\" />\n                          Remove Logo\n                        </Button>\n                      </div>\n                    </div>\n                  ) : (\n                    <div className=\"flex items-center gap-4\">\n                      <div className=\"w-32 h-32 bg-muted rounded flex items-center justify-center border-2 border-dashed\">\n                        <Upload className=\"w-12 h-12 text-muted-foreground\" />\n                      </div>\n                      <p className=\"text-sm text-muted-foreground\">No logo uploaded yet</p>\n                    </div>\n                  )}\n                  <div>\n                    <input\n                      ref={fileInputRef}\n                      type=\"file\"\n                      accept=\"image/*\"\n                      onChange={(e) => handleFileSelect(e, form)}\n                      className=\"hidden\"\n                      data-testid=\"input-logo-file\"\n                    />\n                    <Button\n                      type=\"button\"\n                      variant={field.value ? \"outline\" : \"default\"}\n                      onClick={() => fileInputRef.current?.click()}\n                      data-testid=\"button-upload-logo\"\n                    >\n                      <Upload className=\"w-4 h-4 mr-2\" />\n                      {field.value ? \"Change Logo\" : \"Upload Logo\"}\n                    </Button>\n                    <p className=\"text-xs text-muted-foreground mt-2\">\n                      Supported formats: PNG, JPG, JPEG. Max size: 500KB\n                    </p>\n                  </div>\n                </div>\n                <FormControl>\n                  <Input {...field} value={field.value || \"\"} type=\"hidden\" />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n        </>\n      )}\n      renderTableColumns={() => [\n        { header: \"Partner\", width: \"60%\" },\n        { header: \"Actions\", width: \"40%\" },\n      ]}\n      renderTableRow={(partner, onEdit, onDelete) => (\n        <tr key={partner.id} className=\"border-b\" data-testid={`partner-row-${partner.id}`}>\n          <td className=\"py-3 px-2\">\n            <div className=\"flex items-center gap-4\">\n              {partner.logoUrl ? (\n                <img\n                  src={partner.logoUrl}\n                  alt={partner.name}\n                  className=\"w-16 h-16 object-contain bg-white rounded p-1 border\"\n                  data-testid={`img-partner-logo-${partner.id}`}\n                />\n              ) : (\n                <div className=\"w-16 h-16 bg-muted rounded flex items-center justify-center border\" data-testid={`placeholder-logo-${partner.id}`}>\n                  <Upload className=\"w-8 h-8 text-muted-foreground\" />\n                </div>\n              )}\n              <div>\n                <h3 className=\"font-semibold\" data-testid={`text-partner-name-${partner.id}`}>{partner.name}</h3>\n                {partner.nameAr && (\n                  <p className=\"text-sm text-muted-foreground\" data-testid={`text-partner-name-ar-${partner.id}`}>{partner.nameAr}</p>\n                )}\n              </div>\n            </div>\n          </td>\n          <td className=\"py-3 px-2\">\n            <div className=\"flex gap-2\">\n              <Button\n                size=\"icon\"\n                variant=\"outline\"\n                onClick={() => onEdit(partner)}\n                data-testid={`button-edit-${partner.id}`}\n              >\n                <Pencil className=\"w-4 h-4\" />\n              </Button>\n              <Button\n                size=\"icon\"\n                variant=\"outline\"\n                onClick={() => onDelete(partner.id)}\n                data-testid={`button-delete-${partner.id}`}\n              >\n                <Trash2 className=\"w-4 h-4\" />\n              </Button>\n            </div>\n          </td>\n        </tr>\n      )}\n    />\n  );\n}\n","size_bytes":8836},"client/src/components/ServicePackagesDisplay.tsx":{"content":"import { Check } from 'lucide-react';\nimport { Card, CardHeader, CardTitle, CardContent, CardFooter } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { motion } from 'framer-motion';\nimport { useInView } from 'framer-motion';\nimport { useRef } from 'react';\nimport { useQuery } from '@tanstack/react-query';\nimport { useLanguage } from '@/contexts/LanguageContext';\nimport { useLocation } from 'wouter';\nimport type { ServicePackage } from '@shared/schema';\n\nconst container = {\n  hidden: { opacity: 0 },\n  show: {\n    opacity: 1,\n    transition: {\n      staggerChildren: 0.15\n    }\n  }\n};\n\nconst item = {\n  hidden: { opacity: 0, y: 30 },\n  show: { opacity: 1, y: 0 }\n};\n\ninterface ServicePackagesDisplayProps {\n  showHeader?: boolean;\n  onPackageClick?: () => void;\n  className?: string;\n  asSection?: boolean;\n}\n\nexport default function ServicePackagesDisplay({ \n  showHeader = true, \n  onPackageClick,\n  className = \"\",\n  asSection = true\n}: ServicePackagesDisplayProps) {\n  const ref = useRef(null);\n  const isInView = useInView(ref, { once: false, amount: 0.2 });\n  const { t, language } = useLanguage();\n  const [, setLocation] = useLocation();\n\n  const { data: packages = [], isLoading } = useQuery<ServicePackage[]>({\n    queryKey: [\"/api/service-packages\"],\n  });\n\n  const handlePackageClick = () => {\n    if (onPackageClick) {\n      onPackageClick();\n    } else {\n      setLocation('/book-now');\n    }\n  };\n\n  const getPackageName = (pkg: ServicePackage) => {\n    return language === 'ar' && pkg.nameAr ? pkg.nameAr : pkg.name;\n  };\n\n  const getPackagePeriod = (pkg: ServicePackage) => {\n    return language === 'ar' && pkg.periodAr ? pkg.periodAr : pkg.period;\n  };\n\n  const getPackageFeatures = (pkg: ServicePackage) => {\n    if (language === 'ar' && pkg.featuresAr && pkg.featuresAr.length > 0) {\n      return pkg.featuresAr;\n    }\n    return pkg.features || [];\n  };\n\n  const WrapperComponent = asSection ? 'section' : 'div';\n  const wrapperClassName = asSection ? `py-20 bg-background ${className}` : className;\n\n  return (\n    <WrapperComponent ref={ref} className={wrapperClassName}>\n      <div className=\"max-w-7xl mx-auto px-6\">\n        {showHeader && (\n          <motion.div \n            initial={{ opacity: 0, y: 30 }}\n            animate={isInView ? { opacity: 1, y: 0 } : {}}\n            transition={{ duration: 0.6 }}\n            className=\"text-center mb-16\"\n          >\n            <div className=\"flex items-center justify-center gap-4 mb-4\">\n              <lord-icon\n                src=\"https://cdn.lordicon.com/qopeqxee.json\"\n                trigger=\"loop\"\n                delay=\"1500\"\n                state=\"in-reveal\"\n                colors=\"primary:#18ac61,secondary:#264653\"\n                style={{width: '90px', height: '90px'}}\n                data-testid=\"icon-paw-animated\">\n              </lord-icon>\n              <h2 className=\"font-display text-4xl font-medium text-foreground\" data-testid=\"text-packages-headline\">\n                {t('packages.headline')}\n              </h2>\n            </div>\n            <p className=\"text-lg text-foreground/80 max-w-3xl mx-auto\" data-testid=\"text-packages-description\">\n              {t('packages.description')}\n            </p>\n          </motion.div>\n        )}\n\n        {isLoading ? (\n          <div className=\"text-center py-12\">\n            <p className=\"text-foreground/60\" data-testid=\"text-loading-packages\">Loading packages...</p>\n          </div>\n        ) : packages.length === 0 ? (\n          <div className=\"text-center py-12\">\n            <p className=\"text-foreground/60\" data-testid=\"text-no-packages\">No packages available at the moment.</p>\n          </div>\n        ) : (\n          <motion.div \n            variants={container}\n            initial=\"hidden\"\n            animate={isInView ? \"show\" : \"hidden\"}\n            className=\"grid md:grid-cols-3 gap-8\"\n          >\n            {packages.map((pkg, index) => (\n              <motion.div key={pkg.id} variants={item}>\n              <motion.div\n                whileHover={{ y: -8, transition: { duration: 0.3 } }}\n                className=\"h-full\"\n              >\n                <Card className={`h-full flex flex-col hover-elevate relative ${pkg.popular ? 'border-primary' : ''}`} data-testid={`card-package-${index}`}>\n                  {pkg.popular && (\n                    <div className=\"absolute -top-3 left-1/2 -translate-x-1/2\">\n                      <Badge className=\"bg-primary text-primary-foreground\" data-testid=\"badge-most-popular\">\n                        {t('packages.popular')}\n                      </Badge>\n                    </div>\n                  )}\n                  <CardHeader className=\"text-center\">\n                    <CardTitle className=\"text-2xl mb-2\" data-testid={`text-package-name-${index}`}>{getPackageName(pkg)}</CardTitle>\n                    <div className=\"mt-4\">\n                      <span className=\"text-4xl font-bold text-primary\" data-testid={`text-package-price-${index}`}>{pkg.price}</span>\n                      <span className=\"text-lg text-foreground/60\"> {getPackagePeriod(pkg)}</span>\n                    </div>\n                  </CardHeader>\n                  <CardContent className=\"flex-1\">\n                    <ul className=\"space-y-3\">\n                      {getPackageFeatures(pkg).map((feature, featureIndex) => (\n                        <li key={featureIndex} className=\"flex items-start gap-2\" data-testid={`feature-${index}-${featureIndex}`}>\n                          <Check className=\"w-5 h-5 text-primary flex-shrink-0 mt-0.5\" />\n                          <span className=\"text-foreground/80\">{feature}</span>\n                        </li>\n                      ))}\n                    </ul>\n                  </CardContent>\n                  <CardFooter>\n                    <motion.div\n                      whileHover={{ scale: 1.05 }}\n                      whileTap={{ scale: 0.95 }}\n                      className=\"w-full\"\n                    >\n                      <Button \n                        className=\"w-full\" \n                        variant={pkg.popular ? 'default' : 'outline'}\n                        size=\"lg\"\n                        onClick={handlePackageClick}\n                        data-testid={`button-book-now-${index}`}\n                      >\n                        {t('packages.bookNow')}\n                      </Button>\n                    </motion.div>\n                  </CardFooter>\n                </Card>\n              </motion.div>\n            </motion.div>\n          ))}\n        </motion.div>\n        )}\n      </div>\n    </WrapperComponent>\n  );\n}\n","size_bytes":6694},"client/src/pages/AdminCustomersReviews.tsx":{"content":"import { Pencil, Trash2, Star } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { insertCustomerReviewSchema, type CustomerReview } from \"@shared/schema\";\nimport { AdminManagement } from \"@/components/AdminManagement\";\nimport { UseFormReturn } from \"react-hook-form\";\n\ntype FormData = typeof insertCustomerReviewSchema._type;\n\nexport default function AdminCustomersReviews() {\n  return (\n    <AdminManagement\n      entityName=\"Review\"\n      entityNamePlural=\"Customers Reviews\"\n      apiEndpoint=\"/api/customer-reviews\"\n      formSchema={insertCustomerReviewSchema}\n      defaultValues={{\n        name: \"\",\n        nameAr: \"\",\n        rating: 5,\n        message: \"\",\n      }}\n      description='Manage customer testimonials that appear in \"What Our Customers Say\" section'\n      renderFormFields={(form: UseFormReturn<FormData>) => (\n        <>\n          <FormField\n            control={form.control}\n            name=\"name\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Customer Name (English)</FormLabel>\n                <FormControl>\n                  <Input\n                    placeholder=\"e.g., John Smith\"\n                    data-testid=\"input-review-name\"\n                    {...field}\n                  />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n\n          <FormField\n            control={form.control}\n            name=\"nameAr\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Customer Name (Arabic)</FormLabel>\n                <FormControl>\n                  <Input\n                    placeholder=\"e.g., جون سميث\"\n                    data-testid=\"input-review-name-ar\"\n                    {...field}\n                    value={field.value || \"\"}\n                  />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n\n          <FormField\n            control={form.control}\n            name=\"rating\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Rating</FormLabel>\n                <Select\n                  onValueChange={(value) => field.onChange(parseInt(value))}\n                  value={field.value?.toString()}\n                >\n                  <FormControl>\n                    <SelectTrigger data-testid=\"select-review-rating\">\n                      <SelectValue placeholder=\"Select rating\" />\n                    </SelectTrigger>\n                  </FormControl>\n                  <SelectContent>\n                    <SelectItem value=\"5\">5 Stars - Excellent</SelectItem>\n                    <SelectItem value=\"4\">4 Stars - Very Good</SelectItem>\n                    <SelectItem value=\"3\">3 Stars - Good</SelectItem>\n                    <SelectItem value=\"2\">2 Stars - Fair</SelectItem>\n                    <SelectItem value=\"1\">1 Star - Poor</SelectItem>\n                  </SelectContent>\n                </Select>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n\n          <FormField\n            control={form.control}\n            name=\"message\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Review Message</FormLabel>\n                <FormControl>\n                  <Textarea\n                    placeholder=\"Write the customer's testimonial here...\"\n                    className=\"min-h-[100px]\"\n                    data-testid=\"input-review-message\"\n                    {...field}\n                  />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n        </>\n      )}\n      renderTableColumns={() => [\n        { header: \"Review\", width: \"60%\" },\n        { header: \"Actions\", width: \"40%\" },\n      ]}\n      renderTableRow={(review, onEdit, onDelete) => (\n        <tr key={review.id} className=\"border-b\" data-testid={`review-item-${review.id}`}>\n          <td className=\"py-3 px-2\">\n            <h3 className=\"font-semibold text-foreground\">{review.name}</h3>\n            <div className=\"flex gap-0.5 my-1\">\n              {[...Array(5)].map((_, i) => (\n                <Star\n                  key={i}\n                  className={`w-3 h-3 ${\n                    i < review.rating\n                      ? \"fill-yellow-400 text-yellow-400\"\n                      : \"text-gray-300\"\n                  }`}\n                />\n              ))}\n            </div>\n            <p className=\"text-xs text-muted-foreground line-clamp-2\">\n              {review.message}\n            </p>\n          </td>\n          <td className=\"py-3 px-2\">\n            <div className=\"flex gap-2\">\n              <Button\n                size=\"icon\"\n                variant=\"outline\"\n                onClick={() => onEdit(review)}\n                data-testid={`button-edit-${review.id}`}\n              >\n                <Pencil className=\"w-4 h-4\" />\n              </Button>\n              <Button\n                size=\"icon\"\n                variant=\"outline\"\n                onClick={() => onDelete(review.id)}\n                data-testid={`button-delete-${review.id}`}\n              >\n                <Trash2 className=\"w-4 h-4\" />\n              </Button>\n            </div>\n          </td>\n        </tr>\n      )}\n    />\n  );\n}\n","size_bytes":5709},"client/src/pages/AdminOurDoctors.tsx":{"content":"import { useEffect } from \"react\";\nimport { useLocation } from \"wouter\";\nimport { SidebarProvider, SidebarTrigger } from \"@/components/ui/sidebar\";\nimport { AdminSidebar } from \"@/components/AdminSidebar\";\n\nexport default function AdminOurDoctors() {\n  const [, setLocation] = useLocation();\n\n  useEffect(() => {\n    const isAuthenticated = localStorage.getItem('adminAuthenticated') === 'true';\n    if (!isAuthenticated) {\n      setLocation('/login-admin');\n    }\n  }, [setLocation]);\n\n  const style = {\n    '--sidebar-width': '16rem',\n    '--sidebar-width-icon': '3rem',\n  };\n\n  return (\n    <SidebarProvider style={style as React.CSSProperties}>\n      <div className=\"flex h-screen w-full\">\n        <AdminSidebar />\n        <div className=\"flex flex-col flex-1\">\n          <header className=\"flex items-center gap-4 p-4 border-b bg-[#264653]\">\n            <SidebarTrigger className=\"text-white\" data-testid=\"button-sidebar-toggle\" />\n            <h1 className=\"text-xl font-display text-white\" data-testid=\"text-page-title\">\n              Our Doctors Management\n            </h1>\n          </header>\n          <main className=\"flex-1 overflow-auto\">\n            <div className=\"p-6 space-y-6\">\n              <div>\n                <h2 className=\"text-3xl font-bold text-foreground\">Our Doctors</h2>\n                <p className=\"text-muted-foreground mt-1\">\n                  Manage doctors that appear on the About page\n                </p>\n              </div>\n              \n              <div className=\"text-center py-12\">\n                <p className=\"text-muted-foreground\">\n                  Our Doctors management interface - Coming soon\n                </p>\n              </div>\n            </div>\n          </main>\n        </div>\n      </div>\n    </SidebarProvider>\n  );\n}\n","size_bytes":1786},"client/src/pages/BookNow.tsx":{"content":"import { motion, useInView } from 'framer-motion';\nimport { useLanguage } from '@/contexts/LanguageContext';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { useRef, useEffect, useState } from 'react';\nimport Header from '@/components/Header';\nimport ECGAnimation from '@/components/ECGAnimation';\nimport HeartbeatDivider from '@/components/HeartbeatDivider';\nimport Footer from '@/components/Footer';\nimport { MapPin, Phone } from 'lucide-react';\nimport { SiWhatsapp } from 'react-icons/si';\nimport vetExamImage from '@assets/generated_images/Vet_examining_golden_retriever_19654044.png';\nimport vetConsultationImage from '@assets/generated_images/Vet_consultation_with_cat_owner_7978144f.png';\nimport vetEquipmentImage from '@assets/generated_images/Modern_veterinary_equipment_room_49dc6345.png';\n\nexport default function BookNow() {\n  const { t, language } = useLanguage();\n  const heroRef = useRef(null);\n  const heroInView = useInView(heroRef, { once: false, amount: 0.3 });\n\n  // Countdown timer state\n  const [countdown, setCountdown] = useState({\n    months: 0,\n    weeks: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  });\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  // Countdown timer logic\n  useEffect(() => {\n    const targetDate = new Date('2026-01-01T00:00:00').getTime();\n\n    const updateCountdown = () => {\n      const now = new Date().getTime();\n      const distance = targetDate - now;\n\n      if (distance < 0) {\n        setCountdown({ months: 0, weeks: 0, days: 0, hours: 0, minutes: 0, seconds: 0 });\n        return;\n      }\n\n      const months = Math.floor(distance / (1000 * 60 * 60 * 24 * 30));\n      const remainingAfterMonths = distance % (1000 * 60 * 60 * 24 * 30);\n      const weeks = Math.floor(remainingAfterMonths / (1000 * 60 * 60 * 24 * 7));\n      const remainingAfterWeeks = remainingAfterMonths % (1000 * 60 * 60 * 24 * 7);\n      const days = Math.floor(remainingAfterWeeks / (1000 * 60 * 60 * 24));\n      const hours = Math.floor((remainingAfterWeeks % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n      const minutes = Math.floor((remainingAfterWeeks % (1000 * 60 * 60)) / (1000 * 60));\n      const seconds = Math.floor((remainingAfterWeeks % (1000 * 60)) / 1000);\n\n      setCountdown({ months, weeks, days, hours, minutes, seconds });\n    };\n\n    updateCountdown();\n    const interval = setInterval(updateCountdown, 1000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  // Convert English numerals to Arabic-Indic numerals\n  const toArabicNumerals = (num: number): string => {\n    const arabicNumerals = ['٠', '١', '٢', '٣', '٤', '٥', '٦', '٧', '٨', '٩'];\n    return num.toString().split('').map(digit => arabicNumerals[parseInt(digit)]).join('');\n  };\n\n  // Format number based on language\n  const formatNumber = (num: number): string => {\n    return language === 'ar' ? toArabicNumerals(num) : num.toString();\n  };\n\n  const riyadhBranches = [\n    {\n      id: 'sahafa',\n      name: t('bookNow.sahafahBranch'),\n      whatsapp: t('bookNow.sahafahWhatsApp'),\n      phone: t('bookNow.sahafahPhone'),\n      iframeUrl: 'https://vet.digitail.io/clinics/dr-paws-sahafa-tel-920003045?widget',\n    },\n    {\n      id: 'mather',\n      name: t('bookNow.matherBranch'),\n      whatsapp: t('bookNow.matherWhatsApp'),\n      phone: t('bookNow.matherPhone'),\n      iframeUrl: 'https://vet.digitail.io/clinics/dr-paws-mathar-phone-920003045?widget',\n    },\n  ];\n\n  return (\n    <div className=\"min-h-screen\">\n      <Header />\n      <ECGAnimation />\n\n      <motion.section\n        ref={heroRef}\n        initial={{ opacity: 0 }}\n        animate={heroInView ? { opacity: 1 } : { opacity: 0 }}\n        transition={{ duration: 0.6 }}\n        className=\"relative py-32 bg-gradient-to-br from-primary/5 to-accent/5 overflow-hidden\"\n      >\n        <div \n          className=\"absolute inset-0 bg-cover bg-center opacity-20\"\n          style={{ backgroundImage: `url(${vetExamImage})` }}\n        />\n        <div className=\"absolute inset-0 bg-gradient-to-b from-background/80 via-background/70 to-background/90\" />\n        \n        <div className=\"max-w-7xl mx-auto px-6 relative z-10\">\n          <motion.div\n            initial={{ y: 30, opacity: 0 }}\n            animate={heroInView ? { y: 0, opacity: 1 } : { y: 30, opacity: 0 }}\n            transition={{ duration: 0.6, delay: 0.2 }}\n            className=\"text-center\"\n          >\n            <h1 className=\"text-4xl md:text-5xl font-bold text-primary mb-6\" data-testid=\"text-booknow-title\">\n              {t('bookNow.title')}\n            </h1>\n            <p className=\"text-xl text-foreground/80 mb-8\" data-testid=\"text-booknow-welcome\">\n              {t('bookNow.welcome')}\n            </p>\n          </motion.div>\n        </div>\n      </motion.section>\n\n      {/* Quick Booking & Contact Section */}\n      <section className=\"py-12 bg-primary/5\">\n        <div className=\"max-w-7xl mx-auto px-6\">\n          <motion.div\n            initial={{ y: 30, opacity: 0 }}\n            whileInView={{ y: 0, opacity: 1 }}\n            viewport={{ once: false, amount: 0.3 }}\n            transition={{ duration: 0.6 }}\n          >\n            <h2 className=\"text-2xl font-bold text-primary text-center mb-8\" data-testid=\"text-quick-booking-title\">\n              {t('bookNow.bookingMethods')}\n            </h2>\n            \n            <div className={`${language === 'ar' ? 'flex justify-start' : ''}`}>\n              <h3 className={`text-2xl font-semibold text-primary mb-6 flex items-center gap-2 ${language === 'ar' ? 'text-right' : ''}`} data-testid=\"text-riyadh-branches\">\n                <lord-icon\n                  src=\"https://cdn.lordicon.com/dfwzmvnc.json\"\n                  trigger=\"loop\"\n                  delay=\"1500\"\n                  colors=\"primary:#18ac61,secondary:#264653\"\n                  style={{ width: '90px', height: '90px' }}\n                />\n                {t('bookNow.riyadhBranches')}\n              </h3>\n            </div>\n            \n            <div className=\"grid md:grid-cols-3 gap-6 mb-8\">\n              {/* WhatsApp Quick Access */}\n              <Card className=\"text-center hover-elevate\" data-testid=\"card-quick-whatsapp\">\n                <CardContent className=\"p-6\">\n                  <SiWhatsapp className=\"w-10 h-10 text-primary mx-auto mb-4\" />\n                  <h3 className=\"font-semibold text-lg mb-4\" data-testid=\"text-quick-whatsapp-title\">{t('bookNow.whatsappBooking')}</h3>\n                  <div className=\"space-y-3 flex flex-col items-center\">\n                    {riyadhBranches.map((branch) => (\n                      <a\n                        key={`quick-wa-${branch.id}`}\n                        href={`https://wa.me/966${branch.whatsapp.replace(/^0/, '').replace(/\\s/g, '')}`}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"flex items-center gap-2 hover-elevate rounded-lg\"\n                        data-testid={`link-quick-whatsapp-${branch.id}`}\n                      >\n                        <span className=\"text-sm text-foreground/70\">{branch.name}</span>\n                        <SiWhatsapp className=\"w-5 h-5 text-primary\" />\n                      </a>\n                    ))}\n                  </div>\n                </CardContent>\n              </Card>\n\n              {/* Phone Quick Access */}\n              <Card className=\"text-center hover-elevate\" data-testid=\"card-quick-phone\">\n                <CardContent className=\"p-6 flex flex-col items-center\">\n                  <Phone className=\"w-10 h-10 text-primary mb-4\" />\n                  <h3 className=\"font-semibold text-lg mb-4\" data-testid=\"text-quick-phone-title\">\n                    {t('bookNow.phoneBooking')}\n                  </h3>\n                  <div className=\"space-y-2 text-sm flex flex-col items-center\">\n                    {riyadhBranches.map((branch) => (\n                      <div key={`quick-phone-${branch.id}`} className=\"flex items-center gap-3\">\n                        <span className=\"text-foreground/70\">{branch.name}:</span>\n                        <a\n                          href={`tel:${branch.phone.replace(/\\s/g, '')}`}\n                          className=\"text-primary hover:underline font-semibold font-mono tracking-wide\"\n                          data-testid={`link-quick-phone-${branch.id}`}\n                          dir=\"ltr\"\n                        >\n                          {branch.phone.replace(/(\\d{2})\\s(\\d{4})\\s(\\d{4})/, '$1\\u00A0$2\\u00A0$3')}\n                        </a>\n                      </div>\n                    ))}\n                  </div>\n                </CardContent>\n              </Card>\n\n              {/* Online Program Quick Access */}\n              <Card className=\"text-center hover-elevate\" data-testid=\"card-quick-program\">\n                <CardContent className=\"p-6\">\n                  <MapPin className=\"w-10 h-10 text-primary mx-auto mb-4\" />\n                  <h3 className=\"font-semibold text-lg mb-4\" data-testid=\"text-quick-program-title\">{t('bookNow.programBooking')}</h3>\n                  <div className=\"flex flex-col gap-2\">\n                    {riyadhBranches.map((branch) => (\n                      <a\n                        key={`quick-program-${branch.id}`}\n                        href={`#program-${branch.id}`}\n                        className=\"text-primary hover:underline text-sm\"\n                        data-testid={`link-quick-program-${branch.id}`}\n                      >\n                        {branch.name}\n                      </a>\n                    ))}\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Visual Section with Images */}\n      <section className=\"py-12 bg-background\">\n        <div className=\"max-w-7xl mx-auto px-6\">\n          <div className=\"grid md:grid-cols-2 gap-8\">\n            <motion.div\n              initial={{ opacity: 0, x: -30 }}\n              whileInView={{ opacity: 1, x: 0 }}\n              viewport={{ once: false, amount: 0.3 }}\n              transition={{ duration: 0.6 }}\n            >\n              <img \n                src={vetConsultationImage} \n                alt=\"Veterinary consultation\" \n                className=\"rounded-xl w-full h-full object-cover shadow-md\"\n                data-testid=\"img-vet-consultation\"\n              />\n            </motion.div>\n            <motion.div\n              initial={{ opacity: 0, x: 30 }}\n              whileInView={{ opacity: 1, x: 0 }}\n              viewport={{ once: false, amount: 0.3 }}\n              transition={{ duration: 0.6 }}\n            >\n              <img \n                src={vetEquipmentImage} \n                alt=\"Modern veterinary equipment\" \n                className=\"rounded-xl w-full h-full object-cover shadow-md\"\n                data-testid=\"img-vet-equipment\"\n              />\n            </motion.div>\n          </div>\n        </div>\n      </section>\n\n      {/* Online Booking Program Section */}\n      <section className=\"py-16 bg-background\">\n        <div className=\"max-w-7xl mx-auto px-6\">\n          <motion.div\n            initial={{ y: 30, opacity: 0 }}\n            whileInView={{ y: 0, opacity: 1 }}\n            viewport={{ once: false, amount: 0.3 }}\n            transition={{ duration: 0.6 }}\n            className=\"text-center mb-12\"\n          >\n            <h2 className=\"text-3xl font-bold text-primary mb-4\" data-testid=\"text-program-booking\">\n              {t('bookNow.programBooking')}\n            </h2>\n            <p className=\"text-foreground/70\" data-testid=\"text-riyadh-branches-program\">\n              {t('bookNow.riyadhBranches')}\n            </p>\n          </motion.div>\n\n          <div className=\"space-y-12\">\n            {/* Program Booking Cards */}\n            <div className=\"grid md:grid-cols-2 gap-6\">\n              {riyadhBranches.map((branch) => (\n                <Card key={branch.id} id={`program-${branch.id}`} className=\"overflow-hidden scroll-mt-24\" data-testid={`card-program-${branch.id}`}>\n                  <CardHeader className=\"pb-3\">\n                    <CardTitle className=\"text-xl flex items-center gap-2\" data-testid={`text-program-branch-${branch.id}-name`}>\n                      <MapPin className=\"w-5 h-5 text-primary\" />\n                      {branch.name}\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent className=\"p-0\">\n                    <div className=\"relative w-full\" style={{ height: '600px' }}>\n                      <iframe\n                        src={branch.iframeUrl}\n                        height=\"600\"\n                        width=\"100%\"\n                        frameBorder=\"0\"\n                        title={`${branch.name} Booking`}\n                        className=\"w-full h-full\"\n                        data-testid={`iframe-branch-${branch.id}`}\n                      />\n                    </div>\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n\n            {/* Jeddah Branches - Coming Soon */}\n            <motion.div\n              initial={{ y: 30, opacity: 0 }}\n              whileInView={{ y: 0, opacity: 1 }}\n              viewport={{ once: false, amount: 0.2 }}\n              transition={{ duration: 0.6 }}\n            >\n              <div className={`${language === 'ar' ? 'flex justify-start' : ''}`}>\n                <h3 className={`text-2xl font-semibold text-primary mb-6 flex items-center gap-2 ${language === 'ar' ? 'text-right' : ''}`} data-testid=\"text-jeddah-branches\">\n                  <lord-icon\n                    src=\"https://cdn.lordicon.com/dfwzmvnc.json\"\n                    trigger=\"loop\"\n                    delay=\"1500\"\n                    colors=\"primary:#18ac61,secondary:#264653\"\n                    style={{ width: '90px', height: '90px' }}\n                  />\n                  {t('bookNow.jeddahBranches')}\n                </h3>\n              </div>\n              \n              <Card className=\"text-center py-12\" data-testid=\"card-jeddah-coming-soon\">\n                <CardContent>\n                  <div className=\"flex justify-center mb-6\">\n                    <lord-icon\n                      src=\"https://cdn.lordicon.com/mmsmhvsw.json\"\n                      trigger=\"loop\"\n                      delay=\"1000\"\n                      colors=\"primary:#18ac61,secondary:#264653\"\n                      style={{ width: '90px', height: '90px' }}\n                    />\n                  </div>\n                  <p className=\"text-2xl font-semibold text-foreground mb-6\" data-testid=\"text-coming-soon\">\n                    {t('bookNow.comingSoon')}\n                  </p>\n                  \n                  {/* Countdown Timer */}\n                  <div className=\"grid grid-cols-3 md:grid-cols-6 gap-4 max-w-3xl mx-auto\">\n                    <div className=\"flex flex-col items-center p-3 bg-primary/5 rounded-lg\">\n                      <span className=\"text-3xl font-bold text-primary\" data-testid=\"countdown-months\">{formatNumber(countdown.months)}</span>\n                      <span className=\"text-sm text-foreground/60 mt-1\">{language === 'ar' ? 'شهور' : 'Months'}</span>\n                    </div>\n                    <div className=\"flex flex-col items-center p-3 bg-primary/5 rounded-lg\">\n                      <span className=\"text-3xl font-bold text-primary\" data-testid=\"countdown-weeks\">{formatNumber(countdown.weeks)}</span>\n                      <span className=\"text-sm text-foreground/60 mt-1\">{language === 'ar' ? 'أسابيع' : 'Weeks'}</span>\n                    </div>\n                    <div className=\"flex flex-col items-center p-3 bg-primary/5 rounded-lg\">\n                      <span className=\"text-3xl font-bold text-primary\" data-testid=\"countdown-days\">{formatNumber(countdown.days)}</span>\n                      <span className=\"text-sm text-foreground/60 mt-1\">{language === 'ar' ? 'أيام' : 'Days'}</span>\n                    </div>\n                    <div className=\"flex flex-col items-center p-3 bg-primary/5 rounded-lg\">\n                      <span className=\"text-3xl font-bold text-primary\" data-testid=\"countdown-hours\">{formatNumber(countdown.hours)}</span>\n                      <span className=\"text-sm text-foreground/60 mt-1\">{language === 'ar' ? 'ساعات' : 'Hours'}</span>\n                    </div>\n                    <div className=\"flex flex-col items-center p-3 bg-primary/5 rounded-lg\">\n                      <span className=\"text-3xl font-bold text-primary\" data-testid=\"countdown-minutes\">{formatNumber(countdown.minutes)}</span>\n                      <span className=\"text-sm text-foreground/60 mt-1\">{language === 'ar' ? 'دقائق' : 'Minutes'}</span>\n                    </div>\n                    <div className=\"flex flex-col items-center p-3 bg-primary/5 rounded-lg\">\n                      <span className=\"text-3xl font-bold text-primary\" data-testid=\"countdown-seconds\">{formatNumber(countdown.seconds)}</span>\n                      <span className=\"text-sm text-foreground/60 mt-1\">{language === 'ar' ? 'ثواني' : 'Seconds'}</span>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n          </div>\n        </div>\n      </section>\n\n      <HeartbeatDivider />\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":17456},"server/objectStorage.ts":{"content":"import { Storage, File } from \"@google-cloud/storage\";\nimport { Response } from \"express\";\nimport { randomUUID } from \"crypto\";\nimport {\n  ObjectAclPolicy,\n  ObjectPermission,\n  canAccessObject,\n  getObjectAclPolicy,\n  setObjectAclPolicy,\n} from \"./objectAcl\";\n\nconst REPLIT_SIDECAR_ENDPOINT = \"http://127.0.0.1:1106\";\n\nexport const objectStorageClient = new Storage({\n  credentials: {\n    audience: \"replit\",\n    subject_token_type: \"access_token\",\n    token_url: `${REPLIT_SIDECAR_ENDPOINT}/token`,\n    type: \"external_account\",\n    credential_source: {\n      url: `${REPLIT_SIDECAR_ENDPOINT}/credential`,\n      format: {\n        type: \"json\",\n        subject_token_field_name: \"access_token\",\n      },\n    },\n    universe_domain: \"googleapis.com\",\n  },\n  projectId: \"\",\n});\n\nexport class ObjectNotFoundError extends Error {\n  constructor() {\n    super(\"Object not found\");\n    this.name = \"ObjectNotFoundError\";\n    Object.setPrototypeOf(this, ObjectNotFoundError.prototype);\n  }\n}\n\nexport class ObjectStorageService {\n  constructor() {}\n\n  getPublicObjectSearchPaths(): Array<string> {\n    const pathsStr = process.env.PUBLIC_OBJECT_SEARCH_PATHS || \"\";\n    const paths = Array.from(\n      new Set(\n        pathsStr\n          .split(\",\")\n          .map((path) => path.trim())\n          .filter((path) => path.length > 0)\n      )\n    );\n    if (paths.length === 0) {\n      throw new Error(\n        \"PUBLIC_OBJECT_SEARCH_PATHS not set. Create a bucket in 'Object Storage' \" +\n          \"tool and set PUBLIC_OBJECT_SEARCH_PATHS env var (comma-separated paths).\"\n      );\n    }\n    return paths;\n  }\n\n  getPrivateObjectDir(): string {\n    const dir = process.env.PRIVATE_OBJECT_DIR || \"\";\n    if (!dir) {\n      throw new Error(\n        \"PRIVATE_OBJECT_DIR not set. Create a bucket in 'Object Storage' \" +\n          \"tool and set PRIVATE_OBJECT_DIR env var.\"\n      );\n    }\n    return dir;\n  }\n\n  async searchPublicObject(filePath: string): Promise<File | null> {\n    for (const searchPath of this.getPublicObjectSearchPaths()) {\n      const fullPath = `${searchPath}/${filePath}`;\n      const { bucketName, objectName } = parseObjectPath(fullPath);\n      const bucket = objectStorageClient.bucket(bucketName);\n      const file = bucket.file(objectName);\n      const [exists] = await file.exists();\n      if (exists) {\n        return file;\n      }\n    }\n    return null;\n  }\n\n  async downloadObject(file: File, res: Response, cacheTtlSec: number = 3600) {\n    try {\n      const [metadata] = await file.getMetadata();\n      const aclPolicy = await getObjectAclPolicy(file);\n      const isPublic = aclPolicy?.visibility === \"public\";\n      res.set({\n        \"Content-Type\": metadata.contentType || \"application/octet-stream\",\n        \"Content-Length\": metadata.size,\n        \"Cache-Control\": `${\n          isPublic ? \"public\" : \"private\"\n        }, max-age=${cacheTtlSec}`,\n      });\n      const stream = file.createReadStream();\n      stream.on(\"error\", (err) => {\n        console.error(\"Stream error:\", err);\n        if (!res.headersSent) {\n          res.status(500).json({ error: \"Error streaming file\" });\n        }\n      });\n      stream.pipe(res);\n    } catch (error) {\n      console.error(\"Error downloading file:\", error);\n      if (!res.headersSent) {\n        res.status(500).json({ error: \"Error downloading file\" });\n      }\n    }\n  }\n\n  async getObjectEntityUploadURL(): Promise<string> {\n    const privateObjectDir = this.getPrivateObjectDir();\n    if (!privateObjectDir) {\n      throw new Error(\n        \"PRIVATE_OBJECT_DIR not set. Create a bucket in 'Object Storage' \" +\n          \"tool and set PRIVATE_OBJECT_DIR env var.\"\n      );\n    }\n\n    const objectId = randomUUID();\n    const fullPath = `${privateObjectDir}/uploads/${objectId}`;\n    const { bucketName, objectName } = parseObjectPath(fullPath);\n    return signObjectURL({\n      bucketName,\n      objectName,\n      method: \"PUT\",\n      ttlSec: 900,\n    });\n  }\n\n  async getObjectEntityFile(objectPath: string): Promise<File> {\n    if (!objectPath.startsWith(\"/objects/\")) {\n      throw new ObjectNotFoundError();\n    }\n    const parts = objectPath.slice(1).split(\"/\");\n    if (parts.length < 2) {\n      throw new ObjectNotFoundError();\n    }\n    const entityId = parts.slice(1).join(\"/\");\n    let entityDir = this.getPrivateObjectDir();\n    if (!entityDir.endsWith(\"/\")) {\n      entityDir = `${entityDir}/`;\n    }\n    const objectEntityPath = `${entityDir}${entityId}`;\n    const { bucketName, objectName } = parseObjectPath(objectEntityPath);\n    const bucket = objectStorageClient.bucket(bucketName);\n    const objectFile = bucket.file(objectName);\n    const [exists] = await objectFile.exists();\n    if (!exists) {\n      throw new ObjectNotFoundError();\n    }\n    return objectFile;\n  }\n\n  normalizeObjectEntityPath(rawPath: string): string {\n    if (!rawPath.startsWith(\"https://storage.googleapis.com/\")) {\n      return rawPath;\n    }\n    const url = new URL(rawPath);\n    const rawObjectPath = url.pathname;\n    let objectEntityDir = this.getPrivateObjectDir();\n    if (!objectEntityDir.endsWith(\"/\")) {\n      objectEntityDir = `${objectEntityDir}/`;\n    }\n    if (!rawObjectPath.startsWith(objectEntityDir)) {\n      return rawObjectPath;\n    }\n    const entityId = rawObjectPath.slice(objectEntityDir.length);\n    return `/objects/${entityId}`;\n  }\n\n  async trySetObjectEntityAclPolicy(\n    rawPath: string,\n    aclPolicy: ObjectAclPolicy\n  ): Promise<string> {\n    const normalizedPath = this.normalizeObjectEntityPath(rawPath);\n    if (!normalizedPath.startsWith(\"/\")) {\n      return normalizedPath;\n    }\n    const objectFile = await this.getObjectEntityFile(normalizedPath);\n    await setObjectAclPolicy(objectFile, aclPolicy);\n    return normalizedPath;\n  }\n\n  async canAccessObjectEntity({\n    objectFile,\n    requestedPermission,\n  }: {\n    objectFile: File;\n    requestedPermission?: ObjectPermission;\n  }): Promise<boolean> {\n    return canAccessObject({\n      objectFile,\n      requestedPermission: requestedPermission ?? ObjectPermission.READ,\n    });\n  }\n}\n\nfunction parseObjectPath(path: string): {\n  bucketName: string;\n  objectName: string;\n} {\n  if (!path.startsWith(\"/\")) {\n    path = `/${path}`;\n  }\n  const pathParts = path.split(\"/\");\n  if (pathParts.length < 3) {\n    throw new Error(\"Invalid path: must contain at least a bucket name\");\n  }\n  const bucketName = pathParts[1];\n  const objectName = pathParts.slice(2).join(\"/\");\n  return {\n    bucketName,\n    objectName,\n  };\n}\n\nasync function signObjectURL({\n  bucketName,\n  objectName,\n  method,\n  ttlSec,\n}: {\n  bucketName: string;\n  objectName: string;\n  method: \"GET\" | \"PUT\" | \"DELETE\" | \"HEAD\";\n  ttlSec: number;\n}): Promise<string> {\n  const request = {\n    bucket_name: bucketName,\n    object_name: objectName,\n    method,\n    expires_at: new Date(Date.now() + ttlSec * 1000).toISOString(),\n  };\n  const response = await fetch(\n    `${REPLIT_SIDECAR_ENDPOINT}/object-storage/signed-object-url`,\n    {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(request),\n    }\n  );\n  if (!response.ok) {\n    throw new Error(\n      `Failed to sign object URL, errorcode: ${response.status}, ` +\n        `make sure you're running on Replit`\n    );\n  }\n  const { signed_url: signedURL } = await response.json();\n  return signedURL;\n}\n","size_bytes":7348},"client/src/components/ObjectUploader.tsx":{"content":"import { useState } from \"react\";\nimport type { ReactNode } from \"react\";\nimport Uppy from \"@uppy/core\";\nimport { DashboardModal } from \"@uppy/react\";\nimport AwsS3 from \"@uppy/aws-s3\";\nimport type { UploadResult } from \"@uppy/core\";\nimport { Button } from \"@/components/ui/button\";\n\ninterface ObjectUploaderProps {\n  maxNumberOfFiles?: number;\n  maxFileSize?: number;\n  onGetUploadParameters: () => Promise<{\n    method: \"PUT\";\n    url: string;\n  }>;\n  onComplete?: (\n    result: UploadResult<Record<string, unknown>, Record<string, unknown>>\n  ) => void;\n  buttonClassName?: string;\n  children: ReactNode;\n}\n\nexport function ObjectUploader({\n  maxNumberOfFiles = 1,\n  maxFileSize = 10485760, // 10MB default\n  onGetUploadParameters,\n  onComplete,\n  buttonClassName,\n  children,\n}: ObjectUploaderProps) {\n  const [showModal, setShowModal] = useState(false);\n  const [uppy] = useState(() =>\n    new Uppy({\n      restrictions: {\n        maxNumberOfFiles,\n        maxFileSize,\n      },\n      autoProceed: false,\n    })\n      .use(AwsS3, {\n        shouldUseMultipart: false,\n        getUploadParameters: onGetUploadParameters,\n      })\n      .on(\"complete\", (result) => {\n        onComplete?.(result);\n      })\n  );\n\n  return (\n    <div>\n      <Button onClick={() => setShowModal(true)} className={buttonClassName} data-testid=\"button-upload\">\n        {children}\n      </Button>\n\n      <DashboardModal\n        uppy={uppy}\n        open={showModal}\n        onRequestClose={() => setShowModal(false)}\n        proudlyDisplayPoweredByUppy={false}\n      />\n    </div>\n  );\n}\n","size_bytes":1565},"client/src/components/PromotionalModal.tsx":{"content":"import { useState, useEffect } from 'react';\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogDescription } from '@/components/ui/dialog';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { Gift, Globe } from 'lucide-react';\nimport { useToast } from '@/hooks/use-toast';\nimport { apiRequest, queryClient } from '@/lib/queryClient';\nimport { useLanguage } from '@/contexts/LanguageContext';\nimport confetti from 'canvas-confetti';\n\ninterface PromotionalModalProps {\n  open: boolean;\n  onClose: () => void;\n}\n\nexport default function PromotionalModal({ open, onClose }: PromotionalModalProps) {\n  const { toast } = useToast();\n  const { t, language, setLanguage } = useLanguage();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [phoneError, setPhoneError] = useState<string | null>(null);\n  const [emailError, setEmailError] = useState<string | null>(null);\n  const [isCheckingPhone, setIsCheckingPhone] = useState(false);\n  const [isCheckingEmail, setIsCheckingEmail] = useState(false);\n  const [showSuccess, setShowSuccess] = useState(false);\n  const [submittedPhone, setSubmittedPhone] = useState('');\n  const [doNotShowAgain, setDoNotShowAgain] = useState(false);\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    emailAddress: '',\n    phoneNumber: '',\n  });\n\n  // Debounce phone number validation\n  useEffect(() => {\n    const checkPhone = async () => {\n      if (formData.phoneNumber.length >= 10) {\n        setIsCheckingPhone(true);\n        try {\n          const response = await fetch(`/api/opening-discount/check-phone/${formData.phoneNumber}`);\n          const data = await response.json();\n          if (data.exists) {\n            setPhoneError(t('promo.phoneAlreadyRegistered'));\n          } else {\n            setPhoneError(null);\n          }\n        } catch (error) {\n          console.error('Error checking phone:', error);\n        } finally {\n          setIsCheckingPhone(false);\n        }\n      } else {\n        setPhoneError(null);\n      }\n    };\n\n    const timeoutId = setTimeout(checkPhone, 500);\n    return () => clearTimeout(timeoutId);\n  }, [formData.phoneNumber, t]);\n\n  // Debounce email validation\n  useEffect(() => {\n    const checkEmail = async () => {\n      // Simple email validation regex\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      \n      if (formData.emailAddress.length > 0) {\n        if (!emailRegex.test(formData.emailAddress)) {\n          setEmailError(t('promo.invalidEmail'));\n          return;\n        }\n\n        setIsCheckingEmail(true);\n        try {\n          const response = await fetch(`/api/opening-discount/check-email/${encodeURIComponent(formData.emailAddress)}`);\n          const data = await response.json();\n          if (data.exists) {\n            setEmailError(t('promo.emailAlreadyRegistered'));\n          } else {\n            setEmailError(null);\n          }\n        } catch (error) {\n          console.error('Error checking email:', error);\n        } finally {\n          setIsCheckingEmail(false);\n        }\n      } else {\n        setEmailError(null);\n      }\n    };\n\n    const timeoutId = setTimeout(checkEmail, 500);\n    return () => clearTimeout(timeoutId);\n  }, [formData.emailAddress, t]);\n\n  const handleOkClick = () => {\n    setShowSuccess(false);\n    setSubmittedPhone('');\n    if (doNotShowAgain) {\n      localStorage.setItem('hasSeenPromoModal', 'true');\n    }\n    onClose();\n  };\n\n  const showCelebration = () => {\n    const colors = ['#18ac61', '#f4a261', '#e76f51', '#264653', '#2a9d8f'];\n    \n    // First burst from center\n    confetti({\n      particleCount: 100,\n      spread: 70,\n      origin: { y: 0.6 },\n      colors: colors\n    });\n\n    // Left side burst\n    setTimeout(() => {\n      confetti({\n        particleCount: 50,\n        angle: 60,\n        spread: 55,\n        origin: { x: 0 },\n        colors: colors\n      });\n    }, 100);\n\n    // Right side burst\n    setTimeout(() => {\n      confetti({\n        particleCount: 50,\n        angle: 120,\n        spread: 55,\n        origin: { x: 1 },\n        colors: colors\n      });\n    }, 100);\n\n    // Final center burst\n    setTimeout(() => {\n      confetti({\n        particleCount: 80,\n        spread: 100,\n        origin: { y: 0.6 },\n        colors: colors,\n        ticks: 200\n      });\n    }, 250);\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    // Validate phone number length\n    if (formData.phoneNumber.length !== 10) {\n      setPhoneError(t('promo.phoneNumberMustBe10Digits'));\n      return;\n    }\n    \n    // Prevent submission if phone or email error exists\n    if (phoneError || emailError) {\n      return;\n    }\n    \n    setIsSubmitting(true);\n\n    try {\n      await apiRequest('POST', '/api/opening-discount', {\n        ...formData,\n        language\n      });\n\n      // Store the phone number for success message\n      setSubmittedPhone(formData.phoneNumber);\n\n      // Show celebration effect\n      showCelebration();\n\n      // Show success message after celebration\n      setTimeout(() => {\n        setShowSuccess(true);\n        setFormData({ firstName: '', lastName: '', emailAddress: '', phoneNumber: '' });\n      }, 1000);\n    } catch (error: any) {\n      let errorMessage = t('promo.errorGeneric');\n      \n      if (error instanceof Error) {\n        if (error.message.includes('409') || error.message.includes('Phone number already registered')) {\n          errorMessage = t('promo.errorDuplicate');\n        }\n      }\n      \n      toast({\n        title: t('promo.errorTitle'),\n        description: errorMessage,\n        variant: 'destructive',\n      });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const handleCloseModal = () => {\n    if (doNotShowAgain) {\n      localStorage.setItem('hasSeenPromoModal', 'true');\n    }\n    onClose();\n  };\n\n  return (\n    <Dialog open={open} onOpenChange={handleCloseModal}>\n      <DialogContent className=\"max-w-[95vw] sm:max-w-[500px] p-0 overflow-hidden [&>button]:z-50\" dir={language === 'ar' ? 'rtl' : 'ltr'}>\n        {!showSuccess ? (\n          <>\n            <div className=\"absolute top-4 z-10 w-full px-4\">\n              <div className=\"flex items-center justify-between pt-[15px]\">\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  onClick={() => setLanguage(language === 'en' ? 'ar' : 'en')}\n                  className=\"flex items-center gap-2\"\n                  data-testid=\"button-language-switcher\"\n                >\n                  <Globe className=\"w-4 h-4\" />\n                  {language === 'en' ? 'العربية' : 'English'}\n                </Button>\n                \n                <div className=\"flex items-center gap-2\" dir={language === 'ar' ? 'rtl' : 'ltr'}>\n                  <Checkbox \n                    id=\"doNotShowAgain\" \n                    checked={doNotShowAgain}\n                    onCheckedChange={(checked) => setDoNotShowAgain(checked as boolean)}\n                    data-testid=\"checkbox-do-not-show\"\n                  />\n                  <Label \n                    htmlFor=\"doNotShowAgain\" \n                    className=\"text-sm cursor-pointer\"\n                    data-testid=\"label-do-not-show\"\n                  >\n                    {t('promo.doNotShowAgain')}\n                  </Label>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"bg-gradient-to-br from-primary/10 to-primary/5 p-4 sm:p-8 pt-12 text-center border-b\">\n              <div className=\"mx-auto w-16 h-16 bg-primary/20 rounded-full flex items-center justify-center mb-4\">\n                <Gift className=\"w-8 h-8 text-primary\" />\n              </div>\n              <DialogHeader>\n                <DialogTitle className=\"text-xl sm:text-2xl font-bold text-primary mb-2\">\n                  {t('promo.title')}\n                </DialogTitle>\n                <DialogDescription className=\"text-base sm:text-lg text-foreground/90\">\n                  {t('promo.description')}\n                </DialogDescription>\n              </DialogHeader>\n            </div>\n\n            <form onSubmit={handleSubmit} className=\"p-4 sm:p-6 space-y-4 sm:space-y-6\">\n              <div className=\"space-y-4\">\n                <div className=\"space-y-2\">\n                  <div className=\"flex justify-between items-center\">\n                    <Label htmlFor=\"firstName\" className={language === 'ar' ? 'text-right' : 'text-left'}>\n                      {t('promo.firstName')} <span className=\"text-destructive\">{t('promo.required')}</span>\n                    </Label>\n                    <span className=\"text-xs text-muted-foreground\">\n                      {formData.firstName.length}/20\n                    </span>\n                  </div>\n                  <Input\n                    id=\"firstName\"\n                    value={formData.firstName}\n                    onChange={(e) => setFormData({ ...formData, firstName: e.target.value })}\n                    maxLength={20}\n                    required\n                    dir={language === 'ar' ? 'rtl' : 'ltr'}\n                    placeholder={t('promo.firstNamePlaceholder')}\n                    data-testid=\"input-first-name\"\n                  />\n                </div>\n\n                <div className=\"space-y-2\">\n                  <div className=\"flex justify-between items-center\">\n                    <Label htmlFor=\"lastName\" className={language === 'ar' ? 'text-right' : 'text-left'}>\n                      {t('promo.lastName')} <span className=\"text-destructive\">{t('promo.required')}</span>\n                    </Label>\n                    <span className=\"text-xs text-muted-foreground\">\n                      {formData.lastName.length}/20\n                    </span>\n                  </div>\n                  <Input\n                    id=\"lastName\"\n                    value={formData.lastName}\n                    onChange={(e) => setFormData({ ...formData, lastName: e.target.value })}\n                    maxLength={20}\n                    required\n                    dir={language === 'ar' ? 'rtl' : 'ltr'}\n                    placeholder={t('promo.lastNamePlaceholder')}\n                    data-testid=\"input-last-name\"\n                  />\n                </div>\n\n                <div className=\"space-y-2\">\n                  <div className=\"flex justify-between items-center\">\n                    <Label htmlFor=\"emailAddress\" className={language === 'ar' ? 'text-right' : 'text-left'}>\n                      {t('promo.email')} <span className=\"text-destructive\">{t('promo.required')}</span>\n                    </Label>\n                    <span className=\"text-xs text-muted-foreground\">\n                      {formData.emailAddress.length}/50\n                    </span>\n                  </div>\n                  <Input\n                    id=\"emailAddress\"\n                    type=\"email\"\n                    value={formData.emailAddress}\n                    onChange={(e) => setFormData({ ...formData, emailAddress: e.target.value })}\n                    maxLength={50}\n                    required\n                    dir=\"ltr\"\n                    placeholder={t('promo.emailPlaceholder')}\n                    data-testid=\"input-email\"\n                    className={emailError ? 'border-destructive' : ''}\n                  />\n                  {emailError && (\n                    <p className=\"text-sm text-destructive\" data-testid=\"text-email-error\">\n                      {emailError}\n                    </p>\n                  )}\n                </div>\n\n                <div className=\"space-y-2\">\n                  <div className=\"flex justify-between items-center\">\n                    <Label htmlFor=\"phoneNumber\" className={language === 'ar' ? 'text-right' : 'text-left'}>\n                      {t('promo.phoneNumber')} <span className=\"text-destructive\">{t('promo.required')}</span>\n                    </Label>\n                    <span className=\"text-xs text-muted-foreground\">\n                      {formData.phoneNumber.length}/10\n                    </span>\n                  </div>\n                  <Input\n                    id=\"phoneNumber\"\n                    type=\"tel\"\n                    value={formData.phoneNumber}\n                    onChange={(e) => setFormData({ ...formData, phoneNumber: e.target.value.replace(/\\D/g, '') })}\n                    maxLength={10}\n                    required\n                    dir=\"ltr\"\n                    placeholder={t('promo.phoneNumberPlaceholder')}\n                    data-testid=\"input-phone-number\"\n                    className={phoneError ? 'border-destructive' : ''}\n                  />\n                  {phoneError && (\n                    <p className=\"text-sm text-destructive\" data-testid=\"text-phone-error\">\n                      {phoneError}\n                    </p>\n                  )}\n                </div>\n              </div>\n\n              <Button\n                type=\"submit\"\n                className=\"w-full\"\n                disabled={isSubmitting || !!phoneError || !!emailError}\n                data-testid=\"button-submit-registration\"\n              >\n                {isSubmitting ? t('promo.submitting') : t('promo.submit')}\n              </Button>\n            </form>\n          </>\n        ) : (\n          <div className=\"p-4 sm:p-8 text-center space-y-4 sm:space-y-6\">\n            <div className=\"mx-auto w-20 h-20 bg-primary/20 rounded-full flex items-center justify-center mb-4\">\n              <Gift className=\"w-10 h-10 text-primary\" />\n            </div>\n            \n            <div className=\"space-y-3\">\n              <h3 className=\"text-xl sm:text-2xl font-bold text-primary\">\n                {t('promo.successSubscription')}\n              </h3>\n              <p className=\"text-base sm:text-lg text-foreground/80\">\n                {t('promo.subscriptionCode')}\n              </p>\n              <p className=\"text-xl sm:text-2xl font-bold text-primary\" dir=\"ltr\">\n                {submittedPhone}\n              </p>\n            </div>\n\n            <Button\n              onClick={handleOkClick}\n              className=\"w-full mt-6\"\n              data-testid=\"button-ok-success\"\n            >\n              {t('promo.okButton')}\n            </Button>\n          </div>\n        )}\n      </DialogContent>\n    </Dialog>\n  );\n}\n","size_bytes":14498},"server/objectAcl.ts":{"content":"import { File } from \"@google-cloud/storage\";\n\nconst ACL_POLICY_METADATA_KEY = \"custom:aclPolicy\";\n\nexport enum ObjectPermission {\n  READ = \"read\",\n  WRITE = \"write\",\n}\n\nexport interface ObjectAclPolicy {\n  owner: string;\n  visibility: \"public\" | \"private\";\n}\n\nexport async function setObjectAclPolicy(\n  objectFile: File,\n  aclPolicy: ObjectAclPolicy,\n): Promise<void> {\n  const [exists] = await objectFile.exists();\n  if (!exists) {\n    throw new Error(`Object not found: ${objectFile.name}`);\n  }\n\n  await objectFile.setMetadata({\n    metadata: {\n      [ACL_POLICY_METADATA_KEY]: JSON.stringify(aclPolicy),\n    },\n  });\n}\n\nexport async function getObjectAclPolicy(\n  objectFile: File,\n): Promise<ObjectAclPolicy | null> {\n  const [metadata] = await objectFile.getMetadata();\n  const aclPolicy = metadata?.metadata?.[ACL_POLICY_METADATA_KEY];\n  if (!aclPolicy) {\n    return null;\n  }\n  return JSON.parse(aclPolicy as string);\n}\n\nexport async function canAccessObject({\n  objectFile,\n  requestedPermission,\n}: {\n  objectFile: File;\n  requestedPermission: ObjectPermission;\n}): Promise<boolean> {\n  const aclPolicy = await getObjectAclPolicy(objectFile);\n  if (!aclPolicy) {\n    return false;\n  }\n\n  if (\n    aclPolicy.visibility === \"public\" &&\n    requestedPermission === ObjectPermission.READ\n  ) {\n    return true;\n  }\n\n  return false;\n}\n","size_bytes":1342},"client/src/components/AdminManagement.tsx":{"content":"import { useState, useEffect, ReactNode } from \"react\";\nimport { useQuery, useMutation } from \"@tanstack/react-query\";\nimport { useForm, UseFormReturn } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useLocation } from \"wouter\";\nimport { X } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Form } from \"@/components/ui/form\";\nimport { SidebarProvider, SidebarTrigger } from \"@/components/ui/sidebar\";\nimport { AdminSidebar } from \"@/components/AdminSidebar\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest, queryClient } from \"@/lib/queryClient\";\nimport { ZodSchema } from \"zod\";\nimport ECGAnimation from \"@/components/ECGAnimation\";\n\ninterface AdminManagementProps {\n  entityName: string;\n  entityNamePlural: string;\n  apiEndpoint: string;\n  formSchema: ZodSchema<any>;\n  defaultValues: any;\n  description?: string;\n  transformDataForSubmit?: (data: any) => any;\n  transformDataForEdit?: (entity: any) => any;\n  renderFormFields: (form: UseFormReturn<any>, editingId: number | null, customState?: any) => ReactNode;\n  renderTableColumns: () => { header: string; width?: string }[];\n  renderTableRow: (item: any, onEdit: (item: any) => void, onDelete: (id: number) => void) => ReactNode;\n  customState?: any;\n  onCustomStateChange?: (state: any) => void;\n}\n\nexport function AdminManagement({\n  entityName,\n  entityNamePlural,\n  apiEndpoint,\n  formSchema,\n  defaultValues,\n  description,\n  transformDataForSubmit = (data) => data,\n  transformDataForEdit = (entity) => entity,\n  renderFormFields,\n  renderTableColumns,\n  renderTableRow,\n  customState,\n  onCustomStateChange,\n}: AdminManagementProps) {\n  const { toast } = useToast();\n  const [, setLocation] = useLocation();\n  const [editingId, setEditingId] = useState<number | null>(null);\n\n  useEffect(() => {\n    const isAuthenticated = localStorage.getItem('adminAuthenticated') === 'true';\n    if (!isAuthenticated) {\n      setLocation('/login-admin');\n    }\n  }, [setLocation]);\n\n  const { data: items = [], isLoading } = useQuery<any[]>({\n    queryKey: [apiEndpoint],\n  });\n\n  const form = useForm({\n    resolver: zodResolver(formSchema),\n    defaultValues,\n  });\n\n  const createMutation = useMutation({\n    mutationFn: async (data: any) => {\n      const transformedData = transformDataForSubmit(data);\n      return apiRequest(\"POST\", apiEndpoint, transformedData);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [apiEndpoint] });\n      form.reset();\n      if (onCustomStateChange) {\n        onCustomStateChange(undefined);\n      }\n      toast({\n        title: \"Success\",\n        description: `${entityName} created successfully`,\n      });\n    },\n    onError: () => {\n      toast({\n        title: \"Error\",\n        description: `Failed to create ${entityName.toLowerCase()}`,\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const updateMutation = useMutation({\n    mutationFn: async ({ id, data }: { id: number; data: any }) => {\n      const transformedData = transformDataForSubmit(data);\n      return apiRequest(\"PUT\", `${apiEndpoint}/${id}`, transformedData);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [apiEndpoint] });\n      form.reset();\n      setEditingId(null);\n      if (onCustomStateChange) {\n        onCustomStateChange(undefined);\n      }\n      toast({\n        title: \"Success\",\n        description: `${entityName} updated successfully`,\n      });\n    },\n    onError: () => {\n      toast({\n        title: \"Error\",\n        description: `Failed to update ${entityName.toLowerCase()}`,\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const deleteMutation = useMutation({\n    mutationFn: async (id: number) => {\n      return apiRequest(\"DELETE\", `${apiEndpoint}/${id}`);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [apiEndpoint] });\n      toast({\n        title: \"Success\",\n        description: `${entityName} deleted successfully`,\n      });\n    },\n    onError: () => {\n      toast({\n        title: \"Error\",\n        description: `Failed to delete ${entityName.toLowerCase()}`,\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  function onSubmit(data: any) {\n    if (editingId !== null) {\n      updateMutation.mutate({ id: editingId, data });\n    } else {\n      createMutation.mutate(data);\n    }\n  }\n\n  function handleEdit(item: any) {\n    setEditingId(item.id);\n    const formData = transformDataForEdit(item);\n    form.reset(formData);\n  }\n\n  function handleCancelEdit() {\n    setEditingId(null);\n    form.reset();\n    if (onCustomStateChange) {\n      onCustomStateChange(undefined);\n    }\n  }\n\n  function handleDelete(id: number) {\n    if (confirm(`Are you sure you want to delete this ${entityName.toLowerCase()}?`)) {\n      deleteMutation.mutate(id);\n    }\n  }\n\n  const style = {\n    '--sidebar-width': '16rem',\n    '--sidebar-width-icon': '3rem',\n  };\n\n  const columns = renderTableColumns();\n\n  return (\n    <SidebarProvider style={style as React.CSSProperties}>\n      <div className=\"flex h-screen w-full\">\n        <AdminSidebar />\n        <div className=\"flex flex-col flex-1\">\n          <header className=\"flex items-center gap-4 p-4 border-b bg-[#264653]\">\n            <SidebarTrigger className=\"text-white\" data-testid=\"button-sidebar-toggle\" />\n            <h1 className=\"text-xl font-display text-white\" data-testid=\"text-page-title\">\n              {entityNamePlural} Management\n            </h1>\n          </header>\n          <ECGAnimation />\n          <main className=\"flex-1 overflow-auto\">\n            <div className=\"p-6 space-y-6\">\n              <div>\n                <h2 className=\"text-3xl font-bold text-foreground\">{entityNamePlural}</h2>\n                {description && (\n                  <p className=\"text-muted-foreground mt-1\">{description}</p>\n                )}\n              </div>\n\n              <div className=\"grid lg:grid-cols-2 gap-6\">\n                <Card>\n                  <CardHeader>\n                    <CardTitle>\n                      {editingId !== null ? `Edit ${entityName}` : `Add New ${entityName}`}\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <Form {...form}>\n                      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n                        {renderFormFields(form, editingId, customState)}\n                        <div className=\"flex gap-2\">\n                          <Button\n                            type=\"submit\"\n                            disabled={createMutation.isPending || updateMutation.isPending}\n                            data-testid=\"button-submit\"\n                          >\n                            {editingId !== null ? \"Update\" : \"Create\"}\n                          </Button>\n                          {editingId !== null && (\n                            <Button\n                              type=\"button\"\n                              variant=\"outline\"\n                              onClick={handleCancelEdit}\n                              data-testid=\"button-cancel\"\n                            >\n                              <X className=\"h-4 w-4 mr-2\" />\n                              Cancel\n                            </Button>\n                          )}\n                        </div>\n                      </form>\n                    </Form>\n                  </CardContent>\n                </Card>\n\n                <Card>\n                  <CardHeader>\n                    <CardTitle>Existing {entityNamePlural}</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    {isLoading ? (\n                      <p className=\"text-muted-foreground\">Loading...</p>\n                    ) : items.length === 0 ? (\n                      <p className=\"text-muted-foreground\">No {entityNamePlural.toLowerCase()} yet</p>\n                    ) : (\n                      <div className=\"overflow-x-auto\">\n                        <table className=\"w-full\" data-testid=\"table-items\">\n                          <thead>\n                            <tr className=\"border-b\">\n                              {columns.map((col, idx) => (\n                                <th\n                                  key={idx}\n                                  className=\"text-left py-2 px-2 text-sm font-semibold\"\n                                  style={col.width ? { width: col.width } : undefined}\n                                >\n                                  {col.header}\n                                </th>\n                              ))}\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {items.map((item) => renderTableRow(item, handleEdit, handleDelete))}\n                          </tbody>\n                        </table>\n                      </div>\n                    )}\n                  </CardContent>\n                </Card>\n              </div>\n            </div>\n          </main>\n        </div>\n      </div>\n    </SidebarProvider>\n  );\n}\n","size_bytes":9217},"client/src/components/ECGAnimation.tsx":{"content":"export default function ECGAnimation() {\n  return (\n    <div className=\"w-full overflow-hidden bg-background\">\n      <div className=\"relative h-20 md:h-24\">\n        <svg\n          className=\"w-full h-full absolute inset-0\"\n          viewBox=\"0 0 1200 140\"\n          preserveAspectRatio=\"xMidYMid meet\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <defs>\n            <pattern\n              id=\"ecg-pattern-header\"\n              x=\"0\"\n              y=\"0\"\n              width=\"400\"\n              height=\"140\"\n              patternUnits=\"userSpaceOnUse\"\n            >\n              <animateTransform\n                attributeName=\"patternTransform\"\n                type=\"translate\"\n                from=\"0 0\"\n                to=\"400 0\"\n                dur=\"12s\"\n                repeatCount=\"indefinite\"\n              />\n              <path\n                className=\"ecg-path\"\n                d=\"M0,70 L60,70 L65,65 L70,70 L75,70 L80,70 L85,50 L90,90 L95,70 L100,70 L105,75 L110,70 L115,70 L400,70\"\n                fill=\"none\"\n                stroke=\"#18ac61\"\n                strokeWidth=\"4\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              />\n            </pattern>\n          </defs>\n          \n          <rect\n            x=\"-400\"\n            y=\"0\"\n            width=\"2000\"\n            height=\"140\"\n            fill=\"url(#ecg-pattern-header)\"\n          />\n        </svg>\n      </div>\n      \n      <style>{`\n        @media (min-width: 768px) {\n          .ecg-path {\n            stroke-width: 2.5;\n          }\n        }\n      `}</style>\n    </div>\n  );\n}\n","size_bytes":1613},"server/email-service.ts":{"content":"import { Client } from '@microsoft/microsoft-graph-client';\nimport { ClientSecretCredential } from '@azure/identity';\n\n// Initialize Azure credentials\nconst credential = new ClientSecretCredential(\n  process.env.AZURE_TENANT_ID!,\n  process.env.AZURE_CLIENT_ID!,\n  process.env.AZURE_CLIENT_SECRET!\n);\n\n// Initialize Graph client\nconst getGraphClient = () => {\n  return Client.initWithMiddleware({\n    authProvider: {\n      getAccessToken: async () => {\n        const token = await credential.getToken('https://graph.microsoft.com/.default');\n        return token.token;\n      }\n    }\n  });\n};\n\ninterface DiscountEmailParams {\n  firstName: string;\n  lastName: string;\n  email: string;\n  discountCode: string;\n  language: 'en' | 'ar';\n}\n\nconst createEmailTemplate = (params: DiscountEmailParams): string => {\n  const { firstName, lastName, discountCode, language } = params;\n  \n  if (language === 'ar') {\n    return `\n<!DOCTYPE html>\n<html lang=\"ar\" dir=\"rtl\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n  <link href=\"https://fonts.googleapis.com/css2?family=Rubik:wght@400;500;600&family=Poppins:wght@300;400;600;700&display=swap\" rel=\"stylesheet\">\n  <title>رمز الخصم الخاص بك</title>\n</head>\n<body style=\"margin: 0; padding: 0; font-family: 'Poppins', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; background-color: #f5f5f5;\">\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" style=\"background-color: #f5f5f5; padding: 40px 20px;\">\n    <tr>\n      <td align=\"center\">\n        <table width=\"600\" cellpadding=\"0\" cellspacing=\"0\" style=\"background-color: #ffffff; border-radius: 12px; overflow: hidden; box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\">\n          <!-- Header -->\n          <tr>\n            <td style=\"background: linear-gradient(135deg, #17a35b 0%, #139049 100%); padding: 40px 30px; text-align: center;\">\n              <h1 style=\"margin: 0; color: #ffffff; font-size: 32px; font-weight: 600; font-family: 'Rubik', sans-serif;\">🎉 مرحباً بك في عائلة د. باوز!</h1>\n            </td>\n          </tr>\n          \n          <!-- Body -->\n          <tr>\n            <td style=\"padding: 40px 30px;\">\n              <p style=\"margin: 0 0 20px; color: #333333; font-size: 18px; line-height: 1.6;\">\n                عزيزي/عزيزتي ${firstName} ${lastName}،\n              </p>\n              \n              <p style=\"margin: 0 0 20px; color: #555555; font-size: 16px; line-height: 1.6;\">\n                شكراً لتسجيلك في عرض افتتاح فرعنا الجديد في جدة! 🎊\n              </p>\n              \n              <p style=\"margin: 0 0 30px; color: #555555; font-size: 16px; line-height: 1.6;\">\n                نحن متحمسون لخدمتك ورعاية حيواناتك الأليفة بأفضل خدمات بيطرية في المنطقة.\n              </p>\n              \n              <!-- Discount Code Box -->\n              <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" style=\"margin: 30px 0;\">\n                <tr>\n                  <td style=\"background: linear-gradient(135deg, #f4a261 0%, #e76f51 100%); border-radius: 8px; padding: 30px; text-align: center;\">\n                    <p style=\"margin: 0 0 10px; color: #ffffff; font-size: 16px; font-weight: 500;\">رمز الخصم الخاص بك (رقم هاتفك)</p>\n                    <p style=\"margin: 0; color: #ffffff; font-size: 36px; font-weight: 700; letter-spacing: 2px; font-family: 'Courier New', monospace;\">${discountCode}</p>\n                  </td>\n                </tr>\n              </table>\n              \n              <!-- Discount Details -->\n              <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" style=\"margin: 30px 0; background-color: #f8f9fa; border-radius: 8px; padding: 20px;\">\n                <tr>\n                  <td>\n                    <h3 style=\"margin: 0 0 15px; color: #17a35b; font-size: 20px; font-family: 'Rubik', sans-serif;\">✨ تفاصيل العرض</h3>\n                    <ul style=\"margin: 0; padding: 0 0 0 25px; color: #555555; line-height: 1.8;\">\n                      <li style=\"margin-bottom: 10px;\">خصم <strong>20%</strong> على جميع خدماتنا</li>\n                      <li style=\"margin-bottom: 10px;\">صالح لمدة <strong>6 أشهر</strong> من تاريخ التسجيل</li>\n                      <li style=\"margin-bottom: 10px;\">يمكن استخدامه في جميع زياراتك</li>\n                      <li>متاح في جميع فروع جدة</li>\n                    </ul>\n                  </td>\n                </tr>\n              </table>\n              \n              <p style=\"margin: 30px 0 0; color: #555555; font-size: 16px; line-height: 1.6;\">\n                احفظ هذا الرمز وأظهره عند زيارتك القادمة للاستفادة من الخصم الحصري!\n              </p>\n              \n              <p style=\"margin: 30px 0 0; color: #555555; font-size: 16px; line-height: 1.6;\">\n                نتطلع لرؤيتك قريباً! 🐾\n              </p>\n              \n              <p style=\"margin: 20px 0 0; color: #555555; font-size: 16px; line-height: 1.6;\">\n                مع أطيب التحيات،<br>\n                <strong style=\"color: #17a35b;\">فريق د. باوز</strong>\n              </p>\n            </td>\n          </tr>\n          \n          <!-- Footer -->\n          <tr>\n            <td style=\"background-color: #264653; padding: 30px; text-align: center;\">\n              <p style=\"margin: 0 0 10px; color: #ffffff; font-size: 16px; font-weight: 500;\">تواصل معنا</p>\n              <p style=\"margin: 0 0 5px; color: #a8dadc; font-size: 14px;\">📍 الرياض - الصحافة: 0552030564</p>\n              <p style=\"margin: 0 0 5px; color: #a8dadc; font-size: 14px;\">📍 الرياض - المطار: 0531353667</p>\n              <p style=\"margin: 0 0 15px; color: #a8dadc; font-size: 14px;\">📧 info@drpaws-sa.com</p>\n              <p style=\"margin: 20px 0 0; color: #a8dadc; font-size: 12px;\">© 2025 د. باوز - جميع الحقوق محفوظة</p>\n            </td>\n          </tr>\n        </table>\n      </td>\n    </tr>\n  </table>\n</body>\n</html>\n    `;\n  } else {\n    return `\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n  <link href=\"https://fonts.googleapis.com/css2?family=Rubik:wght@400;500;600&family=Poppins:wght@300;400;600;700&display=swap\" rel=\"stylesheet\">\n  <title>Your Discount Code</title>\n</head>\n<body style=\"margin: 0; padding: 0; font-family: 'Poppins', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; background-color: #f5f5f5;\">\n  <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" style=\"background-color: #f5f5f5; padding: 40px 20px;\">\n    <tr>\n      <td align=\"center\">\n        <table width=\"600\" cellpadding=\"0\" cellspacing=\"0\" style=\"background-color: #ffffff; border-radius: 12px; overflow: hidden; box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\">\n          <!-- Header -->\n          <tr>\n            <td style=\"background: linear-gradient(135deg, #17a35b 0%, #139049 100%); padding: 40px 30px; text-align: center;\">\n              <h1 style=\"margin: 0; color: #ffffff; font-size: 32px; font-weight: 600; font-family: 'Rubik', sans-serif;\">🎉 Welcome to Dr. Paws Family!</h1>\n            </td>\n          </tr>\n          \n          <!-- Body -->\n          <tr>\n            <td style=\"padding: 40px 30px;\">\n              <p style=\"margin: 0 0 20px; color: #333333; font-size: 18px; line-height: 1.6;\">\n                Dear ${firstName} ${lastName},\n              </p>\n              \n              <p style=\"margin: 0 0 20px; color: #555555; font-size: 16px; line-height: 1.6;\">\n                Thank you for registering for our Jeddah branch opening special offer! 🎊\n              </p>\n              \n              <p style=\"margin: 0 0 30px; color: #555555; font-size: 16px; line-height: 1.6;\">\n                We're excited to serve you and care for your beloved pets with the best veterinary services in the region.\n              </p>\n              \n              <!-- Discount Code Box -->\n              <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" style=\"margin: 30px 0;\">\n                <tr>\n                  <td style=\"background: linear-gradient(135deg, #f4a261 0%, #e76f51 100%); border-radius: 8px; padding: 30px; text-align: center;\">\n                    <p style=\"margin: 0 0 10px; color: #ffffff; font-size: 16px; font-weight: 500;\">Your Discount Code (Your Phone Number)</p>\n                    <p style=\"margin: 0; color: #ffffff; font-size: 36px; font-weight: 700; letter-spacing: 2px; font-family: 'Courier New', monospace;\">${discountCode}</p>\n                  </td>\n                </tr>\n              </table>\n              \n              <!-- Discount Details -->\n              <table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" style=\"margin: 30px 0; background-color: #f8f9fa; border-radius: 8px; padding: 20px;\">\n                <tr>\n                  <td>\n                    <h3 style=\"margin: 0 0 15px; color: #17a35b; font-size: 20px; font-family: 'Rubik', sans-serif;\">✨ Offer Details</h3>\n                    <ul style=\"margin: 0; padding: 0 0 0 25px; color: #555555; line-height: 1.8;\">\n                      <li style=\"margin-bottom: 10px;\"><strong>20% discount</strong> on all our services</li>\n                      <li style=\"margin-bottom: 10px;\">Valid for <strong>6 months</strong> from registration date</li>\n                      <li style=\"margin-bottom: 10px;\">Can be used on all your visits</li>\n                      <li>Available at all Jeddah Branches</li>\n                    </ul>\n                  </td>\n                </tr>\n              </table>\n              \n              <p style=\"margin: 30px 0 0; color: #555555; font-size: 16px; line-height: 1.6;\">\n                Save this code and show it during your next visit to enjoy your exclusive discount!\n              </p>\n              \n              <p style=\"margin: 30px 0 0; color: #555555; font-size: 16px; line-height: 1.6;\">\n                We look forward to seeing you soon! 🐾\n              </p>\n              \n              <p style=\"margin: 20px 0 0; color: #555555; font-size: 16px; line-height: 1.6;\">\n                Best regards,<br>\n                <strong style=\"color: #17a35b;\">Dr. Paws Team</strong>\n              </p>\n            </td>\n          </tr>\n          \n          <!-- Footer -->\n          <tr>\n            <td style=\"background-color: #264653; padding: 30px; text-align: center;\">\n              <p style=\"margin: 0 0 10px; color: #ffffff; font-size: 16px; font-weight: 500;\">Contact Us</p>\n              <p style=\"margin: 0 0 5px; color: #a8dadc; font-size: 14px;\">📍 Riyadh - Al-Sahafa: 0552030564</p>\n              <p style=\"margin: 0 0 5px; color: #a8dadc; font-size: 14px;\">📍 Riyadh - Al-Mather: 0531353667</p>\n              <p style=\"margin: 0 0 15px; color: #a8dadc; font-size: 14px;\">📧 info@drpaws-sa.com</p>\n              <p style=\"margin: 20px 0 0; color: #a8dadc; font-size: 12px;\">© 2025 Dr. Paws - All Rights Reserved</p>\n            </td>\n          </tr>\n        </table>\n      </td>\n    </tr>\n  </table>\n</body>\n</html>\n    `;\n  }\n};\n\nexport const sendDiscountConfirmationEmail = async (params: DiscountEmailParams): Promise<void> => {\n  const { email, firstName, language } = params;\n  \n  const subject = language === 'ar' \n    ? `🎉 رمز الخصم الخاص بك - د. باوز`\n    : `🎉 Your Discount Code - Dr. Paws`;\n  \n  const htmlContent = createEmailTemplate(params);\n  \n  try {\n    const client = getGraphClient();\n    \n    const sendMail = {\n      message: {\n        subject: subject,\n        body: {\n          contentType: 'HTML',\n          content: htmlContent\n        },\n        toRecipients: [\n          {\n            emailAddress: {\n              address: email\n            }\n          }\n        ]\n      },\n      saveToSentItems: 'true'\n    };\n\n    await client\n      .api(`/users/${process.env.MICROSOFT365_EMAIL}/sendMail`)\n      .post(sendMail);\n    \n    console.log(`Discount confirmation email sent successfully to ${email}`);\n  } catch (error) {\n    console.error('Error sending email:', error);\n    throw new Error('Failed to send confirmation email');\n  }\n};\n","size_bytes":12661}},"version":2}
>>>>>>> 4d8c53ddb7b9a82084561982faafd4fcc9babf4d
